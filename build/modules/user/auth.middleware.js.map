{"version":3,"file":"auth.middleware.js","sourceRoot":"","sources":["../../../src/modules/user/auth.middleware.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeEmailOrMobileTokenModel } from './change-email-or-mobile-token.model';\nimport { ResetPasswordTokenModel } from './reset-password-token.model';\nimport { AppModel } from './../app/app.model';\nimport { UserModel } from './user.model';\nimport { AccessTokenModel } from './access-token.model';\nimport { Request, Response, NextFunction } from 'express';\nimport { Query, ObjectId, NotificationEmailService, smsService } from '../../';\nimport moment from 'moment';\nlet debug = require('debug')('app:middleware:auth');\nexport class AuthMiddleware {\n\n\n  static getToken(req: Request, res: Response, next: NextFunction) {\n\n    let requestType: 'user-password' | 'double-auth';\n    if (req.body && req.body.username && req.body.password) requestType = 'user-password';\n    else if (req.body && req.body.token && req.body.code) requestType = 'double-auth';\n    else return next(new Error('Invalid request'));\n\n    let tokenPromise: Promise<AccessTokenModel>;\n\n    if (requestType === 'user-password') {\n      if (typeof req.body.username !== 'string' || typeof req.body.password !== 'string') return next(new Error('Invalid request'));\n      tokenPromise = UserModel.authUser(res.locals.app._id, req.body.username, req.body.password).then((user) => {\n        if (!user) throw new Error('Invalid username or password');\n        let token: AccessTokenModel;\n        if (res.locals.app.requireDoubleAuth || (user as UserModel).requireDoubleAuth) {\n          token = new AccessTokenModel();\n          token.init('double-auth', user._id, res.locals.app._id, 10, 'minutes');\n          // todo: notify user of his double auth code\n          return AuthMiddleware.notifyUserWithDoubleAuthCode(res.locals.app, req.body.username, (user as UserModel), token, req)\n            .then(() => token.insert());\n        } else {\n          token = new AccessTokenModel();\n          token.init('access', user._id, res.locals.app._id, 2, 'weeks');\n          res.locals.user = user;\n          return token.insert();\n        }\n      });\n    } else if (requestType === 'double-auth') {\n      if (typeof req.body.token !== 'string' || typeof req.body.code !== 'string') return next(new Error('Invalid request'));\n      tokenPromise = AccessTokenModel.getOneWithQuery({appId: res.locals.app._id, token: req.body.token, code: req.body.code}).then((validationToken) => {\n        if (!validationToken) throw new Error('Invalid code or token');\n        if (moment((validationToken as AccessTokenModel).expires).isBefore(moment())) throw new Error('Token has expired');\n        if ((validationToken as AccessTokenModel).userId === null) throw new Error('Broken token');\n        // validation token is valid, we can now get user and create access token\n        return UserModel.getOneWithId(((validationToken as AccessTokenModel).userId as ObjectId));\n      }).then((user) => {\n        if (!user) throw new Error('Broken token');\n        let token: AccessTokenModel = new AccessTokenModel();\n        token.init('access', user._id, res.locals.app._id, 2, 'weeks');\n        res.locals.user = user;\n        return token.insert();\n      });\n    } else {\n      return new Error('Invalid request');\n    }\n\n    tokenPromise.then((accessTokenElement) => {\n      return accessTokenElement.output();\n    }).then((accessTokenElement) => {\n      res.send(accessTokenElement);\n    }).catch(next);\n  }\n\n  static notifyUserWithDoubleAuthCode(app: AppModel, username: string, user: UserModel, token: AccessTokenModel, req: Request) {\n    let method = app.doubleAuthMethod;\n    if (!method || app.doubleAuthMethod === 'auto') {\n      if (username === user.email && user.mobile) method = 'sms';\n      else if (username === user.mobile) method = 'email';\n    }\n    if (!method) method = 'email';\n\n    let service: any;\n    let destination: string;\n    if (method === 'email') {\n      let emailServiceForApp = NotificationEmailService.serviceForApp(app);\n      service = emailServiceForApp;\n      destination = user.email;\n    } else {\n      service = smsService;\n      destination = user.mobile;\n    }\n\n    return service.send(destination, 'double-auth', {\n      app: app,\n      locale: req.body.locale,\n      user: user,\n      token: token,\n      device: {\n        ip: req.ip,\n        userAgent: req.headers['user-agent']\n      }\n    }).then((response: any) => {\n      if (!response) throw new Error('Failed to send validation notification');\n      return true;\n    });\n  }\n\n  static revokeToken(req: Request, res: Response, next: NextFunction) {\n    if (!req.body || !req.body.token) return next(new Error('Invalid request'));\n    if (typeof req.body.token !== 'string') return next(new Error('Invalid request'));\n    AccessTokenModel.getOneWithQuery({token: req.body.token}).then((accessTokenElement) => {\n      if (!accessTokenElement) return Promise.resolve(accessTokenElement);\n      return accessTokenElement.remove();\n    }).then((element) => {\n      res.sendStatus(204);\n    }).catch(next);\n  }\n\n  static tryAuthentication(appId: ObjectId, token: string): Promise<UserModel> {\n    return AccessTokenModel.getOneWithQuery({appId: appId, token: token}).then((accessToken) => {\n      if (!accessToken) throw new Error('Token not found');\n      let at: AccessTokenModel = (accessToken as AccessTokenModel);\n      if (moment(at.expires).isBefore(moment())) throw new Error('Token has expired');\n      // here we have a valid token, we can fetch the user\n      if (!at.userId) throw new Error('Token is missing userId');\n      return UserModel.getOneWithId(at.userId);\n    }).then((user) => {\n      if (!user) throw new Error('User not found');\n      return user;\n    });\n  }\n\n  public static async tryToAuthenticate(req: Request, res: Response): Promise<void> {\n    if (!res.locals.app) throw new Error('Missing App');\n    if (!req.headers.authorization) return;\n    if (res.locals._triedToAuthenticate) return;\n    let match = req.headers.authorization.match(/Bearer ([a-zA-Z0-9]*)/);\n    if (!match) return;\n\n    let token = match[1];\n\n    res.locals._triedToAuthenticate = true;\n    return AuthMiddleware.tryAuthentication(res.locals.app._id, token).then((user) => {\n      res.locals.user = user;\n    }).catch((error) => {\n      // ignore error\n      return;\n    });\n  }\n\n  static authenticate(req: Request, res: Response, next: NextFunction) {\n    if (!res.locals.app) return next(new Error('Missing App'));\n    if (!req.headers.authorization) return next(new Error('Missing authorization token'));\n    if (res.locals._triedToAuthenticate) return next('Access denied');\n    let match = req.headers.authorization.match(/Bearer ([a-zA-Z0-9]*)/);\n    if (!match) return next(new Error('Invalid authorization value'));\n\n    let token = match[1];\n\n    res.locals._triedToAuthenticate = true;\n    AuthMiddleware.tryAuthentication(res.locals.app._id, token).then((user) => {\n      res.locals.user = user;\n      next();\n    }).catch(next);\n  }\n\n  static authenticateWithoutError(req: Request, res: Response, next: NextFunction) {\n    if (!res.locals.app) return next(new Error('Missing App'));\n    if (!req.headers.authorization) return next();\n    if (res.locals._triedToAuthenticate) return next();\n    let match = req.headers.authorization.match(/Bearer ([a-zA-Z0-9]*)/);\n    if (!match) return next();\n\n    let token = match[1];\n\n    res.locals._triedToAuthenticate = true;\n    AuthMiddleware.tryAuthentication(res.locals.app._id, token).then((user) => {\n      res.locals.user = user;\n      next();\n    }).catch((error) => {\n      // ignore error\n      next();\n    });\n  }\n\n  static addAppIdInQuery(req: Request, res: Response, next: NextFunction) {\n    debug('[DEPRECATION WARNING]', 'addAppIdToBody should not be used as appId is automatically added to body in fetchWithPublicKey');\n    if (!res.locals.app) return next(new Error('Missing App'));\n    let query = (res.locals.query) ? res.locals.query : new Query();\n    if (query instanceof Query !== true) return next(new Error('res.locals.query is not a valid Query object'));\n    query.addQuery({appId: res.locals.app._id});\n    next();\n  }\n\n  static addAppIdFromParamsToQuery(req: Request, res: Response, next: NextFunction) {\n    if (!req.params || !req.params.appId) return next(new Error('Missing appId - did you forget to add a :appId in the route ?'));\n    let query = (res.locals.query) ? res.locals.query : new Query();\n    if (query instanceof Query !== true) return next(new Error('res.locals.query is not a valid Query object'));\n    try {\n      let appId = new ObjectId(req.params.appId);\n      query.addQuery({appId: appId});\n      return next();\n    } catch (e) {\n      return next(new Error('Invalid appId'));\n    }\n  }\n\n  // Check if the current logged in user has a role requested by the given prop in the app fetched by the apiKey\n  // detected with the apiKey\n  static checkUserRoleAccess(prop: 'adminUserRoles' | 'adminShopRoles' | 'adminThreeRoles') {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.app) return next(new Error('Missing App - did you forget to add a middleware to fetch the app?'));\n      if (!res.locals.user) return next(new Error('Missing User - did you forget to add a middleware to fetch the user?'));\n      //let parentAppId: ObjectId = res.locals.app.appId;\n      //let appId: ObjectId = res.locals.app._id;\n      //let userId: ObjectId = res.locals.user._id;\n  \n      \n      let authorizedRoles = res.locals.app[prop] || [];\n      for (let role of res.locals.user.roles || []) {\n        if (authorizedRoles.indexOf(role) !== -1) return next();\n      }\n  \n      return next(new Error('Access denied'));\n    }\n  }\n\n  // Check if the current logged in user has a role requested by the given prop in the paramApp (:appId)\n  // This will not check the role of the user in res.locals.user but in the paramApp.users array\n  static checkRoleViaParamApp(roles: string | Array<string>) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.user) return next(new Error('Missing User - did you forget to add a middleware to fetch the user?'));\n      if (!res.locals.paramApp) return next(new Error('Missing paramApp - did you forget to add a middleware to fetch the param app?'));\n  \n      let app: AppModel = res.locals.paramApp;\n      if (!app.users || !Array.isArray(app.users) || app.users.length === 0) return next(new Error('Access denied'));\n\n      if (typeof roles === 'string') roles = [roles];\n\n      for (let userIndex in app.users) {\n        let user = app.users[userIndex];\n        if (user._id.toString() === res.locals.user._id.toString()) {\n          for (let role of roles) {\n            if (user.roles.indexOf(role) !== -1) return next();\n          }\n          break;\n        }\n      }\n      return next(new Error('Access denied'));\n    }\n  }\n\n  static allowOnlyRoles(roles: Array<string> = []) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.user) return next(new Error('Missing User - did you forget to add a middleware to fetch the user?'));\n      if (!res.locals.user.roles) return next(new Error('Access denied'));\n      if (!Array.isArray(res.locals.user.roles)) return next(new Error('Access denied'));\n      if (res.locals.user.roles.length === 0) return next(new Error('Access denied'));\n      for (let index in roles) {\n        let role = roles[index];\n        if (res.locals.user.roles.indexOf(role) !== -1) return next();\n      }\n      return next(new Error('Access denied'));\n    }\n  }\n\n  static forgotPassword(req: Request, res: Response, next: NextFunction) {\n    if (!req.body || !req.body.q) return next(new Error('Invalid request'));\n    if (typeof req.body.q !== 'string') return next(new Error('Invalid request'));\n\n    let query: any = {\n      appId: res.locals.app._id\n    };\n    let qIs: 'email' | 'mobile';\n\n    if (req.body.q.indexOf('@') !== -1) {\n      // q is an email\n      query.email = req.body.q.toLowerCase();\n      query.emailValidated = true;\n      qIs = 'email';\n    } else {\n      // q is a mobile\n      query.mobile = req.body.q;\n      query.mobileValidated = true;\n      qIs = 'mobile';\n    }\n\n    UserModel.getOneWithQuery(query).then((user): any => {\n      if (!user) return next(new Error('User not found'));\n      let token: ResetPasswordTokenModel = new ResetPasswordTokenModel();\n      token.init(user._id, res.locals.app._id);\n      if (qIs === 'email' && (req.body.q as string).match(/^test([0-9]{0,4})@decoapi\\.com$/)) {\n        token.code = req.body.q + 'a1b2c3'; // use for test with emails such as test01@decoapi.com or test843@decoapi.com\n      }\n      if (qIs === 'mobile' && (req.body.q as string).match(/^\\+4170([0-9]{7})$/)) {\n        token.code = req.body.q + 'a1b2c3'; // use for test for mobiles such as 0702567760\n      }\n      return token.insert().then((token) => {\n        let service: any;\n        let destination: string;\n        if (qIs === 'email') {\n          let emailServiceForApp = NotificationEmailService.serviceForApp(res.locals.app);\n          service = emailServiceForApp;\n        } else {\n          service = smsService;\n        }\n        destination = req.body.q;\n        if (token.code && token.code.substr(-6) === `a1b2c3`) return Promise.resolve(token);\n        return service.send(destination, 'reset-password-code', {\n          app: res.locals.app,\n          locale: req.body.locale,\n          user: user,\n          token: token,\n          device: {\n            ip: req.ip,\n            userAgent: req.headers['user-agent']\n          }\n        }).then((response: any) => {\n          if (!response) throw new Error('Failed to send reset password notification');\n          return token;\n        });\n      });\n    }).then(token => token.output()).then(token => res.send(token)).catch(next);\n  }\n\n  static resetPassword(req: Request, res: Response, next: NextFunction) {\n    if (!req.body || !req.body.token || !req.body.code || !req.body.newPassword) return next(new Error('Invalid request'));\n    if (typeof req.body.token !== 'string') return next(new Error('Invalid request'));\n    if (typeof req.body.code !== 'string') return next(new Error('Invalid request'));\n    if (typeof req.body.newPassword !== 'string') return next(new Error('Invalid request'));\n\n    ResetPasswordTokenModel.getOneWithQuery({appId: res.locals.app._id, token: req.body.token, code: req.body.code}).then((resetToken) => {\n      if (!resetToken) throw new Error('Token not found');\n      let rt: ResetPasswordTokenModel = (resetToken as ResetPasswordTokenModel);\n      if (moment(rt.expires).isBefore(moment())) throw new Error('Token has expired');\n      // here we have a valid token, we can fetch the user\n      if (!rt.userId) throw new Error('Invalid User');\n      return UserModel.getOneWithId(rt.userId);\n    }).then((user) => {\n      if (!user) throw new Error('User not found');\n      (user as UserModel).generateHash(req.body.newPassword);\n      return user.update();\n    }).then(user => user.output()).then(user => res.send(user)).catch(next);\n  }\n\n\n  static passwordChange(req: Request, res: Response, next: NextFunction) {\n    if (!res.locals.user) return next(new Error('Invalid request'));\n    if (!req.body.currentPassword || !req.body.newPassword) return next(new Error('Invalid request'));\n    if (typeof req.body.currentPassword !== 'string') return next(new Error('Invalid request'));\n    if (typeof req.body.newPassword !== 'string') return next(new Error('Invalid request'));\n\n    UserModel.authUser(res.locals.user.appId, res.locals.user.email, req.body.currentPassword).then((user) => {\n      if (!user) throw new Error('Wrong current password');\n      user.generateHash(req.body.newPassword);\n      return user.update(['hash', 'hashUpdateDate']);\n    }).then((user) => {\n      if (user) {\n        res.sendStatus(204);\n        return;\n      }\n      throw new Error('Unkown error');\n    }).catch(next);\n  }\n\n  public static requestEmailOrMobileChange(type: 'email' | 'mobile') {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.user) return next(new Error('Invalid request'));\n      if (!res.locals.app) return next(new Error('Invalid request'));\n      if (!req.body[type]) return next(new Error('Invalid request'));\n      if (typeof req.body[type] !== 'string') return next(new Error('Invalid request'));\n  \n      let token = new ChangeEmailOrMobileTokenModel;\n      token.init(res.locals.user._id, res.locals.app._id, 20, 'minutes');\n      token.set(type, req.body[type]);\n      if (type === 'email' && (req.body[type] as string).match(/^test([0-9]{0,4})@decoapi\\.com$/)) {\n        token.code = req.body[type] + 'a1b2c3'; // use for test with emails such as test01@decoapi.com or test843@decoapi.com\n      }\n      if (type === 'mobile' && (req.body[type] as string).match(/^\\+4170([0-9]{7})$/)) {\n        token.code = req.body[type] + 'a1b2c3'; // use for test for mobiles such as 0702567760\n      }\n      token.insert().then((token) => {\n        if (!token) throw new Error('Unkown error');\n        let service: any;\n        let destination: string;\n        if (type === 'email') {\n          let emailServiceForApp = NotificationEmailService.serviceForApp(res.locals.app);\n          service = emailServiceForApp;\n        } else if (type === 'mobile') {\n          service = smsService;\n        }\n        destination = req.body[type];\n\n        if (token.code && token.code.substr(-6) === `a1b2c3`) return token.output();\n        return service.send(destination, 'change-email-or-mobile-code', {\n          app: res.locals.app,\n          locale: req.body.locale,\n          user: res.locals.user,\n          token: token,\n          type: type,\n          device: {\n            ip: req.ip,\n            userAgent: req.headers['user-agent']\n          }\n        }).then((response: any) => {\n          if (!response) throw new Error('Failed to send code to ' + req.body[type]);\n          return token.output();\n        });\n      }).then((token) => {\n        res.send(token);\n      }).catch(next);\n    }\n  }\n\n  public static validateEmailOrMobileChange(type: 'email' | 'mobile') {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.user) return next(new Error('Invalid request'));\n      if (!res.locals.app) return next(new Error('Invalid request'));\n      if (!req.body.token || !req.body.code) return next(new Error('Invalid request'));\n      if (typeof req.body.token !== 'string') return next(new Error('Invalid request'));\n      if (typeof req.body.code !== 'string') return next(new Error('Invalid request'));\n\n      ChangeEmailOrMobileTokenModel.getOneWithQuery({\n        token: req.body.token, \n        code: req.body.code, \n        type: type,\n        appId: res.locals.app._id, \n        userId: res.locals.user._id,\n      }).then((token) => {\n        if (!token) throw new Error('Token not found');\n        if (token.used) throw new Error('Token has been used already');\n        token.used = true;\n        // async save\n        token.update(['used']);\n        if (type === 'email') {\n          if (!token.newEmail) throw new Error('Invalid token');\n          res.locals.user.email = token.newEmail;\n          res.locals.user.emailValidated = true;\n          return res.locals.user.update(['email', 'emailValidated'])\n        } else if (type === 'mobile') {\n          if (!token.newMobile) throw new Error('Invalid token');\n          res.locals.user.mobile = token.newMobile;\n          res.locals.user.mobileValidated = true;\n          return res.locals.user.update(['mobile', 'mobileValidated'])\n        } else {\n          throw new Error('Unkown error');\n        }\n      }).then((user) => {\n        if (!user) throw new Error('Unkown error');\n        return user.output();\n      }).then((user) => {\n        res.send(user);\n      }).catch(next);\n    }\n  }\n\n\n}"]}