{"version":3,"file":"policy.middleware.controller.js","sourceRoot":"","sources":["../../../../src/modules/user/policy/policy.middleware.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { DynamicHelper, Policies } from '../../../';\nimport { ControllerMiddleware, Model, Query, ObjectId, ModelOperation } from '../../../';\nimport { Request, Response } from 'express';\nimport * as Models from '../../';\n\nlet debug = require('debug')('app:middleware:policy');\n\nexport class PolicyControllerMiddlware extends ControllerMiddleware {\n/*\n  get policy(): Policy {\n    if (!this.model) return {};\n    if ((this.model.prototype as any)._policy) return ((this.model.prototype as any)._policy as Policy)\n    if (Object.getPrototypeOf(this.model)._policy) return (Object.getPrototypeOf(this.model)._policy as Policy)\n    return {};\n  }\n*/\n  getPolicy(req: Request, res: Response): Policies.Policy {\n    if (!this.model) return {};\n    if ((this.model.prototype as any)._policy) return ((this.model.prototype as any)._policy as Policies.Policy)\n    if (Object.getPrototypeOf(this.model)._policy) return (Object.getPrototypeOf(this.model)._policy as Policies.Policy)\n    return {};\n  }\n\n  getModelAccessPolicy(req: Request, res: Response, operation: ModelOperation): Policies.ModelAccessPolicy | null {\n    let policy = this.getPolicy(req, res);\n    if (!policy) return null;\n    if ((policy as any)[`${operation}Policy`]) return (policy as any)[`${operation}Policy`];\n    else if ((operation === 'getAll' || operation === 'getOne') && policy.readModelPolicy) return policy.readModelPolicy;\n    else if ((operation === 'post' || operation === 'put' || operation === 'delete') && policy.writeModelPolicy) return policy.writeModelPolicy;\n    else if (policy.globalModelPolicy) return policy.globalModelPolicy;\n    return null;\n  }\n\n  getIOPolicies(req: Request, res: Response, operation: 'input' | 'output'): Array<Policies.IOPolicy> {\n    let policy = this.getPolicy(req, res);\n    if (!policy) return [];\n    if ((policy as any)[`${operation}Policy`]) return (policy as any)[`${operation}Policy`];\n    else if (policy.globalIOPolicy) return policy.globalIOPolicy;\n    return [];\n  }\n\n  extendGetAllQuery(query: Query, req: Request, res: Response): Promise<void> {\n    let modelAccessPolicyOrNull = this.getModelAccessPolicy(req, res, 'getAll');\n    if (modelAccessPolicyOrNull === null) return Promise.resolve();\n    let modelAccessPolicy: Policies.ModelAccessPolicy = modelAccessPolicyOrNull;\n\n    this.checkPublicPolicy(modelAccessPolicy, res, null);\n    this.checkIncludeRolePolicy(modelAccessPolicy, res);\n    this.checkExludeRolePolicy(modelAccessPolicy, res);\n\n    let hasPublicQuery: boolean = false;\n    let grantedAccessQueries: any = {$or: []};\n    \n    if (typeof modelAccessPolicy.public === 'string' && !res.locals.user) {\n      // require the public field to be true\n      hasPublicQuery = true;\n      let publicQuery: any = {};\n      publicQuery[modelAccessPolicy.public] = true;\n      grantedAccessQueries.$or.push(publicQuery);\n      //query.addQuery(publicQuery);\n    }\n    \n    if (modelAccessPolicy.userIdByProperty) {\n      if (!res.locals.user && !hasPublicQuery) throw new Error('Access denied');\n      if (res.locals.user) {\n        if (typeof modelAccessPolicy.userIdByProperty === 'string') modelAccessPolicy.userIdByProperty = [modelAccessPolicy.userIdByProperty];\n        if (Array.isArray(modelAccessPolicy.userIdByProperty)) {\n          for (let property of modelAccessPolicy.userIdByProperty) {\n            let query: any = {};\n            if (typeof property !== 'string') continue;\n            query[property] = {$in:[res.locals.user._id, res.locals.user._id.toString()]};\n            grantedAccessQueries.$or.push(query);\n          }\n        }\n      }\n    }\n\n    let queryByModelPromise = Promise.resolve();\n\n    if (modelAccessPolicy.queryByModel) {\n      if (!Array.isArray(modelAccessPolicy.queryByModel)) modelAccessPolicy.queryByModel = [modelAccessPolicy.queryByModel];\n      let promises: Array<Promise<any>> = [];\n      let orQuery: Array<any> = [];\n      for (let queryByModel of modelAccessPolicy.queryByModel) {\n        let query: any = {};\n        // check format\n        let promise = this.fetchModelIds(res, queryByModel.model, queryByModel.query).then((modelIds) => {\n          query[queryByModel.compareModelWithProperty] = {$in: modelIds};\n          orQuery.push(query);\n        });\n        promises.push(promise);\n      }\n      queryByModelPromise = Promise.all(promises).then((values) => {\n        if (orQuery.length) {\n          grantedAccessQueries.$or.push({$or: orQuery});\n        }\n        if (grantedAccessQueries.$or.length) {\n          query.addQuery(grantedAccessQueries);\n        }\n      });\n    } else {\n      if (grantedAccessQueries.$or.length) {\n        query.addQuery(grantedAccessQueries);\n      }\n    }\n\n    return queryByModelPromise;\n  }\n\n  getOneElement(element: Model, req: Request, res: Response): Promise<Model> {\n    return super.getOneElement(element, req, res).then((element) => {\n      return this.checkModelAccessPolicy('getOne', element, req, res);\n    });\n  }\n\n  postElement(element: Model, req: Request, res: Response): Promise<Model> {\n    return super.postElement(element, req, res).then((element) => {\n      return this.checkModelAccessPolicy('post', element, req, res);\n    });\n  }\n\n  putElement(element: Model, req: Request, res: Response): Promise<Model> {\n    return super.putElement(element, req, res).then((element) => {\n      return this.checkModelAccessPolicy('put', element, req, res);\n    });\n  }\n\n  deleteElement(element: Model, req: Request, res: Response): Promise<Model> {\n    return super.deleteElement(element, req, res).then((element) => {\n      return this.checkModelAccessPolicy('delete', element, req, res);\n    });\n  }\n\n  checkModelAccessPolicy(operation: ModelOperation, element: Model, req: Request, res: Response): Promise<Model> {\n    let modelAccessPolicyOrNull = this.getModelAccessPolicy(req, res, operation);\n    if (modelAccessPolicyOrNull === null) return Promise.resolve(element);\n    let modelAccessPolicy: Policies.ModelAccessPolicy = modelAccessPolicyOrNull;\n\n    let isPublic = this.checkPublicPolicy(modelAccessPolicy, res, element);\n    this.checkIncludeRolePolicy(modelAccessPolicy, res);\n    this.checkExludeRolePolicy(modelAccessPolicy, res);\n    \n    if (!isPublic && modelAccessPolicy.userIdByProperty) {\n      if (!res.locals.user) throw new Error('Access denied');\n      if (typeof modelAccessPolicy.userIdByProperty === 'string') modelAccessPolicy.userIdByProperty = [modelAccessPolicy.userIdByProperty];\n      if (Array.isArray(modelAccessPolicy.userIdByProperty)) {\n        let foundInAtLeastOne = false;\n        for (let property of modelAccessPolicy.userIdByProperty) {\n          if (typeof property !== 'string') continue;\n          let found = this.compareElementPropertyWithIds(element, property, [res.locals.user._id]);\n          foundInAtLeastOne = foundInAtLeastOne || found;\n        }\n        if (!foundInAtLeastOne) throw new Error('Access denied');\n      }\n    }\n\n    let queryByModelPromise = Promise.resolve();\n    //let userIdByRelatedModelAndPropertyPromise = Promise.resolve();\n\n    if (!isPublic && modelAccessPolicy.queryByModel) {\n      if (!Array.isArray(modelAccessPolicy.queryByModel)) modelAccessPolicy.queryByModel = [modelAccessPolicy.queryByModel];\n      let promises: Array<Promise<any>> = [];\n      for (let queryByModel of modelAccessPolicy.queryByModel) {\n        // check format\n        let promise = this.fetchModelIds(res, queryByModel.model, queryByModel.query).then((modelIds) => {\n          let found = this.compareElementPropertyWithIds(element, queryByModel.compareModelWithProperty, modelIds);\n          if (!found) return 0;\n          return 1\n        });\n        promises.push(promise);\n      }\n      queryByModelPromise = Promise.all(promises).then((values) => {\n        let totalScore = values.reduce((a, b) => a + b, 0);\n        if (totalScore < 1) throw new Error('Access denied');\n      })\n    }\n\n    return queryByModelPromise.then(() => {\n      return Promise.resolve(element);\n    });\n  }\n\n  checkPublicPolicy(modelAccessPolicy: Policies.ModelAccessPolicy, res: Response, element: Model | null): boolean | null{\n    if (modelAccessPolicy.public === true) return true;\n    if (modelAccessPolicy.public === false && !res.locals.user) throw new Error('Access denied 1');\n    if (modelAccessPolicy.public === false) return false;\n    if (element === null) {\n      // this happens when we check public policy in extendGetAllQuery\n      // we don't want to refuse access in this case but extend the query to include the\n      // field that we need to be true for public\n      return null;\n    }\n    if (typeof modelAccessPolicy.public === 'string' && (element as any)[modelAccessPolicy.public]) return true;\n    if (!res.locals.user) throw new Error('Access denied 2');\n    return false;\n  }\n\n  checkIncludeRolePolicy(modelAccessPolicy: Policies.ModelAccessPolicy, res: Response) {\n    if (modelAccessPolicy.roles && Array.isArray(modelAccessPolicy.roles) && modelAccessPolicy.roles.length) {\n      if (!res.locals.user) throw new Error('Access denied');\n      if (!res.locals.user.roles || !Array.isArray(res.locals.user.roles)) throw new Error('Access denied');\n      let found = modelAccessPolicy.roles.some(v => res.locals.user.roles.includes(v));\n      if (!found) throw new Error('Access denied');\n    }\n  }\n\n  checkExludeRolePolicy(modelAccessPolicy: Policies.ModelAccessPolicy, res: Response) {\n    if (modelAccessPolicy.excludeRoles && Array.isArray(modelAccessPolicy.excludeRoles) && modelAccessPolicy.excludeRoles.length) {\n      if (res.locals.user && res.locals.user.roles && Array.isArray(res.locals.user.roles)) {\n        let found = modelAccessPolicy.excludeRoles.some(v => res.locals.user.roles.includes(v));\n        if (found) throw new Error('Access denied');\n      }\n    }\n  }\n\n\n  fetchModelIds(res: Response, modelName: string, query: any): Promise<Array<ObjectId>> {\n    if (!res.locals.app) throw new Error('Missing app');\n    if (!res.locals.user) throw new Error('Missing user');\n\n    try {\n      for (let k1 in query) {\n        let v1 = query[k1];\n        if (v1 === \"$userId\") {\n          query[k1] = res.locals.user._id;\n        } else if (typeof v1 === 'object') {\n          for (let k2 in v1) {\n            let v2 = v1[k2];\n            if (v2 === \"$userId\") {\n              v1[k2] = res.locals.user._id;\n            }\n          }\n        }\n      }\n\n    } catch (e) {\n      throw new Error('Invalid policy');\n    }\n\n    let elementsPromise: Promise<Array<Model>> = Promise.resolve([]);\n\n    if ((Models as any)[modelName]) {\n      elementsPromise = ((Models as any)[modelName] as typeof Model).getAll(new Query(query));\n    } else {\n      elementsPromise = DynamicHelper.getElementInstances(res.locals.app, modelName, new Query(query))\n\n    }\n\n    return elementsPromise.then((elements) => {\n      return elements.map(i => i._id);\n    });\n\n  }\n\n  compareElementPropertyWithIds(element: Model, property: string, ids: Array<ObjectId>): boolean {\n    let idsString = ids.map(i => i.toString());\n    if (property.indexOf('.') !== -1) {\n      // todo: handle property name with dot (.) such as member.userId\n      return true;\n    } else {\n      let value = (element as any)[property];\n      if (!value) throw new Error('Access denied');\n      if (Array.isArray(value)) {\n        let valueStrings = value.map(i => i.toString());\n        let found = value.some(v => idsString.includes(v))\n        return found;\n      } else if (value instanceof ObjectId) {\n        return idsString.includes(value.toString());\n      } else if (typeof value === 'string') {\n        return idsString.includes(value);\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  preInput<T>(element: T, req: Request, res: Response): Promise<T> {\n    let ioPolicies = this.getIOPolicies(req, res, 'input');\n    if (ioPolicies.length === 0) return Promise.resolve(element);\n    this.applyIOPolicies(res, element, req.body, ioPolicies);\n    return Promise.resolve(element);\n  }\n\n  postOutput(element: any, req: Request, res: Response): Promise<any> {\n    let ioPolicies = this.getIOPolicies(req, res, 'output');\n    if (ioPolicies.length === 0) return Promise.resolve(element);\n    this.applyIOPolicies(res, element, element, ioPolicies);\n    return Promise.resolve(element);\n  }\n\n  postOutputList(elements: any, req: Request, res: Response): Promise<any> {\n    let ioPolicies = this.getIOPolicies(req, res, 'output');\n    if (ioPolicies.length === 0) return Promise.resolve(elements);\n    for (let element of elements) {\n      this.applyIOPolicies(res, element, element, ioPolicies);\n    }\n    return Promise.resolve(elements);\n  }\n\n  applyIOPolicies(res: Response, element: any, obj: any, ioPolicies: Array<Policies.IOPolicy>): void {\n    for (let ioPolicy of ioPolicies) {\n      if (!element && ioPolicy.ignoreOnPost === true) continue;\n      if (ioPolicy.context === '*') {\n        this.filterObjectWithIOPolicy(obj, ioPolicy);\n        return;\n      }\n      if (ioPolicy.context === 'userIdInProperty') {\n        if (!res.locals.user) throw new Error('Missing User');\n        if (!element) throw new Error('Missing element');\n        if (typeof ioPolicy.contextValue !== 'string') throw new Error('Invalid contextValue policy');\n        let found = this.compareElementPropertyWithIds(element, ioPolicy.contextValue, [res.locals.user._id]);\n        if (found) {\n          this.filterObjectWithIOPolicy(obj, ioPolicy);\n          return;\n        }\n      }\n      if (ioPolicy.context === 'roles') {\n        if (!res.locals.user) throw new Error('Missing User');\n        if (ioPolicy.contextValue && Array.isArray(ioPolicy.contextValue) && ioPolicy.contextValue.length) {\n          if (!res.locals.user.roles || !Array.isArray(res.locals.user.roles)) throw new Error('Mising User Roles');\n          let found = ioPolicy.contextValue.some(v => res.locals.user.roles.includes(v));\n          this.filterObjectWithIOPolicy(obj, ioPolicy);\n          return;\n        }\n      }\n    }\n  }\n\n  filterObjectWithIOPolicy(obj: any, ioPolicy: Policies.IOPolicy) {\n    if (ioPolicy.operation !== 'exclude') ioPolicy.operation = 'include';\n    let properties: Array<string>;\n    if (ioPolicy.properties === '*') {\n      properties = Object.keys(obj);\n    } else if (ioPolicy.properties === 'extractedFrom') {\n      let extractedFrom = ioPolicy.propertiesExtractedFrom || '';\n      let extractedPropertiesValue = obj[extractedFrom];\n      if (extractedPropertiesValue === undefined || extractedPropertiesValue === null) extractedPropertiesValue = [];\n      properties = extractedPropertiesValue;\n    } else {\n      properties = ioPolicy.properties;\n    }\n\n    if (!Array.isArray(properties)) {\n      // todo: decide what to do when this is wrong\n      throw new Error('Invalid properties for IO Policy');\n    }\n\n    for (let property in obj) {\n      if (ioPolicy.operation === 'include' && properties.indexOf(property) === -1) delete obj[property];\n      if (ioPolicy.operation === 'exclude' && properties.indexOf(property) !== -1) delete obj[property];\n    }\n    \n  }\n  \n}"]}