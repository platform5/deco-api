{"version":3,"file":"policy.controller.js","sourceRoot":"","sources":["../../../../src/modules/user/policy/policy.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { UserModel } from './../user.model';\nimport { AppModel } from './../../app/app.model';\nimport { AuthMiddleware } from './../auth.middleware';\nimport { ControllerMiddleware } from './../../../middlewares/controller';\nimport { NextFunction } from 'express';\nimport { ObjectId, Query, Model, GetAllOptions, GetOneOptions } from '../../../';\nimport { Request, Response } from 'express';\nimport resolvePath from 'object-resolve-path';\nimport { Policy, PolicyPointer, PolicyPointerConfig } from './policy.model';\nimport moment from 'moment';\nimport { traverse } from 'traverse-async';\nimport { policyContainer } from './policy.container';\nlet debug = require('debug')('app:controller:policy:middleware');\n\nexport class PolicyController extends ControllerMiddleware {\n\n  private async computePointer(pointer: PolicyPointer, req: Request, res: Response): Promise<any> {\n    if (typeof pointer === 'string' || typeof pointer === 'number' || typeof pointer === 'boolean' || Array.isArray(pointer)) {\n      return pointer;\n    }\n    \n    if (!pointer.type || pointer.type === 'default') {\n      return pointer.pointer;\n    } else if (pointer.type === 'property') {\n      let source: any;\n      if (pointer.propertySource === 'element') {\n        source = res.locals.element;\n      } else if (pointer.propertySource === 'res.locals') {\n        if (pointer.pointer && pointer.pointer.substr(0, 4) === 'user' && !res.locals.user) {\n          await AuthMiddleware.tryToAuthenticate(req, res);\n        }\n        source = res.locals;\n      } else if (pointer.propertySource === 'req.query') {\n        source = req.query;\n      } else if (pointer.propertySource === 'req.params') {\n        source = req.params;\n      }\n      return resolvePath(source, pointer.pointer);\n    } else if (pointer.type === 'query') {\n      await this.traversePointerQuery(pointer, req, res);\n      let model: typeof Model;\n      if (pointer.queryModel === 'App') { model = AppModel; }\n      else if (pointer.queryModel === 'User') { model = UserModel; }\n      else if (typeof pointer.queryModel === 'string' && policyContainer.getQueryModel(pointer.queryModel)) {\n        model = policyContainer.getQueryModel(pointer.queryModel);\n      } else {\n        throw new Error('Query Model ' + pointer.queryModel + ' not yet implemented');\n      }\n      if (pointer.queryType !== 'many') {\n        let element = await model.getOneWithQuery(pointer.query);\n        return resolvePath(element, pointer.pointer);\n      } else {\n        throw new Error('Query many in pointer is not implemented yet');\n      }\n    }\n  }\n\n  private async traversePointerQuery(pointer: PolicyPointerConfig, req: Request, res: Response) {\n    const __this = this;\n    await new Promise((resolve) => {\n      traverse(pointer.query, async function (node, next) {\n        let val = node;\n        if (typeof val !== 'string') return next();\n        if (val.substr(0, 5) == '$req.') {\n          val = resolvePath(req, val.substr(5));\n          // try to convert to ObjectId\n          if (val.length === 32 && this.key && (this.key === '_id' || this.key.substr(-2) === 'Id')) {\n            try {\n              val = new ObjectId(val);\n            } catch (error) {\n              // ignore error\n            }\n          }\n          this.parent[this.key] = val;\n        } else if (val.substr(0, 5) == '$res.') {\n          if (val.substr(5, 11) === 'locals.user' && !res.locals.user) {\n            try {\n              await AuthMiddleware.tryToAuthenticate(req, res);\n            } catch (error) {\n              // ignore\n            }\n          }\n          val = resolvePath(res, val.substr(5));\n          this.parent[this.key] = val;\n        } else if (val === '$now') {\n          val = moment().toDate();\n          this.parent[this.key] = val;\n        }\n        return next();\n      }, () => {\n        resolve(null);\n      });\n    });\n  }\n\n  public registerPolicyMountingPoint(key: string | string[]) {\n    return PolicyController.registerPolicyMountingPoint(key);\n  }\n\n  public static registerPolicyMountingPoint(key: string | string[]) {\n    return (_req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.policyMounts) {\n        res.locals.policyMounts = [];\n      }\n      if (!Array.isArray(key)) {\n        key = [key];\n      }\n      res.locals.policyMounts.push(...key);\n      next();\n    }\n  }\n\n  private mountPolicies(res: Response) {\n    if (!res.locals.policyMounts) return;\n    if (!res.locals.policy) {\n      res.locals.policy = new Policy();\n    }\n    const policy: Policy = res.locals.policy;\n    for (let mountingPoint of res.locals.policyMounts) {\n      for (let newPolicy of policyContainer.get(mountingPoint)) {\n        policy.extend(newPolicy);\n      }\n    }\n  }\n\n  public addPolicy(newPolicy: Policy | Policy[]) {\n    return PolicyController.addPolicy(newPolicy);\n  }\n\n  public static addPolicy(newPolicy: Policy | Policy[]) {\n    return (_req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.policy) {\n        res.locals.policy = new Policy();\n      }\n      const policy: Policy = res.locals.policy;\n      if (!Array.isArray(newPolicy)) { newPolicy = [newPolicy]};\n      for (let newPolicyItem of newPolicy) {\n        policy.extend(newPolicyItem);\n      }\n      next();\n    }\n  }\n\n  public checkRoutePolicy() {\n    return async(req: Request, res: Response, next: NextFunction) => {\n      this.mountPolicies(res);\n      if (!res.locals.policy?.route) {\n        return next();\n      }\n      try {\n\n        const policy: Policy = (res.locals.policy as Policy).clone();\n        for (let rule of policy.route || []) {\n          if (rule.method?.length) {\n            if (rule.method.indexOf(req.method.toLowerCase()) === -1) {\n              // ignore rules that target specific methods\n              continue;\n            }\n          }\n          // determine if policy should apply by checking its conditions\n          let ruleIsRelevant = false;\n          rule.conditions = Array.isArray(rule.conditions) ? rule.conditions : [rule.conditions];\n          rule.conditionsOperator = rule.conditionsOperator || 'and';\n          for (let condition of rule.conditions) {\n            let key = await this.computePointer(condition.key, req, res);\n            let value = condition.value ? await this.computePointer(condition.value, req, res) : undefined;\n            let conditionMatch: boolean = true;\n            if (condition.operation === 'equals') {\n              conditionMatch = key === value;\n            } else if (condition.operation === 'exists') {\n              conditionMatch = key !== undefined;\n            } else if (condition.operation === '!exists') {\n              conditionMatch = key === undefined;\n            } else if (condition.operation === 'include') {\n              if (!Array.isArray(key)) {\n                key = [key];\n              }\n              if (!Array.isArray(value)) {\n                value = [value];\n              }\n              conditionMatch = value.filter((v: any) => key.includes(v)).length !== 0;\n            } else if (condition.operation === 'exclude') {\n              if (!Array.isArray(key)) {\n                key = [key];\n              }\n              if (!Array.isArray(value)) {\n                value = [value];\n              }\n              conditionMatch = value.filter((v: any) => key.includes(v)).length === 0;\n            }\n            if (conditionMatch && rule.conditionsOperator === 'or') {\n              ruleIsRelevant = true;\n              break;\n            } else if (!conditionMatch && rule.conditionsOperator === 'and') {\n              ruleIsRelevant = false;\n              break;\n            }\n            if (conditionMatch) {\n              ruleIsRelevant = true;\n            }\n          }\n          if (ruleIsRelevant && rule.access === false) {\n            throw new Error('Access denied');\n          } else if (!ruleIsRelevant && (rule.access === undefined || rule.access === true)) {\n            throw new Error('Access denied');\n          }\n        }\n        next();\n      } catch (error) {\n        next(error);\n      }\n    }\n  }\n\n  public extendGetAllQuery(query: Query, req: Request, res: Response, options: GetAllOptions): Promise<void> {\n    return this.checkAccessPolicy(query, req, res, options);\n  }\n\n  public extendGetOneQuery(query: Query, req: Request, res: Response, options: GetOneOptions): Promise<void> {\n    return this.checkAccessPolicy(query, req, res, options);\n  }\n\n\n  public async checkAccessPolicy(query: Query, req: Request, res: Response, options: GetAllOptions | GetOneOptions): Promise<void> {\n    if (!res.locals.policy?.access) {\n      return;\n    }\n    const policy: Policy = (res.locals.policy as Policy).clone();\n    for (let rule of policy.access || []) {\n      if (rule.method?.length) {\n        if (rule.method.indexOf(req.method.toLowerCase()) === -1) {\n          // ignore rules that target specific methods\n          continue;\n        }\n      }\n      // determine if policy should apply by checking its conditions\n      let queries: Array<Query> = [];\n      rule.conditions = Array.isArray(rule.conditions) ? rule.conditions : [rule.conditions];\n      for (let condition of rule.conditions) {\n        if (typeof condition.key !== 'string') {\n          throw new Error('Policy Rule Key must be string for access policies');\n        }\n        let key = condition.key;\n        if (condition.value && typeof condition.value !== 'string' && typeof condition.value !== 'number' && typeof condition.value !== 'boolean' && !Array.isArray(condition.value)) {\n          if (condition.value.propertySource === 'element') {\n            throw new Error('Policy Rule value cannot be of `element` source for access policies, consider using a route policy for this');\n          }\n        }\n        let value = condition.value ? await this.computePointer(condition.value, req, res) : undefined;\n        let ruleQuery = new Query();\n        if (condition.operation === 'equals' && key !== value) {\n          ruleQuery.addQueryForKey(key, value);\n        } else if (condition.operation === 'exists' && key === undefined) {\n          ruleQuery.addQueryForKey(key, {$exists: true});\n        } else if (condition.operation === '!exists' && key !== undefined) {\n          ruleQuery.addQueryForKey(key, {$exists: false})\n        } else if (condition.operation === 'include') {\n          ruleQuery.addQueryForKey(key, {$in: value});\n        } else if (condition.operation === 'exclude') {\n          ruleQuery.addQueryForKey(key, {$nin: value});\n        }\n        if (ruleQuery) {\n          queries.push(ruleQuery);\n        }\n      }\n      if (rule.conditionsOperator === 'or') {\n        query.addQuery({$or: queries.map(q => q.onlyQuery())});\n      } else {\n        query.addQuery({$and: queries.map(q => q.onlyQuery())});\n      }\n    }\n  }\n\n  // public async extendGetAllQuery(query: Query, req: Request, res: Response): Promise<void> {\n  //   const policy: Policy = res.locals.policy;\n  //   if (!policy?.access) {\n  //     return;\n  //   }\n\n  //   for (let rule of policy.access) {\n  //     let value = await this.computeValue(rule, req, res);\n  //     let key = rule.key; //  this.computeSpecialProperty(rule.key, req, res); // I don't think computing here makes any sense ?\n      \n  //     if (rule.type === 'property') {\n  //       let query: any = {};\n  //       if (rule.operation === 'equals') {\n  //         query[key] = value;\n  //       } else if (rule.operation === 'exists' || rule.operation === '!exists') {\n  //         query[key] = {$exists: rule.operation === 'exists'};\n  //       } else if (rule.operation === 'include') {\n  //         query[key] = {$in: value}\n  //       } else if (rule.operation === 'exclude') {\n  //         query[key] = {$nin: value}\n  //       }\n  //       query.addQuery()\n  //     }\n  //   }\n\n  //   return Promise.resolve();\n  // }\n\n\n}\n\n\n\n\n\n"]}