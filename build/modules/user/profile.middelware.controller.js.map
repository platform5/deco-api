{"version":3,"file":"profile.middelware.controller.js","sourceRoot":"","sources":["../../../src/modules/user/profile.middelware.controller.ts"],"names":[],"mappings":";;AAAA,uDAAmD;AACnD,mDAA+C;AAC/C,6CAAyC;AACzC,+DAAsE;AAEtE,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,qCAAqC,CAAC,CAAC;AAEpE,MAAa,2BAA4B,SAAQ,iCAAoB;IAEnE,iBAAiB;QACf,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACzD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI;gBAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG;gBAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;YAC7D,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,YAAY,sBAAS,KAAK,IAAI;gBAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;YAC1F,4BAAY,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBACtG,IAAI,OAAO;oBAAE,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC7C,IAAI,UAAU,GAAG,IAAI,4BAAY,CAAC;gBAClC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;gBACtC,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACxC,OAAO,UAAU,CAAC,MAAM,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBAClB,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBAClB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,oCAAoC,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAClF,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS;YAAE,OAAO,IAAI,EAAE,CAAC;QACpD,OAAO,gCAAc,CAAC,YAAY,CAAA;IACpC,CAAC;CACF;AAzBD,kEAyBC","sourcesContent":["import { AuthMiddleware } from './auth.middleware';\nimport { ProfileModel } from './profile.model';\nimport { UserModel } from './user.model';\nimport { ControllerMiddleware } from './../../middlewares/controller';\nimport { Request, Response, NextFunction } from 'express';\nlet debug = require('debug')('app:middlewares:controllers:profile');\n\nexport class ProfileControllerMiddleware extends ControllerMiddleware {\n\n  getCurrentProfile() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.user) return next(new Error('User not found'));\n      if (!res.locals.app) return next(new Error('App not found'));\n      if (res.locals.user instanceof UserModel !== true) return next(new Error('Invalid user'));\n      ProfileModel.getOneWithQuery({appId: res.locals.app._id, userId: res.locals.user._id}).then((profile) => {\n        if (profile) return Promise.resolve(profile);\n        let newProfile = new ProfileModel;\n        newProfile.appId = res.locals.app._id;\n        newProfile.userId = res.locals.user._id;\n        return newProfile.insert();\n      }).then((profile) => {\n        return profile.output();\n      }).then((profile) => {\n        res.send(profile);\n      });\n    };\n  }\n\n  authenticateExceptForPictureDownload(req: Request, res: Response, next: NextFunction) {\n    if (req.query.download === 'picture') return next();\n    return AuthMiddleware.authenticate\n  }\n}"]}