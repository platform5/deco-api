{"version":3,"file":"user.middleware.controller.js","sourceRoot":"","sources":["../../../src/modules/user/user.middleware.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { ValidationTokenModel } from './validation-token.model';\nimport { AppModel } from './../app/app.model';\nimport { UserModel } from './user.model';\nimport { ControllerMiddleware } from './../../middlewares/controller';\nimport { Request, Response, NextFunction } from 'express';\nimport { Model, ObjectId, Query, StringTMap } from '../../';\nimport { smsService, NotificationEmailService} from '../../';\nimport moment from 'moment';\nimport { appEvents } from '../../helpers';\nlet debug = require('debug')('app:middleware:user');\n\nexport class UserControllerMiddleware extends ControllerMiddleware {\n\n  private ignoreEmailsForTestAccounts = false;\n\n  public validateAndPost() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (req.body.token && req.body.emailCode && req.body.mobileCode) {\n        this.validateTokenAndInsert('both', req, res, next);\n      } else if (req.body.token && req.body.emailCode) {\n        this.validateTokenAndInsert('email', req, res, next);\n      } else if (req.body.token && req.body.mobileCode) {\n        this.validateTokenAndInsert('mobile', req, res, next);\n      } else {\n        this.createUserAndToken(req, res, next);\n      }\n    };\n  }\n\n  public resendCode(req: Request, res: Response, next: NextFunction) {\n    if (!res.locals.app.openUserRegistration) return next(new Error('User registration not allowed for this app'));\n    if (!req.body.token) return next(new Error('Missing token'));\n    if (!req.body.method) return next(new Error('Missing method'));\n    if (req.body.method !== 'email' && req.body.method !== 'mobile') return next(new Error('Invalid method'));\n\n    \n    let now = moment().toDate();\n    let query: any = {token: req.body.token, expires: {$gte: now}, userCreated: false};\n    \n    ValidationTokenModel.getOneWithQuery(query).then((token): Promise<ValidationTokenModel> => {\n      if (!token) throw new Error('Token not found');\n      if (!token.data) throw new Error('Invalid token');\n      if (req.body.method === 'email' && token.emailValidated) throw new Error('Email is already validated for this token');\n      if (req.body.method === 'mobile' && token.mobileValidated) throw new Error('Mobile is already validated for this token');\n      \n      if (req.body.method === 'email') {\n        let emailServiceForApp = NotificationEmailService.serviceForApp(res.locals.app);\n        return emailServiceForApp.send((token.data as any).email, 'validate-email', {\n          app: res.locals.app,\n          locale: req.body.locale,\n          user: token.data,\n          token: token,\n          device: {\n            ip: req.ip,\n            userAgent: req.headers['user-agent']\n          }\n        }).then((response: any) => {\n          if (!response) {\n            if (!Array.isArray(token.logs)) token.logs = [];\n            token.logs.push({\n              action: 'resendCode',\n              error: 'Failed to send validation email',\n              data: response\n            });\n            token.update(['logs']);\n            throw new Error('Failed to send validation email');\n          }\n          return token;\n        });\n      } else if (req.body.method === 'mobile') {\n        return smsService.send((token.data as any).mobile, 'validate-email', {\n          app: res.locals.app,\n          locale: req.body.locale,\n          user: token.data,\n          token: token,\n          device: {\n            ip: req.ip,\n            userAgent: req.headers['user-agent']\n          }\n        }).then((response: any) => {\n          if (!Array.isArray(token.logs)) token.logs = [];\n          token.logs.push({\n            action: 'resendCode',\n            error: 'Failed to send validation SMS',\n            data: response\n          });\n          token.update(['logs']);\n          if (!response) throw new Error('Failed to send validation SMS');\n          return token;\n        });\n      } else {\n        throw new Error('Unkown error');\n      }\n    }).then((token) => {\n      token.expires = moment().add(24, 'hours').toDate();\n      return token.update(['expires']);\n    }).then((token) => {\n      return token.output();\n    }).then((element) => {\n      res.locals.element = element;\n      res.send(element);\n    }).catch(next);\n  }\n\n  private createUserAndToken(req: Request, res: Response, next: NextFunction) {\n    if (!res.locals.app.openUserRegistration) return next(new Error('User registration not allowed for this app'));\n    if (!req.body || !req.body.password) return next(new Error('Missing password'));\n    return this.model.instanceFromRequest(req, res).then((element: Model) => {\n      // here we have a valid user ready to be created\n      // we save it inside a token a request validation\n      (element as UserModel).generateHash(req.body.password);\n      return element.toDocument('insert').then(updateQuery => updateQuery.getInsertDocument());\n    }).then((element) => {\n      let token = new ValidationTokenModel();\n      token.init('create-user');\n      token.appId = element.appId;\n      token.data = element;\n      token.extraData = req.body.extraData ? req.body.extraData : undefined;\n      // we do not check for appId in the case of email\n      // because we only accept @decoapi.ch emails\n      // and it allow us to use this test door for any application in our system\n      if (element.email && (element.email as string).match(/^test([0-9]{0,4})@decoapi\\.com$/)) {\n        token.emailCode = element.email + 'a1b2c3'; // use for test with emails such as test01@decoapi.com or test843@decoapi.com\n      }\n      if (element.mobile && (element.mobile as string).match(/^\\+4170([0-9]{7})$/)) {\n        token.mobileCode = element.mobile + 'a1b2c3'; // use for test for mobiles such as +41702567760\n      }\n      return token.insert();\n    }).then((tokenElement) => {\n      // send email for validation and return token\n      let app: AppModel = (res.locals.app as AppModel);\n      if (app.createAccountValidation === 'mobileOnly' || app.createAccountValidation === 'none' || !req.body.email) {\n        return Promise.resolve(tokenElement);\n      }\n      let emailServiceForApp = NotificationEmailService.serviceForApp(res.locals.app);\n      if (this.ignoreEmailsForTestAccounts && tokenElement.emailCode === `${tokenElement.data.email}a1b2c3`) return Promise.resolve(tokenElement);\n      return emailServiceForApp.send(tokenElement.data.email, 'validate-email', {\n        app: res.locals.app,\n        locale: req.body.locale,\n        user: tokenElement.data,\n        token: tokenElement,\n        device: {\n          ip: req.ip,\n          userAgent: req.headers['user-agent']\n        }\n      }).then((response: any) => {\n        if (!response) {\n          if (!Array.isArray(tokenElement.logs)) tokenElement.logs = [];\n          tokenElement.logs.push({\n            action: 'createUserAndToken',\n            error: 'Failed to send validation email',\n            data: response\n          });\n          tokenElement.update(['logs']);\n          throw new Error('Failed to send validation email');\n        }\n        return tokenElement;\n      });\n    }).then((tokenElement) => {\n      // send SMS for validation and return token\n      let app: AppModel = (res.locals.app as AppModel);\n      if (app.createAccountValidation === 'emailOnly' || app.createAccountValidation === 'none' || !req.body.mobile) {\n        return Promise.resolve(tokenElement);\n      }\n      if (tokenElement.mobileCode === `${tokenElement.data.mobile}a1b2c3`) return Promise.resolve(tokenElement);\n      return smsService.send(tokenElement.data.mobile, 'validate-email', {\n        app: res.locals.app,\n        locale: req.body.locale,\n        user: tokenElement.data,\n        token: tokenElement,\n        device: {\n          ip: req.ip,\n          userAgent: req.headers['user-agent']\n        }\n      }).then((response: any) => {\n        if (!response) {\n          if (!Array.isArray(tokenElement.logs)) tokenElement.logs = [];\n          tokenElement.logs.push({\n            action: 'createUserAndToken',\n            error: 'Failed to send validation SMS',\n            data: response\n          });\n          tokenElement.update(['logs']);\n          throw new Error('Failed to send validation SMS');\n        }\n        return tokenElement;\n      });\n    }).then((tokenElement) => {\n      return tokenElement.output();\n    }).then((tokenElement) => {\n      if ((res.locals.app as AppModel).createAccountValidation === 'none') {\n        UserModel.instanceFromDocument(tokenElement.data).then(user => user.insert()).then(user => user.output()).then(user => res.send(user)).catch(next);\n      } else {\n        tokenElement.createAccountValidation = res.locals.app.createAccountValidation;\n        res.send(tokenElement);\n      }\n    }).catch(next);\n  }\n\n  private validateTokenAndInsert(method: 'email' | 'mobile' | 'both', req: Request, res: Response, next: NextFunction) {\n    let now = moment().toDate();\n\n    let query: any = {token: req.body.token, expires: {$gte: now}};\n    if (method === 'email' || method === 'both') query.emailCode = req.body.emailCode;\n    if (method === 'mobile' || method === 'both') query.mobileCode = req.body.mobileCode;\n    let validated = false;\n    let extraData: any;\n    let user: UserModel;\n\n    return ValidationTokenModel.getOneWithQuery(query).then((token) => {\n      if (!token) throw new Error('Token not found or invalid');\n      // flag the token as validated for the current method\n      let t = (token as ValidationTokenModel);\n      if (method === 'email' || method === 'both') t.emailValidated = true;\n      if (method === 'mobile' || method === 'both') t.mobileValidated = true;\n      // flag the user as validated for the current method\n      if (t.emailValidated) (t.data as any).emailValidated = true;\n      if (t.mobileValidated) (t.data as any).mobileValidated = true;\n      return token.update();\n    }).then((token) => {\n      let app: AppModel = res.locals.app;\n      let t: ValidationTokenModel = (token as ValidationTokenModel);\n      if (app.createAccountValidation === 'none') {\n        validated = true;\n      } else if (app.createAccountValidation === 'emailOnly' && t.emailValidated) {\n        validated = true;\n      } else if (app.createAccountValidation === 'mobileOnly' && t.mobileValidated) {\n        validated = true;\n      } else if (app.createAccountValidation === 'emailOrMobile' && (t.mobileValidated || t.emailValidated)) {\n        validated = true;\n      } else if (app.createAccountValidation === 'emailAndMobile' && (t.mobileValidated && t.emailValidated)) {\n        validated = true;\n      }\n\n      // if not validated, we simply return the token\n      if (!validated) return t.output();\n      // if validated, if the user has not yet been created, we create it and indicate in the token that the user is created\n      if (!t.userCreated) {\n        t.userCreated = true;\n        extraData = t.extraData;\n        return t.update().then(() => {\n          return UserModel.instanceFromDocument(t.data).then(user => user.insert()).then((u) => {\n            user = u;\n            return user.output();\n          });\n        });\n      } else {\n        // if the user is already created, we must update the validate flags\n        return UserModel.getOneWithQuery({appId: app._id, mobile: (t.data as any).mobile, email: (t.data as any).email}).then((u) => {\n          if (!u) throw new Error('Invalid request');\n          user = u;\n          u.emailValidated = t.emailValidated;\n          u.mobileValidated = t.mobileValidated;\n          return u.update(['emailValidated', 'mobileValidated']);\n        }).then(user => user.output());\n      }\n    }).then(async (element) => {\n      // if the element is a token, we want to add the app.createAccountValidation to it\n      if (element.token) {\n        element.createAccountValidation = res.locals.app.createAccountValidation;\n      }\n      appEvents.emit('user:created', user, extraData);\n      // if the token is validated, return the user\n      // otherwise return the token again\n      res.send(element);\n    }).catch(next);\n  }\n\n  getCurrentUser() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.user) return next(new Error('User not found'));\n      if (res.locals.user instanceof UserModel !== true) return next(new Error('Invalid user'));\n      res.locals.user.output().then((user: any) => {\n        res.send(user);\n      });\n    };\n  }\n\n  getOneElement(element: Model, req: Request, res: Response): Promise<Model> {\n    if (req.params && req.params.appId) {\n      if ((element as UserModel).appId !== null && ((element as UserModel).appId as ObjectId).toString() !== req.params.appId) throw new Error('Access Denied');\n    } else if (res.locals.app) {\n      if ((element as UserModel).appId !== null && ((element as UserModel).appId as ObjectId).toString() !== res.locals.app._id.toString()) throw new Error('Access Denied');\n    }\n    return Promise.resolve(element);\n  }\n\n  putElement(element: Model, req: Request, res: Response): Promise<Model> {\n    if (req.params && req.params.appId) {\n      if ((element as UserModel).appId !== null && ((element as UserModel).appId as ObjectId).toString() !== req.params.appId) throw new Error('Access Denied');\n    } else if (res.locals.app) {\n      if ((element as UserModel).appId !== null && ((element as UserModel).appId as ObjectId).toString() !== res.locals.app._id.toString()) throw new Error('Access Denied');\n    }\n    return Promise.resolve(element);\n  }\n\n  deleteElement(element: Model, req: Request, res: Response): Promise<Model> {\n    if (req.params && req.params.appId) {\n      if ((element as UserModel).appId !== null && ((element as UserModel).appId as ObjectId).toString() !== req.params.appId) throw new Error('Access Denied');\n    } else if (res.locals.app) {\n      if ((element as UserModel).appId !== null && ((element as UserModel).appId as ObjectId).toString() !== res.locals.app._id.toString()) throw new Error('Access Denied');\n    }\n    return Promise.resolve(element);\n  }\n\n  public outputSearch(req: Request, res: Response, next: NextFunction) {\n    let elements: Array<any> = res.locals.elements;\n    let results: Array<any> = [];\n    for (let index in elements) {\n      let element = elements[index];\n      results.push({\n        id: element.id,\n        firstname: element.firstname,\n        lastname: element.lastname,\n        picture: (element.profile && element.profile.picture) ? element.profile.picture : null,\n        profileId: (element.profile && element.profile.id) ? element.profile.id : null\n      });\n    }\n    res.send(results);\n  }\n\n  onlyUsersInvitedInParamApp(req: Request, res: Response, next: NextFunction) {\n    let query = (res.locals.query) ? res.locals.query : new Query();\n    let rightInstance = query instanceof Query;\n    if (!rightInstance) return next(new Error('res.locals.query is not a valid Query object'));\n    if (!res.locals.paramApp) return next(new Error('Missing paramApp'));\n    rightInstance = res.locals.paramApp instanceof AppModel;\n    if (!rightInstance) return next(new Error('res.locals.paramApp is not a valid AppModel object'));\n    let paramApp = (res.locals.paramApp as AppModel);\n    let userIds = paramApp.users.map(i => i._id);\n    res.locals.query.addQuery({_id: {$in: userIds}});\n    next();\n  }\n\n  outputParamAppRoles(req: Request, res: Response, next: NextFunction) {\n    let query = (res.locals.query) ? res.locals.query : new Query();\n    if (!res.locals.paramApp) return next(new Error('Missing paramApp'));\n    let rightInstance = res.locals.paramApp instanceof AppModel;\n    if (!rightInstance) return next(new Error('res.locals.paramApp is not a valid AppModel object'));\n    if (!res.locals.elements) return next(new Error('Missing elements'));\n    let rolesByUserId: StringTMap<Array<string>> = {};\n    let paramApp = (res.locals.paramApp as AppModel);\n    for (let user of paramApp.users) {\n      rolesByUserId[user._id.toString()] = user.roles;\n    }\n    for (let element of res.locals.elements) {\n      element.roles = rolesByUserId[element.id];\n    }\n    res.send(res.locals.elements);\n  }\n\n  hideOnboarding(req: Request, res: Response, next: NextFunction) {\n    if (!res.locals.user) return next(new Error('Missing user'));\n    let rightInstance = res.locals.user instanceof UserModel;\n    if(!rightInstance) return next(new Error('Invalid user'));\n    let user: UserModel = res.locals.user;\n    user.hideOnboarding = true;\n    user.update(['hideOnboarding']).then((user) => {\n      return user.output();\n    }).then((user) => {\n      res.send(user);\n    }).catch(next);\n  }\n}\n"]}