{"version":3,"file":"user.controller.js","sourceRoot":"","sources":["../../../src/modules/user/user.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { ControllerMiddleware } from './../../middlewares/controller';\nimport { ProfileModel } from './profile.model';\nimport { AuthMiddleware } from './auth.middleware';\nimport { AppMiddleware } from './../app/app.middleware';\nimport { UserModel } from './user.model';\nimport { UserControllerMiddleware } from './user.middleware.controller';\nimport { Router, Request, Response, NextFunction } from 'express';\nlet debug = require('debug')('app:controller:user');\n\nconst router: Router = Router();\n\nlet mdController = new UserControllerMiddleware(UserModel);\n\nrouter.get(\n  '/user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkUserRoleAccess('adminUserRoles'),\n  mdController.prepareQueryFromReq(),\n  AuthMiddleware.addAppIdInQuery,\n  mdController.getAll()\n);\n\nrouter.get(\n  '/app/:appId/user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'user']),\n  mdController.prepareQueryFromReq(),\n  AuthMiddleware.addAppIdFromParamsToQuery,\n  mdController.getAll()\n);\n\nrouter.get(\n  '/app/:appId/parent-user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'user']),\n  mdController.prepareQueryFromReq(),\n  AuthMiddleware.addAppIdInQuery,\n  mdController.onlyUsersInvitedInParamApp,\n  mdController.getAll(null, {ignoreSend: true}),\n  mdController.outputParamAppRoles\n  )\n\n// this request (below) must be depracated.\n// It is currently used in Mintello Client and ECV2 Client\nrouter.get(\n  '/app/:appId/search-user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticateWithoutError,\n  AppMiddleware.fetchParamApp(false),\n  mdController.prepareQueryFromReq(),\n  AuthMiddleware.addAppIdFromParamsToQuery,\n  mdController.getAll(null, {ignoreSend: true, ignoreOutput: false}),\n  mdController.autoFetch([\n    {\n      originalKey: 'id',\n      matchingKeyInRelatedModel: 'userId',\n      destinationKey: 'profile',\n      model: ProfileModel,\n      includeModelProp: ['picture']\n    }\n  ], false),\n  mdController.outputSearch\n);\n\nrouter.get(\n  '/search-user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticateWithoutError,\n  mdController.prepareQueryFromReq(),\n  AuthMiddleware.addAppIdInQuery,\n  mdController.getAll(null, {ignoreSend: true, ignoreOutput: false, addCountInKey: '__count'}),\n  mdController.autoFetch([\n    {\n      originalKey: 'id',\n      matchingKeyInRelatedModel: 'userId',\n      destinationKey: 'profile',\n      model: ProfileModel,\n      includeModelProp: ['picture']\n    }\n  ], false),\n  mdController.outputSearch\n);\n\nrouter.get(\n  '/user/current',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  mdController.getCurrentUser()\n)\n\nrouter.get(\n  '/user/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkUserRoleAccess('adminUserRoles'),\n  mdController.getOne()\n);\n\nrouter.get(\n  '/app/:appId/user/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'user']),\n  //AuthMiddleware.allowOnlyRoles(['admin']),\n  mdController.getOne()\n);\n\nrouter.post(\n  '/user/create-account',\n  AppMiddleware.fetchWithPublicKey,\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.validateAndPost()\n);\n\nrouter.put(\n  '/user/resend-code',\n  AppMiddleware.fetchWithPublicKey,\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.resendCode\n);\n\nrouter.put(\n  '/user/create-account',\n  AppMiddleware.fetchWithPublicKey,\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.validateAndPost()\n);\n\nrouter.post(\n  '/user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkUserRoleAccess('adminUserRoles'),\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.post()\n);\n\nrouter.post(\n  '/app/:appId/user',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'user']),\n  AppMiddleware.addAppIdFromParamsToBody('appId'),\n  mdController.post()\n);\n\nrouter.put(\n  '/user/hide-onboarding',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.hideOnboarding\n)\n\nrouter.put(\n  '/user/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.put()\n);\n\n\n\n// this route is not taken care of in the app controller\n// and is only used to edit the roles of a user\n// router.put(\n//   '/app/:appId/user/:elementId',\n//   AppMiddleware.fetchWithPublicKey,\n//   AuthMiddleware.authenticate,\n//   AuthMiddleware.checkRoleViaParamApp(['admin', 'user']),\n//   AppMiddleware.addAppIdFromParamsToBody('appId'),\n//   mdController.put()\n// );\n\nrouter.delete(\n  ControllerMiddleware.deleteRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkUserRoleAccess('adminUserRoles'),\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.delete()\n);\n\nrouter.delete(\n  '/app/:appId/user/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'user']),\n  AppMiddleware.addAppIdFromParamsToBody('appId'),\n  mdController.delete()\n);\n\nrouter.get('/user/exists/:type/:value', AppMiddleware.fetchWithPublicKey, (req: Request, res: Response, next: NextFunction) => {\n  if (req.params.type !== 'email' && req.params.type !== 'mobile') return next(new Error('Invalid request'));\n  let query: any = {appId: res.locals.app._id};\n  query[req.params.type] = req.params.value;\n  UserModel.getOneWithQuery(query).then((user) => {\n    if (user) return res.send({exists: true, id: user._id});\n    return res.send({exists: false});\n  });\n});\n\nexport const UserController: Router = router;"]}