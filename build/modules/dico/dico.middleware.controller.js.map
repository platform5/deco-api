{"version":3,"file":"dico.middleware.controller.js","sourceRoot":"","sources":["../../../src/modules/dico/dico.middleware.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { DicoModel } from './dico.model';\nimport { AccessControllerMiddlware } from './../user/access.middleware.controller';\nimport { Request, Response, NextFunction } from 'express';\nimport { Model, ObjectId, Query, StringAnyMap } from '../../';\nimport fs from 'fs';\nimport moment from 'moment';\nlet debug = require('debug')('app:middleware:controllers:dico');\n\nexport class DicoControllerMiddleware extends AccessControllerMiddlware {\n\n  static validateKey() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (req.method !== 'POST' && req.method !== 'PUT') {\n        return next();\n      }\n      if (!res.locals.app) {\n        return next(new Error('Missing app'));\n      }\n      if (req.body.key && req.body.key.length) {\n        const key = req.body.key;\n        // check that the key doesnt end with '.'\n        if (key.slice(-1) === '.') {\n          const reason = 'Should not end with \".\"';\n          DicoControllerMiddleware.logInvalidKey(res.locals.app._id, key, reason);\n          return next(new Error('Invalid key: ' + reason));\n        }\n        const parts = key.split('.');\n        const finalKey = parts.pop();\n        const context = parts.join('.');\n        // check that the context doesnt start with an uppercase\n        if (context.length) {\n          if ('abcdefghijklmnopqrstuvwxyz'.indexOf(context[0]) === -1) {\n            const reason = 'Context must start with a lowercase';\n            DicoControllerMiddleware.logInvalidKey(res.locals.app._id, key, reason);\n            return next(new Error('Invalid key: ' + reason));\n          }\n        }\n        if (context.length === 0 && 'abcdefghijklmnopqrstuvwxyz'.indexOf(context[0]) !== -1) {\n          const reason = 'Key without context must not start with a lowercase';\n          DicoControllerMiddleware.logInvalidKey(res.locals.app._id, key, reason);\n          return next(new Error('Invalid key: ' + reason));\n        }\n        // check that the key is not a context nor the context a key\n        const regex = new RegExp(`^${key}\\\\.(.*)`);\n        const query = new Query({$or: [\n          {key: {$regex: regex}},\n          {key: context}\n        ]})\n\n        query.addQuery({appId: new ObjectId(req.body.appId)})\n        \n        if (req.method === 'PUT') {\n          query.addQuery({_id: {$ne: new ObjectId(req.params.elementId)}});\n        }\n\n        return DicoModel.getOneWithQuery(query).then((foundElement) => {\n          if (foundElement && foundElement.key === context) {\n            const reason = 'The context is identical to a current key';\n            DicoControllerMiddleware.logInvalidKey(res.locals.app._id, key, reason);\n            throw new Error('Invalid key: ' + reason);\n          } else if (foundElement) {\n            const reason = 'The key is identical to a current context';\n            DicoControllerMiddleware.logInvalidKey(res.locals.app._id, key, reason);\n            throw new Error('Invalid key: ' + reason);\n          }\n          // check that the context is not a key\n          return DicoModel.getOneWithQuery({key: context})\n        }).then(() => {\n          return next();\n        }).catch(next);\n      }\n      return next();\n    }\n  }\n\n  static logInvalidKey(appId: ObjectId, key: string, reason: string) {\n    const date = moment().format('YYYY-MM-DD_HH:mm:ss');\n    const line = `${date};${appId.toHexString()};${key};${reason}`;\n    fs.writeFileSync('logs/invalid-dico-elements.csv', line, {flag: 'a'})\n  }\n\n  post(options = {ignoreOutput: false, ignoreSend: false}) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      let postFunc = super.post(options);\n      let putFunc = super.put(options);\n\n      if (!req.body || !req.body.key) {\n        postFunc(req, res, next);\n      } else {\n        return this.model.getOneWithQuery({key: req.body.key, appId: res.locals.app._id}).then((element) => {\n          if (element) {\n            // INFO\n            // In the past we had the commented code below in order to\n            // edit the current key\n            // However this has caused too many problems. So now we\n            // prefer to disable POST if the element already\n            // exists and not make any PUT (edit)\n            //if (!req.params) req.params = {};\n            //req.params.elementId = element._id.toString();\n            //req.body.appId = (element as any).appId.toString();\n            //putFunc(req, res, next);\n            res.sendStatus(204);\n          } else {\n            postFunc(req, res, next);\n          }\n        }).catch(next);\n      }\n    };\n  }\n\n  public combineForBackend() {\n    return (req: Request, res: Response, next: NextFunction) => {\n\n      if (res.headersSent) {\n        return next();\n      }\n\n      if (!res.locals.elements || !Array.isArray(res.locals.elements)) return res.send({});\n      \n      let backendStructure: StringAnyMap = {};\n      for (let element of res.locals.elements) {\n        backendStructure[element.key] = element.value;\n      }\n\n      // iterate over the property names\n      Object.keys(backendStructure).forEach(function(k) {\n        // slip the property value based on `.`\n        let prop = k.split('.');\n        if (prop.length > 1) {\n          // get the last value fom array\n          let last: string = (prop.pop() as string);\n          // iterate over the remaining array value \n          // and define the object if not already defined\n          prop.reduce(function(o, key) {\n            // define the object if not defined and return\n            return o[key] = o[key] || {};\n            // set initial value as object\n            // and set the property value\n          }, backendStructure)[last] = backendStructure[k];\n          // delete the original property from object\n          delete backendStructure[k];\n        }\n      });\n\n      res.send(backendStructure);\n    };\n  }\n\n  public combineForContexts() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.elements || !Array.isArray(res.locals.elements)) return res.send([]);\n      let contexts: string[] = [];\n      for (let element of res.locals.elements) {\n        const parts: string[] = element.key.split('.');\n        parts.pop();\n        const context = parts.join('.');\n        if (!contexts.includes(context)) {\n          contexts.push(context);\n        }\n      }\n      res.send(contexts);\n    };\n  }\n\n  public checkAndFixDico() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      const result: any = {};\n      const fix = req.query.fix;\n      result.errors = [];\n      new Promise(async (resolve, reject) => {\n        try {\n\n          const dotElements = await DicoModel.getAll(new Query({key: {$regex: /\\.$/}}));\n\n          result.dotErrors = dotElements.length;\n\n          const lowercaseKeyQuery = new Query();\n          lowercaseKeyQuery.addQuery({key: {$regex: /^[A-Z]/}});\n          lowercaseKeyQuery.addQuery({key: {$regex: /\\./}});\n          const lowercaseKeyElements = await DicoModel.getAll(lowercaseKeyQuery);\n\n          result.lowercaseKeyErrors = lowercaseKeyElements.length;\n\n          const elements = await DicoModel.getAll();\n          const keyAsContextElements: DicoModel[] = [];\n          const contextAsKeyElements: DicoModel[] = [];\n          for (let element of elements) {\n            const key = element.key;\n            const parts = key.split('.');\n            const finalKey = parts.pop();\n            const context = parts.join('.');\n            // check that the key is not a context nor the context a key\n            const regex = new RegExp(`^${key}\\\\.`);\n            const query = new Query();\n            query.addQuery({$or: [\n              {key: {$regex: regex}},\n              {key: context}\n            ]});\n            query.addQuery({appId: element.appId});\n            query.addQuery({_id: {$ne: element._id}})\n            const foundElements = await DicoModel.getAll(query);\n            for (const foundElement of foundElements) {\n              if (key === context) {\n                contextAsKeyElements.push(foundElement);\n              } else {\n                keyAsContextElements.push(foundElement);\n              }\n            }\n          }\n          result.contextAsKeyErrors = contextAsKeyElements.length;\n          result.keyAsContextErrors = keyAsContextElements.length;\n\n          if (fix) {\n            const ids: ObjectId[] = [];\n            for (let el of dotElements) {\n              ids.push(el._id);\n            }\n            for (let el of lowercaseKeyElements) {\n              ids.push(el._id);\n            }\n            for (let el of contextAsKeyElements) {\n              ids.push(el._id);\n            }\n            for (let el of keyAsContextElements) {\n              ids.push(el._id);\n            }\n            result.removeIdsLength = ids.length;\n            result.removedIds = ids.map(i => i.toHexString());\n            await DicoModel.deco.db.collection(DicoModel.deco.collectionName).remove({_id: {$in: ids}});\n          }\n          \n          resolve(null);\n        } catch (error) {\n          reject(error);\n        }\n      }).then(() => {\n        res.send(result);\n      }).catch(next);\n    };\n  }\n}"]}