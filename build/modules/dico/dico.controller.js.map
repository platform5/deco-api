{"version":3,"file":"dico.controller.js","sourceRoot":"","sources":["../../../src/modules/dico/dico.controller.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAAyC;AACzC,+DAA2D;AAC3D,4DAAwD;AACxD,6EAAwE;AACxE,qCAAkE;AAClE,8BAAgE;AAChE,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,qBAAqB,CAAC,CAAC;AAEpD,MAAM,MAAM,GAAW,gBAAM,EAAE,CAAC;AAEhC,IAAI,YAAY,GAAG,IAAI,qDAAwB,CAAC,sBAAS,CAAC,CAAC;AAE3D,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,gBAAgB,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;AACzG,MAAM,YAAY,GAAG,CAAC,GAAW,EAAE,EAAE;IACnC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3B,OAAO,IAAI,CAAC;KACb;IACD,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAChC,OAAO,IAAI,CAAC;KACb;IACD,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;QAClC,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAA;IACzC,CAAC,CAAC,EAAE;QACF,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAA;AAED,MAAM,CAAC,GAAG,CAAC,0BAA0B,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACzF,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,yCAAyC,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACxG,MAAM,MAAM,GAAQ,EAAE,CAAC;IACvB,MAAM,OAAO,GAAG,IAAI,YAAQ,CAAC,0BAA0B,CAAC,CAAC;IACzD,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;QACpC,IAAI;YACF,MAAM,KAAK,GAAG,IAAI,YAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,eAAe,GAAG,MAAM,sBAAS,CAAC,MAAM,CAAC,IAAI,SAAK,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;YAC1E,MAAM,yBAAyB,GAAG,MAAM,sBAAS,CAAC,MAAM,CAAC,IAAI,SAAK,CAAC,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;YAEtF,MAAM,YAAY,GAAG,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAE/D,MAAM,CAAC,mBAAmB,GAAG,eAAe,CAAC,MAAM,CAAC;YACpD,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;YACrB,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;YACpB,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;YACpB,KAAK,IAAI,OAAO,IAAI,eAAe,EAAE;gBACnC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;oBACtB,MAAM,CAAC,SAAS,EAAE,CAAC;oBACnB,SAAS;iBACV;gBACD,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;oBAC9B,MAAM,CAAC,QAAQ,EAAE,CAAC;oBAClB,SAAS;iBACV;gBACD,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM,UAAU,GAAG,IAAI,sBAAS,EAAE,CAAC;gBACnC,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC;gBAC3B,UAAU,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;gBAC7B,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBACjC,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;gBACrC,MAAM,UAAU,CAAC,MAAM,EAAE,CAAC;gBAC1B,MAAM,CAAC,QAAQ,EAAE,CAAC;aACnB;YACD,MAAM,cAAc,GAAG,MAAM,sBAAS,CAAC,MAAM,CAAC,IAAI,SAAK,CAAC,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,UAAU,GAAG,cAAc,CAAC,MAAM,CAAC;YAC1C,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,KAAK,IAAI,SAAS,IAAI,cAAc,EAAE;gBACpC,MAAM,YAAY,GAAG,MAAM,sBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,sBAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC;oBAC5F,KAAK,EAAE,KAAK;oBACZ,GAAG,EAAE,SAAS,CAAC,GAAG;iBACnB,CAAC,CAAC;gBACH,kBAAkB,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;aAC7C;YACD,MAAM,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC/C,MAAM,CAAC,oBAAoB,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChE,MAAM,CAAC,iCAAiC,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;YAChG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,oBAAoB,KAAK,MAAM,CAAC,kBAAkB,CAAC;YACvE,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,iCAAiC,KAAK,MAAM,CAAC,mBAAmB,CAAC;SACtF;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,KAAK,CAAC,CAAC;SACf;QACD,OAAO,CAAC,IAAI,CAAC,CAAC;IAChB,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;QACX,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,eAAe,EAAE,CAAC,CAAA;AAE5D,MAAM,CAAC,GAAG,CACR,wBAAoB,CAAC,WAAW,EAAE,EAClC,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,YAAY,CAAC,mBAAmB,EAAE,EAClC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,aAAa,EAAE,SAAS,EAAE,yBAAyB,EAAE,IAAI,EAAC,CAAC,CACvF,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,UAAU,EACV,8BAAa,CAAC,kBAAkB,EAChC,YAAY,CAAC,mBAAmB,EAAE,EAClC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,yBAAyB,EAAE,IAAI,EAAC,CAAC,EACnG,YAAY,CAAC,iBAAiB,EAAE,CACjC,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,WAAW,EACX,8BAAa,CAAC,kBAAkB,EAChC,YAAY,CAAC,mBAAmB,EAAE,EAClC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,EAClE,YAAY,CAAC,kBAAkB,EAAE,CAClC,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,wBAAoB,CAAC,WAAW,EAAE,EAClC,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,YAAY,CAAC,MAAM,EAAE,CACtB,CAAC;AAEF,oDAAoD;AACpD;uCACuC;AACvC,MAAM,CAAC,IAAI,CACT,wBAAoB,CAAC,SAAS,EAAE,EAChC,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,wBAAwB,EACvC,qDAAwB,CAAC,WAAW,EAAE;AACtC,yCAAyC;AACzC,YAAY,CAAC,IAAI,EAAE,CACpB,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,wBAAoB,CAAC,QAAQ,EAAE,EAC/B,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,wBAAwB,EACvC,qDAAwB,CAAC,WAAW,EAAE;AACtC,yCAAyC;AACzC,YAAY,CAAC,GAAG,EAAE,CACnB,CAAC;AAEF,MAAM,CAAC,MAAM,CACX,wBAAoB,CAAC,WAAW,EAAE,EAClC,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,YAAY,CAAC,MAAM,EAAE,CACtB,CAAC;AAEW,QAAA,cAAc,GAAW,MAAM,CAAC","sourcesContent":["import { DicoModel } from './dico.model';\nimport { AuthMiddleware } from './../user/auth.middleware';\nimport { AppMiddleware } from './../app/app.middleware';\nimport { DicoControllerMiddleware } from './dico.middleware.controller';\nimport { Router, Request, Response, NextFunction } from 'express';\nimport { ControllerMiddleware, Query,  ObjectId } from '../../';\nlet debug = require('debug')('app:controller:dico');\n\nconst router: Router = Router();\n\nlet mdController = new DicoControllerMiddleware(DicoModel);\n\nconst globalContexts = ['', 'gettingStarted', 'shop', 'shops', 'error', 'info', 'confirmation', 'admin'];\nconst isGlobalDico = (key: string) => {\n  if (key.indexOf('.') === -1) {\n    return true;\n  }\n  if (globalContexts.includes(key)) {\n    return true;\n  }\n  if (globalContexts.some((context) => {\n    return key.indexOf(context + '.') === 0\n  })) {\n    return true;\n  }\n  return false;\n}\n\nrouter.get('/init-translation-memory', (req: Request, res: Response, next: NextFunction) => {\n  return next(new Error('Deprecated'));\n});\n\nrouter.get('/init-translation-memory-for-app/:appId', (req: Request, res: Response, next: NextFunction) => {\n  const result: any = {};\n  const appTMId = new ObjectId('5ecd0559fd9b0400062237de');\n  new Promise(async (resolve, reject) => {\n    try {\n      const appId = new ObjectId(req.params.appId);\n      const appDicoElements = await DicoModel.getAll(new Query({appId: appId}));\n      const currentGlobalDicoElements = await DicoModel.getAll(new Query({appId: appTMId}));\n\n      const existingKeys = currentGlobalDicoElements.map(e => e.key);\n  \n      result.nbDicoElementsInApp = appDicoElements.length;\n      result.notGlobal = 0;\n      result.existing = 0;\n      result.migrated = 0;\n      for (let element of appDicoElements) {\n        const key = element.key;\n        if (!isGlobalDico(key)) {\n          result.notGlobal++;\n          continue;\n        }\n        if (existingKeys.includes(key)) {\n          result.existing++;\n          continue;\n        }\n        existingKeys.push(element.key);\n        const newElement = new DicoModel();\n        newElement.appId = appTMId;\n        newElement.key = element.key;\n        newElement.value = element.value;\n        newElement.tags = element.tags || [];\n        await newElement.insert();\n        result.migrated++;\n      }\n      const TMDicoElements = await DicoModel.getAll(new Query({appId: appTMId}));\n      result.tmElements = TMDicoElements.length;\n      let removedFromAppDico = 0;\n      for (let tmElement of TMDicoElements) {\n        const removeResult = await DicoModel.deco.db.collection(DicoModel.deco.collectionName).remove({\n          appId: appId,\n          key: tmElement.key\n        });\n        removedFromAppDico += removeResult.result.n;\n      }\n      result.removedFromAppDico = removedFromAppDico;\n      result.migratedPlusExisting = result.migrated + result.existing;\n      result.migratedPlusExistingPlusNotGlobal = result.migrated + result.existing + result.notGlobal;\n      result.ok1 = result.migratedPlusExisting === result.removedFromAppDico;\n      result.ok2 = result.migratedPlusExistingPlusNotGlobal === result.nbDicoElementsInApp;\n    } catch (error) {\n      reject(error);\n    }\n    resolve(null);\n  }).then(() => {\n    res.send(result);\n  }).catch(next);\n});\n\nrouter.get('/check-and-fix', mdController.checkAndFixDico())\n\nrouter.get(\n  ControllerMiddleware.getAllRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  mdController.prepareQueryFromReq(),\n  mdController.getAll(null, {addCountInKey: '__count', enableLastModifiedCaching: true})\n);\n\nrouter.get(\n  '/backend',\n  AppMiddleware.fetchWithPublicKey,\n  mdController.prepareQueryFromReq(),\n  mdController.getAll(null, {ignoreOutput: false, ignoreSend: true, enableLastModifiedCaching: true}),\n  mdController.combineForBackend()\n);\n\nrouter.get(\n  '/contexts',\n  AppMiddleware.fetchWithPublicKey,\n  mdController.prepareQueryFromReq(),\n  mdController.getAll(null, {ignoreOutput: false, ignoreSend: true}),\n  mdController.combineForContexts()\n);\n\nrouter.get(\n  ControllerMiddleware.getOneRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  mdController.getOne()\n);\n\n/* For the dico the POST route can also edit data */\n/* It will either create a document if the key doesn't exists\n   or update it if it already exists */\nrouter.post(\n  ControllerMiddleware.postRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticateWithoutError,\n  DicoControllerMiddleware.validateKey(),\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.post()\n);\n\nrouter.put(\n  ControllerMiddleware.putRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticateWithoutError,\n  DicoControllerMiddleware.validateKey(),\n  // AppMiddleware.addAppIdToBody('appId'),\n  mdController.put()\n);\n\nrouter.delete(\n  ControllerMiddleware.deleteRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  mdController.delete()\n);\n\nexport const DicoController: Router = router;"]}