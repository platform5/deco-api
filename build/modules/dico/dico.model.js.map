{"version":3,"file":"dico.model.js","sourceRoot":"","sources":["../../../src/modules/dico/dico.model.ts"],"names":[],"mappings":";;;;;;;;AAAA,kDAA8C;AAC9C,8BAAkF;AAClF,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC;AAGhD,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,SAAK;IAApC;;QAQS,UAAK,GAAoB,IAAI,CAAC;QAS9B,QAAG,GAAW,EAAE,CAAC;QAMjB,UAAK,GAAW,EAAE,CAAC;QAMnB,SAAI,GAAkB,EAAE,CAAC;IAClC,CAAC;CAAA,CAAA;AAtBC;IANC,QAAI,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,oBAAQ,EAAC,CAAC;IAC7B,MAAE,CAAC,KAAK;IACR,MAAE,CAAC,UAAU;IACb,SAAK,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;IAChC,YAAQ,CAAC,QAAQ;IACjB,SAAK,CAAC,KAAK,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;wCACO;AASrC;IAPC,QAAI,CAAC,MAAM;IACX,MAAE,CAAC,GAAG;IACN,YAAQ,CAAC,QAAQ;IACjB,SAAK,CAAC,UAAU;IAChB,SAAK,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;IAChC,SAAK,CAAC,QAAQ;IACd,SAAK,CAAC,KAAK,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;sCACN;AAMxB;IAJC,QAAI,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;IAC3C,MAAE,CAAC,GAAG;IACN,SAAK,CAAC,UAAU;IAChB,YAAQ,CAAC,QAAQ;wCACQ;AAM1B;IAJC,QAAI,CAAC,KAAK,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;IAC5B,MAAE,CAAC,GAAG;IACN,SAAK,CAAC,UAAU;IAChB,SAAK,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uCACD;AA7BrB,SAAS;IADrB,SAAK,CAAC,MAAM,CAAC;GACD,SAAS,CA8BrB;AA9BY,8BAAS","sourcesContent":["import { AppModel } from './../app/app.model';\nimport { model, Model, type, io, query, validate, ObjectId, mongo } from '../../';\nlet debug = require('debug')('app:models:dico');\n\n@model('dico')\nexport class DicoModel extends Model {\n\n  @type.model({model: AppModel})\n  @io.input\n  @io.toDocument\n  @query.filterable({type: 'auto'})\n  @validate.required\n  @mongo.index({type: 'single'})\n  public appId: ObjectId | null = null;\n\n  @type.string\n  @io.all\n  @validate.required\n  @query.searchable\n  @query.filterable({type: 'auto'})\n  @query.sortable\n  @mongo.index({type: 'single'})\n  public key: string = '';\n\n  @type.string({multilang: true, locales: []})\n  @io.all\n  @query.searchable\n  @validate.required\n  public value: string = '';\n\n  @type.array({type: 'string'})\n  @io.all\n  @query.searchable\n  @query.filterable({type: 'auto'})\n  public tags: Array<string> = [];\n}"]}