{"version":3,"file":"model.hits.controller.js","sourceRoot":"","sources":["../../../src/modules/model-hits/model.hits.controller.ts"],"names":[],"mappings":";;AAAA,0EAAsE;AACtE,yDAAoD;AAGpD,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,wCAAwC,CAAC,CAAC;AAGvE,MAAa,mBAAmB;IAC9B,MAAM,CAAC,SAAS,CAAC,OAA2B;QAC1C,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACzD,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBACzD,OAAO,iCAAc,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACX,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAA;IACH,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,OAA2B;QAC5C,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACzD,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBACzD,OAAO,iCAAc,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBAChB,GAAG,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAA;IACH,CAAC;IAEO,MAAM,CAAC,OAAO,CAAC,OAA2B,EAAE,GAAa;QAC/D,IAAI,OAAO,IAAI,OAAO,KAAK,SAAS;YAAE,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtE,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,+BAA+B;YAC/B,IAAI,IAAI,GAAS,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;YACxC,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO;gBAAE,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACrE;gBACH,OAAO,wCAAkB,CAAC,eAAe,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBAChF,IAAI,CAAC,MAAM;wBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;oBAChD,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;gBAClC,CAAC,CAAC,CAAC;aACJ;SACF;QACD,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;CAEF;AArCD,kDAqCC","sourcesContent":["import { DynamicConfigModel } from './../dynamic/dynamicconfig.model';\nimport { ModelHitsModel } from './model.hits.model';\nimport { Deco } from '../../';\nimport { Request, Response, NextFunction } from 'express';\nlet debug = require('debug')('app:middlewares:controllers:model.hits');\n\n\nexport class ModelHitsMiddleware {\n  static singleHit(modelId: string | 'dynamic') {\n    return (req: Request, res: Response, next: NextFunction) => {\n      ModelHitsMiddleware.modelId(modelId, res).then((modelId) => {\n        return ModelHitsModel.singleHit(req, res, modelId);\n      }).then(() => {\n        next();\n      }).catch(next);\n    }\n  }\n\n  static singleStats(modelId: string | 'dynamic') {\n    return (req: Request, res: Response, next: NextFunction) => {\n      ModelHitsMiddleware.modelId(modelId, res).then((modelId) => {\n        return ModelHitsModel.singleStats(req, res, modelId);\n      }).then((stats) => {\n        res.send({stats: stats});\n      }).catch(next);\n    }\n  }\n\n  private static modelId(modelId: string | 'dynamic', res: Response): Promise<string> {\n    if (modelId && modelId !== 'dynamic') return Promise.resolve(modelId);\n    if (modelId === 'dynamic') {\n      // find modelId in dynamic deco\n      let deco: Deco = res.locals.dynamicDeco;\n      if (deco && deco.modelId) return Promise.resolve(deco.modelId.toString());\n      else {\n        return DynamicConfigModel.getOneWithQuery({slug: deco.modelName}).then((config) => {\n          if (!config) throw new Error('Model not found');\n          return config._id.toHexString();\n        });\n      }\n    }\n    throw new Error('Model not found');\n  }\n\n}"]}