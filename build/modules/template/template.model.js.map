{"version":3,"file":"template.model.js","sourceRoot":"","sources":["../../../src/modules/template/template.model.ts"],"names":[],"mappings":";;;;;;;;AAAA,kDAA8C;AAC9C,8BAAmG;AACnG,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC;AAGhD,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,SAAK;IAAxC;;QAQS,UAAK,GAAoB,IAAI,CAAC;QAO9B,QAAG,GAAW,EAAE,CAAC;QAKjB,YAAO,GAA6B,EAAE,CAAC;QAKvC,SAAI,GAA6B,EAAE,CAAC;QAIpC,SAAI,GAA6B,EAAE,CAAC;QAIpC,QAAG,GAA6B,EAAE,CAAC;IAE5C,CAAC;CAAA,CAAA;AA3BC;IANC,QAAI,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,oBAAQ,EAAC,CAAC;IAC7B,MAAE,CAAC,KAAK;IACR,MAAE,CAAC,UAAU;IACb,SAAK,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;IAChC,YAAQ,CAAC,QAAQ;IACjB,SAAK,CAAC,KAAK,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;4CACO;AAOrC;IALC,QAAI,CAAC,MAAM;IACX,MAAE,CAAC,GAAG;IACN,YAAQ,CAAC,QAAQ;IACjB,YAAQ,CAAC,WAAW;IACpB,SAAK,CAAC,KAAK,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;0CACN;AAKxB;IAHC,QAAI,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;IAC3C,MAAE,CAAC,GAAG;IACN,YAAQ,CAAC,QAAQ;8CAC4B;AAK9C;IAHC,QAAI,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;IAC3C,MAAE,CAAC,GAAG;IACN,YAAQ,CAAC,QAAQ;2CACyB;AAI3C;IAFC,QAAI,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;IAC3C,MAAE,CAAC,GAAG;2CACoC;AAI3C;IAFC,QAAI,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;IAC3C,MAAE,CAAC,GAAG;0CACmC;AAjC/B,aAAa;IADzB,SAAK,CAAC,UAAU,CAAC;GACL,aAAa,CAmCzB;AAnCY,sCAAa","sourcesContent":["import { AppModel } from './../app/app.model';\nimport { model, Model, type, io, query, validate, ObjectId, StringStringMap, mongo } from '../../';\nlet debug = require('debug')('app:models:dico');\n\n@model('template')\nexport class TemplateModel extends Model {\n\n  @type.model({model: AppModel})\n  @io.input\n  @io.toDocument\n  @query.filterable({type: 'auto'})\n  @validate.required\n  @mongo.index({type: 'single'})\n  public appId: ObjectId | null = null;\n\n  @type.string\n  @io.all\n  @validate.required\n  @validate.uniqueByApp\n  @mongo.index({type: 'single'})\n  public key: string = '';\n\n  @type.string({multilang: true, locales: []})\n  @io.all\n  @validate.required\n  public subject: string | StringStringMap = '';\n\n  @type.string({multilang: true, locales: []})\n  @io.all\n  @validate.required\n  public html: string | StringStringMap = '';\n\n  @type.string({multilang: true, locales: []})\n  @io.all\n  public text: string | StringStringMap = '';\n\n  @type.string({multilang: true, locales: []})\n  @io.all\n  public sms: string | StringStringMap = '';\n\n}"]}