{"version":3,"file":"template.controller.js","sourceRoot":"","sources":["../../../src/modules/template/template.controller.ts"],"names":[],"mappings":";;AAAA,4DAAwD;AACxD,+DAA2D;AAC3D,+DAAsE;AACtE,qDAAiD;AACjD,qCAAiC;AACjC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,yBAAyB,CAAC,CAAC;AAExD,MAAM,MAAM,GAAW,gBAAM,EAAE,CAAC;AAEhC,IAAI,YAAY,GAAG,IAAI,iCAAoB,CAAC,8BAAa,CAAC,CAAC;AAE3D,MAAM,CAAC,GAAG,CACR,SAAS,EACT,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,8BAAa,CAAC,aAAa,EAAE,EAC7B,gCAAc,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAC1D,YAAY,CAAC,mBAAmB,EAAE,EAClC,gCAAc,CAAC,yBAAyB,EACxC,YAAY,CAAC,MAAM,EAAE,CACtB,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,oBAAoB,EACpB,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,8BAAa,CAAC,aAAa,EAAE,EAC7B,gCAAc,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAC1D,YAAY,CAAC,MAAM,EAAE,CACtB,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,SAAS,EACT,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,8BAAa,CAAC,aAAa,EAAE,EAC7B,gCAAc,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAC1D,8BAAa,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAC/C,YAAY,CAAC,IAAI,EAAE,CACpB,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,oBAAoB,EACpB,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,8BAAa,CAAC,aAAa,EAAE,EAC7B,gCAAc,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAC1D,8BAAa,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAC/C,YAAY,CAAC,GAAG,EAAE,CACnB,CAAC;AAEF,MAAM,CAAC,MAAM,CACX,oBAAoB,EACpB,8BAAa,CAAC,kBAAkB,EAChC,gCAAc,CAAC,YAAY,EAC3B,8BAAa,CAAC,aAAa,EAAE,EAC7B,gCAAc,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAC1D,YAAY,CAAC,MAAM,EAAE,CACtB,CAAC;AAEW,QAAA,kBAAkB,GAAW,MAAM,CAAC","sourcesContent":["import { AppMiddleware } from './../app/app.middleware';\nimport { AuthMiddleware } from './../user/auth.middleware';\nimport { ControllerMiddleware } from './../../middlewares/controller';\nimport { TemplateModel } from './template.model';\nimport { Router } from 'express';\nlet debug = require('debug')('app:controller:template');\n\nconst router: Router = Router();\n\nlet mdController = new ControllerMiddleware(TemplateModel);\n\nrouter.get(\n  '/:appId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'template']),\n  mdController.prepareQueryFromReq(),\n  AuthMiddleware.addAppIdFromParamsToQuery,\n  mdController.getAll()\n);\n\nrouter.get(\n  '/:appId/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'template']),\n  mdController.getOne()\n);\n\nrouter.post(\n  '/:appId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'template']),\n  AppMiddleware.addAppIdFromParamsToBody('appId'),\n  mdController.post()\n);\n\nrouter.put(\n  '/:appId/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'template']),\n  AppMiddleware.addAppIdFromParamsToBody('appId'),\n  mdController.put()\n);\n\nrouter.delete(\n  '/:appId/:elementId',\n  AppMiddleware.fetchWithPublicKey,\n  AuthMiddleware.authenticate,\n  AppMiddleware.fetchParamApp(),\n  AuthMiddleware.checkRoleViaParamApp(['admin', 'template']),\n  mdController.delete()\n);\n\nexport const TemplateController: Router = router;"]}