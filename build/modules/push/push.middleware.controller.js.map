{"version":3,"file":"push.middleware.controller.js","sourceRoot":"","sources":["../../../src/modules/push/push.middleware.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { PushPlayerModel } from './push.player.model';\nimport { ControllerMiddleware } from './../../middlewares/controller';\nimport { Request, Response, NextFunction } from 'express';\nimport { Query, ObjectId } from '../../';\nimport moment from 'moment';\n\nlet debug = require('debug')('app:middleware:controllers:dico');\n\nexport class PushControllerMiddleware extends ControllerMiddleware {\n\n  extendGetAllQuery(query: Query, req: Request, res: Response): Promise<void> {\n    if (req.params.appId) {\n      try {\n        let appId = new ObjectId(req.params.appId);\n        query.addQuery({appId: appId});\n      } catch (error) {\n        throw new Error('Invalid req.params.appId');\n      }\n    } else if (res.locals.app) {\n      query.addQuery({appId: res.locals.app._id});\n    } else {\n      throw new Error('No app in params or fetched by api key');\n    }\n    return Promise.resolve();\n  }\n\n  registerPlayer() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      if (!res.locals.app) return next(new Error('Missing app'));\n      if (!req.body.regId) return next(new Error('Missing regId'));\n      if (!req.body.uuid) return next(new Error('Missing uuid'));\n      if (!req.body.type || (req.body.type !== 'fcm' && req.body.type !== 'apn')) return next(new Error('Missing or invalid type, must be apn or fcm'));\n      \n      let players: Array<PushPlayerModel> = [];\n\n      let playerQuery: any = {$or: [\n        {regId: req.body.regId},\n        {uuid: req.body.uuid},\n      ]};\n\n      if (res.locals.user) {\n        playerQuery.$or.push({userId: res.locals.user._id});\n      }\n\n      let query = new Query(playerQuery);\n      query.addQuery({appId: res.locals.app._id});\n      query.addQuery({active: true});\n\n\n      PushPlayerModel.getAll(query).then((p) => {\n        players = p;\n        if (!players || players.length === 0) {\n          // create the player\n          let player = new PushPlayerModel;\n          player.appId = res.locals.app._id;\n          player.regId = req.body.regId;\n          player.uuid = req.body.uuid;\n          player.type = req.body.type;\n          player.active = true;\n          player.lastVisit = moment().toDate();\n          if (res.locals.user) {\n            player.userId = res.locals.user._id;\n          }\n          return player.insert();\n        }\n        let finalPlayer: PushPlayerModel = players[0];\n        let updatePromises: Array<Promise<any>> = [];\n        if (players.length > 0) {\n          let keptOne = false;\n          let index = 0;\n          for (let player of players) {\n            if (res.locals.user && player.userId && res.locals.user._id.toString() === player.userId.toString()) {\n              finalPlayer = player;\n              keptOne = true;\n              continue;\n            }\n            if (!res.locals.user && index === 0) {\n              finalPlayer = player;\n              keptOne = true;\n              continue;\n            }\n            player.active = false;\n          }\n          if (!keptOne) {\n            players[0].active = true;\n          }\n        }\n        finalPlayer.regId = req.body.regId;\n        finalPlayer.uuid = req.body.uuid;\n        finalPlayer.type = req.body.type;\n        finalPlayer.active = true;\n        finalPlayer.lastVisit = moment().toDate();\n        if (res.locals.user) {\n          finalPlayer.userId = res.locals.user._id;\n        }\n\n        for (let player of players) {\n          updatePromises.push(player.update());\n        }\n        return Promise.all(updatePromises);\n      }).then(() => {\n        res.sendStatus(204);\n      }).catch(next);\n    };\n  }\n\n  extendRequest(req: Request, control: 'getAll' | 'getOne' | 'post' | 'put' | 'delete'): Promise<void> {\n    if (req.params.regId && (control === 'put' || control === 'getOne')) {\n      return PushPlayerModel.getOneWithQuery({regId: req.params.regId}).then((player) => {\n        if (!player) throw new Error('Player not found');\n        req.params.elementId = player._id.toString();\n      });\n    }\n    return Promise.resolve();\n  }\n\n  sendTags(req: Request, res: Response, next: NextFunction) {\n    let tags = res.locals.element.tags || [];\n    res.send(tags);\n  }\n\n  setVisitInBody(req: Request, res: Response, next: NextFunction) {\n    req.body.lastVisit = moment().format('DD-MM-YYYY');\n    next()\n  }\n\n  getNbPlayers(req: Request, res: Response, next: NextFunction) {\n    let appId: ObjectId;\n    try {\n      appId = new ObjectId(req.body.appId);\n    } catch (error) {\n      return next(new Error('Invalid appId'));\n    }\n    PushPlayerModel.nbPlayers(appId).then((nbPlayers) => {\n      res.locals.nbPlayers = nbPlayers;\n      next();\n    }).catch(next);\n  }\n\n  getPlayerTags(req: Request, res: Response, next: NextFunction) {\n    let appId: ObjectId;\n    try {\n      appId = new ObjectId(req.body.appId);\n    } catch (error) {\n      return next(new Error('Invalid appId'));\n    }\n    PushPlayerModel.tags(appId).then((tags) => {\n      res.locals.tags = tags;\n      next();\n    }).catch(next);\n  }\n}"]}