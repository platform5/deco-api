{"version":3,"file":"dynamic2.middleware.controller.js","sourceRoot":"","sources":["../../../src/modules/dynamic/dynamic2.middleware.controller.ts"],"names":[],"mappings":";;;;;AAAA,gGAA0F;AAC1F,+DAA2D;AAC3D,kDAA8C;AAC9C,+DAA2D;AAC3D,6DAAyD;AAGzD,8BAA8H;AAC9H,8BAAoE;AACpE,oDAA4B;AAC5B,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,qCAAqC,CAAC,CAAC;AAEpE,MAAM,cAAc,GAAG,sCAAiB,CAAC,IAAI,CAAC,cAAc,CAAC;AAE7D,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sCAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC9E,MAAM,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sCAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAE5F,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,sCAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AACzF,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,sCAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AAC3F,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,sCAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAEnG,MAAM,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sCAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAE1F,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,sCAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACnG,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,sCAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC/F,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,sCAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACnG,MAAM,0BAA0B,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sCAAiB,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;AAE7F,QAAA,qBAAqB,GAAG,IAAI,iBAAa,CAAC,cAAc,CAAC,CAAC;AACrE,6BAAqB,CAAC,KAAK,GAAG,QAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACxD,6BAAqB,CAAC,MAAM,GAAG,QAAI,CAAC,cAAc,CAAC,MAAM,CAAC;AAC1D,6BAAqB,CAAC,QAAQ,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,OAAY,EAAE,EAAE;IACtE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI;QAAE,OAAO,IAAI,CAAC;IAEvD,iEAAiE;IACjE,IAAI,OAAiB,CAAC;IAEtB,IAAI;QACF,OAAO,GAAG,IAAI,YAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACvC;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAED,IAAI,WAAW,GAAQ;QACrB,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE;YACH,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC,EAAC,EAAC;YACvD,EAAC,cAAc,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC,EAAC,EAAC;SACjE;KACF,CAAC;IAEF,IAAI,WAA+B,CAAC;IACpC,OAAO,wCAAkB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAA0B,EAAE;QACzF,IAAI,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC;QACtB,WAAW,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,cAAc;YAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC9F,OAAO,OAAO,CAAC,GAAG,CAAC;YACjB,oBAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,oBAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC;SAClD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;QACjB,IAAI,IAAI,GAAS,2BAA2B,CAAC,sBAAsB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACvG,OAAO,sCAAiB,CAAC,eAAe,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,EAAC,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACxH,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;QACf,IAAI,CAAC,IAAI;YAAE,OAAO,KAAK,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF,6BAAqB,CAAC,SAAS,EAAE,CAAC;AAEvB,QAAA,sBAAsB,GAAG,IAAI,iBAAa,CAAC,eAAe,CAAC,CAAC;AACvE,8BAAsB,CAAC,KAAK,GAAG,QAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAC1D,8BAAsB,CAAC,MAAM,GAAG,QAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AAC5D,8BAAsB,CAAC,UAAU,GAAG,CAAC,WAAwB,EAAE,GAAW,EAAE,KAAU,EAAE,SAAyC,EAAE,OAAY,EAAE,OAAY,EAAE,MAAW,EAAE,EAAE;IAC5K,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS;QAAE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IACpE,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC5B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;AAC3B,CAAC,CAAC;AACF,8BAAsB,CAAC,QAAQ,GAAG,CAAC,KAAU,EAAE,GAAQ,EAAE,OAAY,EAAE,EAAE;IACvE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC;IACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC;IACxC,IAAI,WAAW,GAAoB,EAAE,CAAC;IACpC,IAAI,iBAAiB,GAAkB,EAAE,CAAC;IAC1C,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;QACnB,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;YAClD,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SACtC;KACF;IAEH,iEAAiE;IACjE,IAAI,OAAiB,CAAC;IAEtB,IAAI;QACF,OAAO,GAAG,IAAI,YAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACvC;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAED,IAAI,WAAW,GAAQ;QACrB,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE;YACH,EAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC,EAAC,EAAC;YACvD,EAAC,cAAc,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC,EAAC,EAAC;SACjE;KACF,CAAC;IAEF,IAAI,WAA+B,CAAC;IACpC,OAAO,wCAAkB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAA0B,EAAE;QACzF,IAAI,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC;QACtB,WAAW,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,cAAc;YAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC9F,OAAO,OAAO,CAAC,GAAG,CAAC;YACjB,oBAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,oBAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC;SAClD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;QACjB,IAAI,IAAI,GAAS,2BAA2B,CAAC,sBAAsB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACvG,OAAO,sCAAiB,CAAC,MAAM,CAAC,IAAI,SAAK,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,EAAC,GAAG,EAAE,WAAW,EAAC,EAAC,CAAC,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACvI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAoB,EAAE,EAAE;QAC/B,IAAI,QAAQ,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QACxD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF,8BAAsB,CAAC,SAAS,EAAE,CAAC;AAGnC;;;;;;EAME;AAEF,MAAa,2BAA4B,SAAQ,wDAAyB;IAExE,MAAM,CAAC,WAAW,KAAa,OAAO,SAAS,CAAC,CAAC,CAAC;IAClD,MAAM,CAAC,WAAW,KAAa,OAAO,mBAAmB,CAAC,CAAC,CAAC;IAC5D,MAAM,CAAC,SAAS,KAAa,OAAO,SAAS,CAAC,CAAC,CAAC;IAChD,MAAM,CAAC,QAAQ,KAAa,OAAO,mBAAmB,CAAC,CAAC,CAAC;IACzD,MAAM,CAAC,WAAW,KAAa,OAAO,mBAAmB,CAAC,CAAC,CAAC;IAE5D,MAAM,CAAC,mCAAmC,CAAC,IAAY;QACrD,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACzD,IAAI,WAA+B,CAAC;YACpC,IAAI,QAAkB,CAAC;YAEvB,IAAI,KAAK,GAAQ;gBACf,IAAI,EAAE,IAAI;aACX,CAAC;YACF,KAAK,CAAC,GAAG,GAAG;gBACV,gCAAgC,CAAC,kFAAkF;gBACnH,EAAC,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAC;aACrC,CAAC;YAEF,wCAAkB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAM,EAAE;gBACxD,IAAI,CAAC,EAAE;oBAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBAChD,WAAW,GAAI,EAAyB,CAAC;gBACzC,IAAI,CAAC,WAAW,CAAC,cAAc;oBAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC,CAAC;gBACnG,OAAO,oBAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACZ,IAAI,CAAC,CAAC;oBAAE,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;gBAC5D,QAAQ,GAAI,CAAc,CAAC;gBAC3B,IAAI,CAAC,GAAG,CAAC,IAAI;oBAAE,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC7B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC;gBACnC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAC9B,GAAG,CAAC,MAAM,CAAC,kBAAkB,GAAG,WAAW,CAAC;gBAC5C,GAAG,CAAC,MAAM,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAEtC,IAAI,IAAI,GAAS,2BAA2B,CAAC,sBAAsB,CAAC,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAE7H,GAAG,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC9B,GAAG,CAAC,MAAM,CAAC,uBAAuB,GAAG;oBACnC,QAAQ,EAAE,KAAK;oBACf,aAAa,EAAE,KAAK;oBACpB,gBAAgB,EAAE,KAAK;oBACvB,gBAAgB,EAAE,KAAK;oBACvB,cAAc,EAAE,EAAE;oBAClB,cAAc,EAAE,KAAK;oBACrB,iBAAiB,EAAE,KAAK;oBACxB,iBAAiB,EAAE,KAAK;oBACxB,eAAe,EAAE,EAAE;iBACpB,CAAA;gBAED,IAAI,WAAW,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;oBACzD,GAAG,CAAC,MAAM,CAAC,uBAAuB,GAAG,WAAW,CAAC,MAAM,CAAC;iBACzD;gBAED,IAAI,WAAW,CAAC,QAAQ,EAAE;oBACxB,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACpD;gBAED,IAAI,WAAW,CAAC,aAAa,KAAK,SAAS,EAAE;oBAC3C,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,aAAa,GAAG,IAAI,CAAC;iBACzD;qBAAM,IAAI,WAAW,CAAC,aAAa,KAAK,OAAO,EAAE;oBAChD,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,gBAAgB,GAAG,IAAI,CAAC;iBAC5D;qBAAM,IAAI,WAAW,CAAC,aAAa,KAAK,gBAAgB,EAAE;oBACzD,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC3D,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,cAAc,GAAG,WAAW,CAAC,YAAY,CAAC;iBAC9E;gBAED,IAAI,WAAW,CAAC,aAAa,KAAK,SAAS,EAAE;oBAC3C,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC1D;qBAAM,IAAI,WAAW,CAAC,aAAa,KAAK,OAAO,EAAE;oBAChD,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAC7D;qBAAM,IAAI,WAAW,CAAC,aAAa,KAAK,gBAAgB,EAAE;oBACzD,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC5D,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,eAAe,GAAG,WAAW,CAAC,YAAY,CAAC;iBAC/E;gBAED,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;IACH,CAAC;IAED,MAAM,CAAC,2BAA2B,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAChF,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;QAC3B,OAAO,2BAA2B,CAAC,mCAAmC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/F,CAAC;IAED,MAAM,CAAC,sBAAsB,CAAC,WAA+B,EAAE,SAA8B,EAAE,QAAkB;QAE/G,IAAI,WAAqB,CAAC;QAC1B,IAAI,SAAS,YAAY,oBAAQ,EAAE;YACjC,WAAW,GAAG,SAAS,CAAC,GAAG,CAAA;SAC5B;aAAM,IAAI,SAAS,YAAY,YAAQ,EAAE;YACxC,WAAW,GAAG,SAAS,CAAC;SACzB;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;QAED,IAAI,IAAI,GAAS;YACf,cAAc,EAAE,cAAc,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE;YAC9D,SAAS,EAAE,WAAW,CAAC,IAAI;YAC3B,EAAE,EAAE,sCAAiB,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sCAAiB,CAAC,IAAI,CAAC,OAAO,CAAC;YAC1D,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC;YAC/C,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,oBAAoB,CAAC;YAE7D,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAC1D,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAC5D,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;YAEpE,mBAAmB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mBAAmB,CAAC;YAE3D,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;YACpE,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;YAChE,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;YACpE,0BAA0B,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,0BAA0B,CAAC;SAC1E,CAAC;QAEF,KAAK,IAAI,KAAK,IAAI,WAAW,CAAC,MAAM,EAAE;YACpC,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAE1C,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtD,KAAK,CAAC,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;aAC1C;YACD,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC1B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,6BAAqB,CAAC;gBACvD,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC;gBAClC,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC;aAC7C;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,8BAAsB,CAAC;gBACxD,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC;gBAClC,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC;aAC7C;iBAAM;gBACL,IAAI,gBAAgB,GAAW,GAAG,KAAK,CAAC,IAAI,WAAW,CAAC;gBACxD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAI,QAAY,CAAC,gBAAgB,CAAC,IAAI,QAAI,CAAC,YAAY,CAAC;aACvF;YACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;YACtD,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAE1C,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC,CAAC;aAC5E;YAED,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5C,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,UAAU,KAAK,MAAM,EAAE;oBACzD,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;iBAC7D;qBAAM;oBACL,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,EAAE,KAAK,CAAC,UAAU,EAAC,CAAC;iBACxE;aACF;YAED,IAAI,KAAK,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3C;YAED,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACzC;SAEF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,KAAe,EAAE,IAAY;QAClD,IAAI,WAA+B,CAAC;QACpC,IAAI,IAAU,CAAC;QACf,IAAI,UAAoB,CAAC;QACzB,OAAO,wCAAkB,CAAC,eAAe,CAAC,EAAC,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACxF,IAAI,CAAC,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAClD,WAAW,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,WAAW,CAAC,cAAc;gBAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;YAChE,OAAO,oBAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACZ,IAAI,CAAC,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAE,oBAAoB,CAAC,CAAC;YAC/C,UAAU,GAAG,CAAC,CAAC;YACf,IAAI,GAAG,2BAA2B,CAAC,sBAAsB,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;YAC1F,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;;;MAKE;IACA,MAAM,CAAC,mCAAmC,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACxF,IAAI,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,QAAQ;YAAE,OAAO,gCAAc,CAAC,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAChH,OAAO,gCAAc,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,YAAY,CAAC,GAAY,EAAE,GAAa;QACtC,OAAO,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;IAChC,CAAC;IAED,SAAS,CAAC,GAAY,EAAE,GAAa;QACnC,OAAO,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC;IAC5C,CAAC;IAED,iBAAiB,CAAC,KAAY,EAAE,GAAY,EAAE,GAAa;QACzD,OAAO,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACxD,KAAK,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAG,GAAG,CAAC,MAAM,CAAC,kBAAyC,CAAC,GAAG,EAAC,CAAC,CAAC;YACrF,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACrE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;YAClC,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC,CAAC;SACzH;QAED,IAAI,IAAI,GAAG,uBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEjE,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAW,EAAE,EAAE;YACvC,IAAI,GAAG;gBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAW,EAAE,EAAE;gBACvC,IAAI,GAAG;oBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAW,EAAE,EAAE;oBACvC,IAAI,GAAG;wBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC;oBACrD,IAAI,EAAE,CAAC;gBACT,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,eAAe,CAAC,OAAc,EAAE,GAAY,EAAE,GAAa;QACzD,IAAI,MAAM,GAAuB,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,uBAAuB,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE;YACrE,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9C,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IAED,cAAc,CAAC,OAAc,EAAE,GAAY,EAAE,GAAa;QACxD,IAAI,MAAM,GAAuB,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,uBAAuB,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE;YACrE,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9C,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IAED,iBAAiB,CAAC,MAAW,EAAE,GAAY,EAAE,GAAa;QACxD,IAAI,MAAM,GAAuB,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,uBAAuB,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE;YACrE,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAChC;QAED,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9C,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAChC;QAED,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,0BAA0B,CAAC,GAAY,EAAE,GAAa,EAAE,sBAA4D;QAClH,IAAI,oBAAoB,GAAmC,EAAE,CAAC;QAC9D,IAAI,MAAM,GAAI,GAAG,CAAC,MAAM,CAAC,kBAAyC,CAAC;QACnE,OAAO,KAAK,CAAC,0BAA0B,CAAC,GAAG,EAAE,GAAG,EAAE,sBAAsB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAClF,IAAI,gBAAgB,GAAoB,EAAE,CAAC;YAC3C,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE;gBAC/B,IAAI,OAAiB,CAAC;gBACtB,IAAI;oBACF,OAAO,GAAG,IAAI,YAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBAAC,OAAO,KAAK,EAAE;oBACd,SAAS;iBACV;gBACD,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAChC;YAED,IAAI,KAAK,GAAG,IAAI,SAAK,EAAE,CAAC;YACxB,KAAK,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAC,CAAC,CAAC;YAC7D,KAAK,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,EAAC,GAAG,EAAE,gBAAgB,EAAC,EAAC,CAAC,CAAC;YAC/C,OAAO,wCAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YAClB,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;gBAC1B,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAI,MAA6B,CAAC;aAC9E;YACD,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE;gBAC/B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ;oBAAE,SAAS;gBAChE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;oBAAE,SAAS;gBACrD,IAAI,SAAS,GAAG,IAAI,SAAK,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAC,CAAC,CAAC;gBACnE,IAAI,OAAiB,CAAC;gBACtB,IAAI;oBACF,OAAO,GAAG,IAAI,YAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBAAC,OAAO,KAAK,EAAE;oBACd,SAAS;iBACV;gBACD,SAAS,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;gBACvC,IAAI,WAAW,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC5D,IAAI,IAAI,GAAS,2BAA2B,CAAC,sBAAsB,CAAC,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC7H,sBAAsB,CAAC,IAAI,CAAC;oBAC1B,KAAK,EAAE,sCAAiB;oBACxB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,KAAK,CAAC,IAAI;oBACpB,eAAe,EAAE,QAAQ;oBACzB,iBAAiB,EAAE,KAAK;oBACxB,WAAW,EAAE,KAAK,CAAC,IAAI;oBACvB,SAAS,EAAE,UAAU;oBACrB,SAAS,EAAE,SAAS;oBACpB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,QAAQ;iBAClC,CAAC,CAAA;aACH;YACD,OAAO,sBAAsB,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0BAA0B,CAAC,GAAY,EAAE,GAAa,EAAE,sBAA4D;QAClH,OAAO,KAAK,CAAC,0BAA0B,CAAC,GAAG,EAAE,GAAG,EAAE,sBAAsB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAClF,IAAI,KAAK,GAAG,IAAI,SAAK,EAAE,CAAC;YACxB,KAAK,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAC,CAAC,CAAC;YAC7D,KAAK,CAAC,QAAQ,CAAC;gBACb,sEAAsE;gBACtE,MAAM,EAAE;oBACN,UAAU,EAAE;wBACV,MAAM,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAC;wBAClC,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE;qBAC9D;iBACF;aACF,CAAC,CAAC;YACH,OAAO,wCAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YAClB,KAAK,IAAI,MAAM,IAAI,CAAC,OAAO,CAA8B,EAAE;gBACzD,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE;oBAC/B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ;wBAAE,SAAS;oBAChE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,KAAK,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE;wBAAE,SAAS;oBAC7H,IAAI,SAAS,GAAG,IAAI,SAAK,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAC,CAAC,CAAC;oBACnE,SAAS,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC;oBAC1C,IAAI,IAAI,GAAS,2BAA2B,CAAC,sBAAsB,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;oBACxH,sBAAsB,CAAC,IAAI,CAAC;wBAC1B,KAAK,EAAE,sCAAiB;wBACxB,IAAI,EAAE,IAAI;wBACV,QAAQ,EAAE,MAAM,CAAC,IAAI;wBACrB,eAAe,EAAE,QAAQ;wBACzB,iBAAiB,EAAE,KAAK,CAAC,IAAI;wBAC7B,WAAW,EAAE,IAAI;wBACjB,SAAS,EAAE,UAAU;wBACrB,SAAS,EAAE,SAAS;wBACpB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,QAAQ;qBAClC,CAAC,CAAC;iBACJ;aACF;YACD,OAAO,sBAAsB,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,GAAa,EAAE,OAAc;QACpD,IAAI,MAAM,GAAuB,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC/D,IAAI,SAAS,GAAoB,EAAE,CAAC;QACpC,IAAI,QAAQ,GAAwB,EAAE,CAAC;QACvC,SAAS,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACtC,KAAK,IAAI,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE;YAC/C,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG;gBAAE,SAAS;YACxD,IAAI,QAAQ,KAAK,OAAO;gBAAE,SAAS;YACnC,IAAI,QAAQ,KAAK,SAAS;gBAAE,SAAS;YACrC,IAAI,IAAI,GAAkB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC/D,IAAI,OAAO,GAAQ,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAC/D,IAAI,KAAK,GAAI,OAAe,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK;gBAAE,SAAS;YACrB,SAAS,CAAC,GAAG,GAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YAChC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACzB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAChF,SAAS,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC;SACL;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrC,IAAI,eAAe,GAAwB,EAAE,CAAC;YAC9C,IAAI,MAAM,CAAC,uBAAuB,EAAE;gBAClC,IAAI,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC;gBAC1C,IAAI,OAAO,GAAG,MAAM,CAAC,wBAAwB,CAAC;gBAC9C,IAAI,MAAM,GAAG,MAAM,CAAC,8BAA8B,CAAC;gBACnD,IAAI,MAAM,GAAG,MAAM,CAAC,8BAA8B,CAAC;gBACnD,IAAI,YAAY,GAAG,oBAAoB,CAAC;gBACxC,IAAI,gBAAgB,GAA4B,MAAM,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAC,IAAI,EAAE,MAAM,CAAC,yBAAyB,EAAE,OAAO,EAAE,MAAM,CAAC,wBAAwB,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC7K,IAAI,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC9J,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAC7C;YAED,IAAI,MAAM,CAAC,sBAAsB,EAAE;gBACjC,IAAI,aAAa,GAAG,MAAM,CAAC,qBAAqB,CAAC;gBACjD,IAAK,OAAe,CAAC,aAAa,CAAC,EAAE;oBACnC,IAAI,KAAK,GAAI,OAAe,CAAC,aAAa,CAAC,CAAA;oBAC3C,IAAI,OAAO,GAAG,MAAM,CAAC,uBAAuB,CAAC;oBAC7C,IAAI,MAAM,GAAG,MAAM,CAAC,6BAA6B,CAAC;oBAClD,IAAI,MAAM,GAAG,MAAM,CAAC,6BAA6B,CAAC;oBAClD,IAAI,YAAY,GAAG,oBAAoB,CAAC;oBACxC,IAAI,gBAAgB,GAA4B,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,MAAM,CAAC,wBAAwB,EAAE,OAAO,EAAE,MAAM,CAAC,uBAAuB,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACzK,IAAI,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC9J,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC,CAAC,CAAC;oBACH,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;iBAC7C;aACF;YAED,OAAO,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC5C,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,GAAa,EAAE,KAAa,EAAE,OAAe,EAAE,OAAc,EAAE,SAA0B,EAAE,aAAqB,EAAE,aAAqB,EAAE,WAAmB,oBAAoB,EAAE,gBAAyC;QAC1O,IAAI,YAAY,GAAG,4BAAwB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAE/D,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;YACxC,GAAG,EAAE,GAAG;YACR,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,gBAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;YACnC,aAAa,EAAE,aAAa;YAC5B,aAAa,EAAE,aAAa;SAC7B,EAAE,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YAC1C,IAAI,CAAC,QAAQ;gBAAE,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;YACzE,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAjbD,kEAibC","sourcesContent":["import { PolicyControllerMiddlware } from './../user/policy/policy.middleware.controller';\nimport { AuthMiddleware } from './../user/auth.middleware';\nimport { AppModel } from './../app/app.model';\nimport { DynamicConfigModel } from './dynamicconfig.model';\nimport { DynamicDataModel2 } from './dynamicdata2.model';\nimport { Request, Response, NextFunction } from 'express';\nimport { RelatedModelFilterQueryConfig, StringTMap, Policies } from '../../';\nimport { Deco, TypeDecorator, type, ObjectId, Query, Model, MultipartMiddleware, UpdateQuery, StringStringMap } from '../../';\nimport { NotificationEmailService, TemplateOverride } from '../../';\nimport moment from 'moment';\nlet debug = require('debug')('app:middleware:controllers:dynamic2');\n\nconst collectionName = DynamicDataModel2.deco.collectionName;\n\nconst propertyTypes = Object.assign({}, DynamicDataModel2.deco.propertyTypes);\nconst propertyTypesOptions = Object.assign({}, DynamicDataModel2.deco.propertyTypesOptions);\n\nconst propertyInputs = JSON.parse(JSON.stringify(DynamicDataModel2.deco.propertyInputs));\nconst propertyOutputs = JSON.parse(JSON.stringify(DynamicDataModel2.deco.propertyOutputs));\nconst propertyToDocuments = JSON.parse(JSON.stringify(DynamicDataModel2.deco.propertyToDocuments));\n\nconst propertyValidations = Object.assign({}, DynamicDataModel2.deco.propertyValidations);\n\nconst propertySearchables = JSON.parse(JSON.stringify(DynamicDataModel2.deco.propertySearchables));\nconst propertySortables = JSON.parse(JSON.stringify(DynamicDataModel2.deco.propertySortables));\nconst propertyFilterables = JSON.parse(JSON.stringify(DynamicDataModel2.deco.propertyFilterables));\nconst propertyFilterablesOptions = Object.assign({}, DynamicDataModel2.deco.propertyFilterablesOptions);\n\nexport let dynamicModelDecorator = new TypeDecorator('dynamicmodel');\ndynamicModelDecorator.input = type.modelDecorator.input;\ndynamicModelDecorator.output = type.modelDecorator.output;\ndynamicModelDecorator.validate = (value: any, obj: any, options: any) => {\n  if (value === undefined || value === null) return true;\n\n  // todo: make sure the user has the right to create this relation\n  let modelId: ObjectId;\n\n  try {\n    modelId = new ObjectId(options.model);\n  } catch (e) {\n    return false;\n  }\n  \n  let configQuery: any = {\n    _id: modelId,\n    $or: [\n      {appId: {$in: [options.appId, options.relatedToAppId]}},\n      {relatedToAppId: {$in: [options.appId, options.relatedToAppId]}}\n    ]\n  };\n\n  let configModel: DynamicConfigModel;\n  return DynamicConfigModel.getOneWithQuery(configQuery).then((cm): Promise<any> | boolean => {\n    if (!cm) return false;\n    configModel = cm;\n    if (!configModel.appId || !configModel.relatedToAppId) throw new Error('Invalid configModel');\n    return Promise.all([\n      AppModel.getOneWithId(configModel.appId),\n      AppModel.getOneWithId(configModel.relatedToAppId)\n    ]);\n  }).then((values) => {\n    let deco: Deco = Dynamic2MiddlwareController.getDecoFromConfigModel(configModel, values[0], values[1]);\n    return DynamicDataModel2.getOneWithQuery({appId: options.relatedToAppId, modelId: modelId, _id: value}, {deco: deco});\n  }).then((data) => {\n    if (!data) return false;\n    return true;\n  });\n};\ndynamicModelDecorator.decorator();\n\nexport let dynamicModelsDecorator = new TypeDecorator('dynamicmodels');\ndynamicModelsDecorator.input = type.modelsDecorator.input;\ndynamicModelsDecorator.output = type.modelsDecorator.output;\ndynamicModelsDecorator.toDocument = (updateQuery: UpdateQuery, key: string, value: any, operation: 'insert' | 'update' | 'upsert', options: any, element: any, target: any) => {\n  if (value === null || value === undefined) return Promise.resolve();\n  updateQuery.set(key, value);\n  return Promise.resolve();\n};\ndynamicModelsDecorator.validate = (value: any, obj: any, options: any) => {\n  if (value === undefined || value === []) return true;\n  if (!Array.isArray(value)) return false;\n  let uniqueValue: Array<ObjectId> = [];\n    let uniqueValueString: Array<string> = [];\n    for (let v of value) {\n      if (uniqueValueString.indexOf(v.toString()) === -1) {\n        uniqueValue.push(v);\n        uniqueValueString.push(v.toString());\n      }\n    }\n  \n  // todo: make sure the user has the right to create this relation\n  let modelId: ObjectId;\n\n  try {\n    modelId = new ObjectId(options.model);\n  } catch (e) {\n    return false;\n  }\n  \n  let configQuery: any = {\n    _id: modelId,\n    $or: [\n      {appId: {$in: [options.appId, options.relatedToAppId]}},\n      {relatedToAppId: {$in: [options.appId, options.relatedToAppId]}}\n    ]\n  };\n\n  let configModel: DynamicConfigModel;\n  return DynamicConfigModel.getOneWithQuery(configQuery).then((cm): Promise<any> | boolean => {\n    if (!cm) return false;\n    configModel = cm;\n    if (!configModel.appId || !configModel.relatedToAppId) throw new Error('Invalid configModel');\n    return Promise.all([\n      AppModel.getOneWithId(configModel.appId),\n      AppModel.getOneWithId(configModel.relatedToAppId)\n    ]);\n  }).then((values) => {\n    let deco: Deco = Dynamic2MiddlwareController.getDecoFromConfigModel(configModel, values[0], values[1]);\n    return DynamicDataModel2.getAll(new Query({appId: options.relatedToAppId, modelId: modelId, _id: {$in: uniqueValue}}), {deco: deco});\n  }).then((elements: Array<any>) => {\n    if (elements.length === uniqueValue.length) return true;\n    return false;\n  });\n};\ndynamicModelsDecorator.decorator();\n\n\n/*\n// fetch the model relations\n  return options.model.getAll(new Query({_id: {$in: value}})).then((elements: Array<Model>) => {\n    if (elements.length === value.length) return true;\n    return false;\n  });\n*/\n\nexport class Dynamic2MiddlwareController extends PolicyControllerMiddlware {\n  \n  static getAllRoute(): string { return '/:slug/'; }\n  static getOneRoute(): string { return '/:slug/:elementId'; }\n  static postRoute(): string { return '/:slug/'; }\n  static putRoute(): string { return '/:slug/:elementId'; }\n  static deleteRoute(): string { return '/:slug/:elementId'; }\n\n  static placeDynamicConfigInRequestWithSlug(slug: string) { \n    return (req: Request, res: Response, next: NextFunction) => {\n      let configModel: DynamicConfigModel;\n      let modelApp: AppModel;\n\n      let query: any = {\n        slug: slug\n      };\n      query.$or = [\n        /*{appId: res.locals.app._id},*/ // this is only usefull if we want to be able to manage data from SWISSDATA CLIENT\n        {relatedToAppId: res.locals.app._id}\n      ];\n\n      DynamicConfigModel.getOneWithQuery(query).then((cm):any => {\n        if (!cm) return next(new Error('Invalid Slug'));\n        configModel = (cm as DynamicConfigModel);\n        if (!configModel.relatedToAppId) return next(new Error('Missing relatedToAppId in DynamicConfig'));\n        return AppModel.getOneWithId(configModel.relatedToAppId);\n      }).then((a) => {\n        if (!a) return next(new Error('Invalid dynamic model app'));\n        modelApp = (a as AppModel);\n        if (!req.body) req.body = {};\n        req.body.modelId = configModel._id;\n        req.body.appId = modelApp._id;\n        res.locals.dynamicConfigModel = configModel;\n        res.locals.dynamicModelApp = modelApp;\n\n        let deco: Deco = Dynamic2MiddlwareController.getDecoFromConfigModel(configModel, res.locals.app, res.locals.dynamicModelApp);\n\n        res.locals.dynamicDeco = deco;\n        res.locals.dynamicControllerAccess = {\n          isPublic: false,\n          readByCreator: false,\n          readByUsersArray: false,\n          readByUsersRoles: false,\n          readUsersRoles: [],\n          writeByCreator: false,\n          writeByUsersArray: false,\n          writeByUsersRoles: false,\n          writeUsersRoles: [],\n        }\n\n        if (configModel.policy && Object.keys(configModel.policy)) {\n          res.locals.dynamicControllerPolicy = configModel.policy;\n        }\n\n        if (configModel.isPublic) {\n          res.locals.dynamicControllerAccess.isPublic = true;\n        }\n\n        if (configModel.readingAccess === 'creator') {\n          res.locals.dynamicControllerAccess.readByCreator = true;\n        } else if (configModel.readingAccess === 'users') {\n          res.locals.dynamicControllerAccess.readByUsersArray = true;\n        } else if (configModel.readingAccess === 'usersWithRoles') {\n          res.locals.dynamicControllerAccess.readByUsersRoles = true;\n          res.locals.dynamicControllerAccess.readUsersRoles = configModel.readingRoles;\n        }\n\n        if (configModel.writingAccess === 'creator') {\n          res.locals.dynamicControllerAccess.writeByCreator = true;\n        } else if (configModel.writingAccess === 'users') {\n          res.locals.dynamicControllerAccess.writeByUsersArray = true;\n        } else if (configModel.writingAccess === 'usersWithRoles') {\n          res.locals.dynamicControllerAccess.writeByUsersRoles = true;\n          res.locals.dynamicControllerAccess.writeUsersRoles = configModel.readingRoles;\n        }\n\n        next();\n      });\n    }\n  }\n\n  static placeDynamicConfigInRequest(req: Request, res: Response, next: NextFunction) {\n    let slug = req.params.slug;\n    return Dynamic2MiddlwareController.placeDynamicConfigInRequestWithSlug(slug)(req, res, next);\n  }\n\n  static getDecoFromConfigModel(configModel: DynamicConfigModel, parentApp: AppModel | ObjectId, appModel: AppModel): Deco {\n\n    let parentAppId: ObjectId;\n    if (parentApp instanceof AppModel) {\n      parentAppId = parentApp._id\n    } else if (parentApp instanceof ObjectId) {\n      parentAppId = parentApp;\n    } else {\n      throw new Error('Invalid parentApp param');\n    }\n\n    let deco: Deco = {\n      collectionName: collectionName + '_' + appModel._id.toString(),\n      modelName: configModel.slug,\n      db: DynamicDataModel2.deco.db,\n      options: Object.assign({}, DynamicDataModel2.deco.options),\n      propertyTypes: Object.assign({}, propertyTypes),\n      propertyTypesOptions: Object.assign({}, propertyTypesOptions),\n\n      propertyInputs: JSON.parse(JSON.stringify(propertyInputs)),\n      propertyOutputs: JSON.parse(JSON.stringify(propertyOutputs)),\n      propertyToDocuments: JSON.parse(JSON.stringify(propertyToDocuments)),\n\n      propertyValidations: Object.assign({}, propertyValidations),\n\n      propertySearchables: JSON.parse(JSON.stringify(propertySearchables)),\n      propertySortables: JSON.parse(JSON.stringify(propertySortables)),\n      propertyFilterables: JSON.parse(JSON.stringify(propertyFilterables)),\n      propertyFilterablesOptions: Object.assign({}, propertyFilterablesOptions)\n    };\n\n    for (let index in configModel.fields) {\n      let field = configModel.fields[index];\n      deco.propertyInputs.push(field.name);\n      deco.propertyOutputs.push(field.name);\n      deco.propertyToDocuments.push(field.name);\n\n      if (field.type === 'string' && field.options.multilang) {\n        field.options.locales = appModel.locales;\n      }\n      if (field.type === 'model') {\n        deco.propertyTypes[field.name] = dynamicModelDecorator;\n        field.options.appId = parentAppId;\n        field.options.relatedToAppId = appModel._id;\n      } else if (field.type === 'models') {\n        deco.propertyTypes[field.name] = dynamicModelsDecorator;\n        field.options.appId = parentAppId;\n        field.options.relatedToAppId = appModel._id;\n      } else {\n        let typeDecoratorKey: string = `${field.type}Decorator`;\n        deco.propertyTypes[field.name] = (type as any)[typeDecoratorKey] || type.anyDecorator;\n      }\n      deco.propertyTypesOptions[field.name] = field.options;\n      deco.propertyValidations[field.name] = [];\n\n      if (field.required) {\n        deco.propertyValidations[field.name].push({type: 'required', options: {}});\n      }\n\n      if (field.filterable !== 'no') {\n        deco.propertyFilterables.push((field.name));\n        if (field.type === 'model' && field.filterable === 'auto') {\n          deco.propertyFilterablesOptions[field.name] = {type: 'ids'};\n        } else {\n          deco.propertyFilterablesOptions[field.name] = {type: field.filterable};\n        }\n      }\n\n      if (field.searchable) {\n        deco.propertySearchables.push(field.name);\n      }\n\n      if (field.sortable) {\n        deco.propertySortables.push(field.name);\n      }\n\n    }\n    return deco;\n  }\n\n  static getDecoFromSlug(appId: ObjectId, slug: string): Promise<Deco> {\n    let configModel: DynamicConfigModel;\n    let deco: Deco;\n    let relatedApp: AppModel;\n    return DynamicConfigModel.getOneWithQuery({relatedToAppId: appId, slug: slug}).then((c) => {\n      if (!c) throw new Error('Model Config not found');\n      configModel = c;\n      if (!configModel.relatedToAppId) throw new Error('Invalid app');\n      return AppModel.getOneWithId(configModel.relatedToAppId);\n    }).then((a) => {\n      if (!a) throw new Error ('Missing relatedApp');\n      relatedApp = a;\n      deco = Dynamic2MiddlwareController.getDecoFromConfigModel(configModel, appId, relatedApp);\n      return deco;\n    });\n  }\n/*\n  static authenticateIfNotPublic(req: Request, res: Response, next: NextFunction) {\n    if (res.locals.dynamicControllerAccess.isPublic) return next();\n    return AuthMiddleware.authenticate(req, res, next);\n  }\n*/\n  static authenticateAndErrorOnlyIfNotPublic(req: Request, res: Response, next: NextFunction) {\n    if (res.locals.dynamicControllerAccess.isPublic) return AuthMiddleware.authenticateWithoutError(req, res, next);\n    return AuthMiddleware.authenticate(req, res, next);\n  }\n\n  getModelDeco(req: Request, res: Response) {\n    return res.locals.dynamicDeco;\n  }\n\n  getPolicy(req: Request, res: Response): Policies.Policy {\n    return res.locals.dynamicControllerPolicy;\n  }\n\n  extendGetAllQuery(query: Query, req: Request, res: Response): Promise<void> {\n    return super.extendGetAllQuery(query, req, res).then(() => {\n      query.addQuery({modelId: (res.locals.dynamicConfigModel as DynamicConfigModel)._id});\n      return Promise.resolve();\n    });\n  }\n\n  static multipartWrapper(req: Request, res: Response, next: NextFunction): any {\n    if (!res.locals.dynamicConfigModel) {\n      return next(new Error('Missing dynamicConfigModel in response (did you forget to call placeDynamicConfigInRequest ?)'));\n    }\n\n    let mdws = MultipartMiddleware.parseDeco(res.locals.dynamicDeco);\n\n    return mdws[0](req, res, (err: string) => {\n      if (err) return next(err);\n      return mdws[1](req, res, (err: string) => {\n        if (err) return next(err);\n        return mdws[2](req, res, (err: string) => {\n          if (err) return next(err);\n          req.body.modelId = res.locals.dynamicConfigModel._id;\n          next();\n        });\n      });\n    });\n\n  }\n\n  postAfterInsert(element: Model, req: Request, res: Response): Promise<Model> {\n    let config: DynamicConfigModel = res.locals.dynamicConfigModel;\n    if (!config.enableAdminNotification && !config.enableUserNotification) {\n      return Promise.resolve(element);\n    }\n\n    if (config.notifyWhen.indexOf('create') === -1) {\n      return Promise.resolve(element);\n    }\n\n    return this.prepareModelNotification(res, element);\n  }\n\n  putAfterUpdate(element: Model, req: Request, res: Response): Promise<Model> {\n    let config: DynamicConfigModel = res.locals.dynamicConfigModel;\n    if (!config.enableAdminNotification && !config.enableUserNotification) {\n      return Promise.resolve(element);\n    }\n\n    if (config.notifyWhen.indexOf('update') === -1) {\n      return Promise.resolve(element);\n    }\n\n    return this.prepareModelNotification(res, element);\n  }\n\n  deleteAfterDelete(result: any, req: Request, res: Response): Promise<any> {\n    let config: DynamicConfigModel = res.locals.dynamicConfigModel;\n    if (!config.enableAdminNotification && !config.enableUserNotification) {\n      return Promise.resolve(result);\n    }\n\n    if (config.notifyWhen.indexOf('delete') === -1) {\n      return Promise.resolve(result);\n    }\n\n    return Promise.resolve(result);\n  }\n\n  findOriginalModelRelations(req: Request, res: Response, relatedQueriesSettings: Array<RelatedModelFilterQueryConfig>): Promise<Array<RelatedModelFilterQueryConfig>> {\n    let relatedModelsConfigs: StringTMap<DynamicConfigModel> = {};\n    let config = (res.locals.dynamicConfigModel as DynamicConfigModel);\n    return super.findOriginalModelRelations(req, res, relatedQueriesSettings).then(() => {\n      let relatedModelsIds: Array<ObjectId> = [];\n      for (let field of config.fields) {\n        let modelId: ObjectId;\n        try {\n          modelId = new ObjectId(field.options.model);\n        } catch (error) {\n          continue;\n        }\n        relatedModelsIds.push(modelId);\n      }\n\n      let query = new Query();\n      query.addQuery({appId: res.locals.dynamicConfigModel.appId});\n      query.addQuery({_id: {$in: relatedModelsIds}});\n      return DynamicConfigModel.getAll(query);\n    }).then((configs) => {\n      for (let config of configs) {\n        relatedModelsConfigs[config._id.toString()] = (config as DynamicConfigModel);\n      }\n      for (let field of config.fields) {\n        if (field.type !== 'model' && field.type !== 'models') continue;\n        if (!field.options || !field.options.model) continue;\n        let baseQuery = new Query({appId: res.locals.dynamicModelApp._id});\n        let modelId: ObjectId;\n        try {\n          modelId = new ObjectId(field.options.model);\n        } catch (error) {\n          continue;\n        }\n        baseQuery.addQuery({modelId: modelId});\n        let modelConfig = relatedModelsConfigs[field.options.model];\n        let deco: Deco = Dynamic2MiddlwareController.getDecoFromConfigModel(modelConfig, res.locals.app, res.locals.dynamicModelApp);\n        relatedQueriesSettings.push({\n          model: DynamicDataModel2,\n          deco: deco,\n          queryKey: field.name,\n          queriedModelKey: 'subKey',\n          queriedModelIdKey: '_id',\n          finalReqKey: field.name,\n          direction: 'detected',\n          baseQuery: baseQuery,\n          multiple: field.type === 'models'\n        })\n      }\n      return relatedQueriesSettings;\n    });\n  }\n\n  findDetectedModelRelations(req: Request, res: Response, relatedQueriesSettings: Array<RelatedModelFilterQueryConfig>): Promise<Array<RelatedModelFilterQueryConfig>> {\n    return super.findDetectedModelRelations(req, res, relatedQueriesSettings).then(() => {\n      let query = new Query();\n      query.addQuery({appId: res.locals.dynamicConfigModel.appId});\n      query.addQuery({\n        //\"fields.options.model\": res.locals.dynamicConfigModel._id.toString()\n        fields: {\n          $elemMatch: {\n            \"type\": {$in: ['model', 'models']},\n            \"options.model\": res.locals.dynamicConfigModel._id.toString()\n          }\n        }\n      });\n      return DynamicConfigModel.getAll(query);\n    }).then((configs) => {\n      for (let config of (configs) as Array<DynamicConfigModel>) {\n        for (let field of config.fields) {\n          if (field.type !== 'model' && field.type !== 'models') continue;\n          if (!field.options || !field.options.model || field.options.model !== res.locals.dynamicConfigModel._id.toString()) continue;\n          let baseQuery = new Query({appId: res.locals.dynamicModelApp._id});\n          baseQuery.addQuery({modelId: config._id});\n          let deco: Deco = Dynamic2MiddlwareController.getDecoFromConfigModel(config, res.locals.app, res.locals.dynamicModelApp);\n          relatedQueriesSettings.push({\n            model: DynamicDataModel2,\n            deco: deco,\n            queryKey: config.slug,\n            queriedModelKey: 'subKey',\n            queriedModelIdKey: field.name,\n            finalReqKey: 'id',\n            direction: 'detected',\n            baseQuery: baseQuery,\n            multiple: field.type === 'models'\n          });\n        }\n      }\n      return relatedQueriesSettings;\n    });\n  }\n\n  prepareModelNotification(res: Response, element: Model) {\n    let config: DynamicConfigModel = res.locals.dynamicConfigModel;\n    let keyValues: StringStringMap = {};\n    let promises: Array<Promise<any>> = [];\n    keyValues.id = element._id.toString();\n    for (let property in element.deco.propertyTypes) {\n      if (property && property.substr(0, 1) === '_') continue;\n      if (property === 'appId') continue;\n      if (property === 'modelId') continue;\n      let type: TypeDecorator = element.deco.propertyTypes[property];\n      let options: any = element.deco.propertyTypesOptions[property];\n      let value = (element as any)[property];\n      if (!value) continue;\n      keyValues['_'+property] = value;\n      keyValues[property] = '';\n      promises.push(type.toString(property, value, options, this, element).then((str) => {\n        keyValues[property] = str;\n      }));\n    }\n\n    return Promise.all(promises).then(() => {\n      let sendingPromises: Array<Promise<any>> = [];\n      if (config.enableAdminNotification) {\n        let email = config.notificationAdminEmail;\n        let subject = config.notificationAdminSubject;\n        let prefix = config.notificationAdminContentPrefix;\n        let suffix = config.notificationAdminContentSuffix;\n        let templatePath = 'model-notification';\n        let templateOverride: TemplateOverride | null = config.notificationAdminTemplate ? {html: config.notificationAdminTemplate, subject: config.notificationAdminSubject} : null;\n        let sendAdminEmailPromise = this.sendNotification(res.locals.app, email, subject, element, keyValues, prefix, suffix, templatePath, templateOverride).then(() => {\n          return Promise.resolve(element);\n        });\n        sendingPromises.push(sendAdminEmailPromise);\n      }\n\n      if (config.enableUserNotification) {\n        let emailProperty = config.notificationUserField;\n        if ((element as any)[emailProperty]) {\n          let email = (element as any)[emailProperty]\n          let subject = config.notificationUserSubject;\n          let prefix = config.notificationUserContentPrefix;\n          let suffix = config.notificationUserContentSuffix;\n          let templatePath = 'model-notification';\n          let templateOverride: TemplateOverride | null = config.notificationUserTemplate ? {html:config.notificationUserTemplate, subject: config.notificationUserSubject} : null;\n          let sendAdminEmailPromise = this.sendNotification(res.locals.app, email, subject, element, keyValues, prefix, suffix, templatePath, templateOverride).then(() => {\n            return Promise.resolve(element);\n          });\n          sendingPromises.push(sendAdminEmailPromise);\n        }\n      }\n\n      return Promise.all(sendingPromises).then(() => {\n        return Promise.resolve(element);\n      });\n    });\n  }\n\n  sendNotification(app: AppModel, email: string, subject: string, element: Model, keyValues: StringStringMap, contentPrefix: string, contentSuffix: string, template: string = 'model-notification', templateOverride: TemplateOverride | null) {\n    let emailService = NotificationEmailService.serviceForApp(app);\n\n    return emailService.send(email, template, {\n      app: app,\n      element: element,\n      keyValues: keyValues,\n      subject: subject,\n      date: moment().format('DD.MM.YYYY'),\n      contentPrefix: contentPrefix,\n      contentSuffix: contentSuffix\n    }, templateOverride).then((response: any) => {\n      if (!response) throw new Error('Failed to send validation notification');\n      return true;\n    });\n  }\n\n}\n"]}