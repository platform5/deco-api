{"version":3,"file":"dynamicdata.controller.js","sourceRoot":"","sources":["../../../src/modules/dynamic/dynamicdata.controller.ts"],"names":[],"mappings":";;AAAA,iFAA4E;AAC5E,qDAAiD;AACjD,4DAAwD;AACxD,qFAA+E;AAC/E,6DAAyD;AACzD,qCAAiC;AACjC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC,CAAC;AAE3D,MAAM,MAAM,GAAW,gBAAM,EAAE,CAAC;AAEhC,IAAI,kBAAkB,GAAG,IAAI,4DAA2B,CAAC,sCAAiB,CAAC,CAAC;AAE5E,MAAM,CAAC,GAAG,CACR,4DAA2B,CAAC,WAAW,EAAE,EACzC,8BAAa,CAAC,kBAAkB,EAChC,4DAA2B,CAAC,2BAA2B,EACvD,4DAA2B,CAAC,mCAAmC,EAC/D,kBAAkB,CAAC,mBAAmB,EAAE;AACxC,6BAA6B;AAC7B,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAC,CAAC,EAClG,kBAAkB,CAAC,SAAS,CAAC;IAC3B;QACE,WAAW,EAAE,YAAY;QACzB,cAAc,EAAE,MAAM;QACtB,yBAAyB,EAAE,KAAK;QAChC,KAAK,EAAE,sBAAS;QAChB,gBAAgB,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC;KAC5C;CACF,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,4DAA2B,CAAC,WAAW,EAAE,EACzC,8BAAa,CAAC,kBAAkB,EAChC,4DAA2B,CAAC,2BAA2B,EACvD,4DAA2B,CAAC,mCAAmC,EAC/D,2CAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,EACxC,kBAAkB,CAAC,MAAM,EAAE,CAC5B,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,4DAA2B,CAAC,WAAW,EAAE,GAAG,QAAQ,EACpD,8BAAa,CAAC,kBAAkB,EAChC,4DAA2B,CAAC,2BAA2B,EACvD,4DAA2B,CAAC,mCAAmC,EAC/D,2CAAmB,CAAC,WAAW,CAAC,SAAS,CAAC,CAC3C,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,4DAA2B,CAAC,SAAS,EAAE,EACvC,8BAAa,CAAC,kBAAkB,EAChC,4DAA2B,CAAC,2BAA2B,EACvD,4DAA2B,CAAC,mCAAmC,EAC/D,4DAA2B,CAAC,gBAAgB;AAC5C,yCAAyC;AACzC,kBAAkB,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,EAChE,2CAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,EACxC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,CACzC,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,4DAA2B,CAAC,QAAQ,EAAE,EACtC,8BAAa,CAAC,kBAAkB,EAChC,4DAA2B,CAAC,2BAA2B,EACvD,4DAA2B,CAAC,mCAAmC,EAC/D,2CAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,EACxC,4DAA2B,CAAC,gBAAgB,EAC5C,kBAAkB,CAAC,GAAG,EAAE,CACzB,CAAC;AAEF,MAAM,CAAC,MAAM,CACX,4DAA2B,CAAC,WAAW,EAAE,EACzC,8BAAa,CAAC,kBAAkB,EAChC,4DAA2B,CAAC,2BAA2B,EACvD,4DAA2B,CAAC,mCAAmC,EAC/D,2CAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,EACxC,kBAAkB,CAAC,MAAM,EAAE,CAC5B,CAAC;AAEW,QAAA,qBAAqB,GAAW,MAAM,CAAC","sourcesContent":["import { ModelHitsMiddleware } from './../model-hits/model.hits.controller';\nimport { UserModel } from './../user/user.model';\nimport { AppMiddleware } from './../app/app.middleware';\nimport { Dynamic2MiddlwareController } from './dynamic2.middleware.controller';\nimport { DynamicDataModel2 } from './dynamicdata2.model';\nimport { Router } from 'express';\nlet debug = require('debug')('app:controller:dynamicdata');\n\nconst router: Router = Router();\n\nlet dynamic2Controller = new Dynamic2MiddlwareController(DynamicDataModel2);\n\nrouter.get(\n  Dynamic2MiddlwareController.getAllRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  Dynamic2MiddlwareController.placeDynamicConfigInRequest,\n  Dynamic2MiddlwareController.authenticateAndErrorOnlyIfNotPublic,\n  dynamic2Controller.prepareQueryFromReq(),\n  //dynamic2Controller.getAll()\n  dynamic2Controller.getAll(null, {ignoreOutput: false, ignoreSend: true, addCountInKey: '__count'}),\n  dynamic2Controller.autoFetch([\n    {\n      originalKey: '_createdBy',\n      destinationKey: 'user',\n      matchingKeyInRelatedModel: '_id',\n      model: UserModel,\n      includeModelProp: ['firstname', 'lastname']\n    }\n  ])\n);\n\nrouter.get(\n  Dynamic2MiddlwareController.getOneRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  Dynamic2MiddlwareController.placeDynamicConfigInRequest,\n  Dynamic2MiddlwareController.authenticateAndErrorOnlyIfNotPublic,\n  ModelHitsMiddleware.singleHit('dynamic'),\n  dynamic2Controller.getOne()\n);\n\nrouter.get(\n  Dynamic2MiddlwareController.getOneRoute() + '/stats',\n  AppMiddleware.fetchWithPublicKey,\n  Dynamic2MiddlwareController.placeDynamicConfigInRequest,\n  Dynamic2MiddlwareController.authenticateAndErrorOnlyIfNotPublic,\n  ModelHitsMiddleware.singleStats('dynamic')\n);\n\nrouter.post(\n  Dynamic2MiddlwareController.postRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  Dynamic2MiddlwareController.placeDynamicConfigInRequest,\n  Dynamic2MiddlwareController.authenticateAndErrorOnlyIfNotPublic,\n  Dynamic2MiddlwareController.multipartWrapper,\n  // AppMiddleware.addAppIdToBody('appId'),\n  dynamic2Controller.post({ignoreOutput: false, ignoreSend: true}),\n  ModelHitsMiddleware.singleHit('dynamic'),\n  dynamic2Controller.sendLocals('element')\n);\n\nrouter.put(\n  Dynamic2MiddlwareController.putRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  Dynamic2MiddlwareController.placeDynamicConfigInRequest,\n  Dynamic2MiddlwareController.authenticateAndErrorOnlyIfNotPublic,\n  ModelHitsMiddleware.singleHit('dynamic'),\n  Dynamic2MiddlwareController.multipartWrapper,\n  dynamic2Controller.put()\n);\n\nrouter.delete(\n  Dynamic2MiddlwareController.deleteRoute(),\n  AppMiddleware.fetchWithPublicKey,\n  Dynamic2MiddlwareController.placeDynamicConfigInRequest,\n  Dynamic2MiddlwareController.authenticateAndErrorOnlyIfNotPublic,\n  ModelHitsMiddleware.singleHit('dynamic'),\n  dynamic2Controller.delete()\n);\n\nexport const DynamicDataController: Router = router;"]}