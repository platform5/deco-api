{"version":3,"file":"deco.js","sourceRoot":"","sources":["../../src/interfaces/deco.ts"],"names":[],"mappings":";;AAkCA,SAAgB,SAAS,CAAC,IAAU;IAClC,IAAI,MAAM,GAAS;QACjB,cAAc,EAAE,IAAI,CAAC,cAAc;QACnC,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;QAChD,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;QACxC,EAAE,EAAE,IAAI,CAAC,EAAE;QAEX,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;QACpD,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,oBAAoB,CAAC;QAElE,cAAc,EAAG,EAAe,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5D,eAAe,EAAG,EAAe,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9D,mBAAmB,EAAG,EAAe,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QAEtE,mBAAmB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC;QAEhE,mBAAmB,EAAG,EAAe,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACtE,iBAAiB,EAAG,EAAe,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAClE,mBAAmB,EAAG,EAAe,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACtE,0BAA0B,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,0BAA0B,CAAC;KAC/E,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC;AAvBD,8BAuBC","sourcesContent":["import { Db, ObjectId } from 'mongodb';\nimport { ModelOptions, Model } from './../decorators/model';\nimport { StringAnyMap, StringTMap } from './types';\nimport { PropertyValidation } from '../decorators/validate';\nimport { TypeDecorator } from '../decorators/types/index';\n\nexport interface RelatedModel {\n  model: typeof Model;\n  key: string;\n  type: 'model' | 'models';\n}\n\nexport interface Deco {\n  collectionName: string;\n  modelName: string;\n  modelId?: ObjectId;\n  options: ModelOptions;\n  db: Db;\n\n  propertyTypes: StringTMap<TypeDecorator>;\n  propertyTypesOptions: StringAnyMap;\n\n  propertyInputs: Array<string>;\n  propertyOutputs: Array<string>;\n  propertyToDocuments: Array<string>;\n\n  propertyValidations: StringTMap<Array<PropertyValidation>>;\n\n  propertySearchables: Array<string>;\n  propertySortables: Array<string>;\n  propertyFilterables: Array<string>;\n  propertyFilterablesOptions: StringAnyMap;\n}\n\nexport function cloneDeco(deco: Deco): Deco {\n  let cloned: Deco = {\n    collectionName: deco.collectionName,\n    modelName: deco.modelName,\n    modelId: deco.modelId ? deco.modelId : undefined,\n    options: Object.assign({}, deco.options),\n    db: deco.db,\n\n    propertyTypes: Object.assign({}, deco.propertyTypes),\n    propertyTypesOptions: Object.assign({}, deco.propertyTypesOptions),\n\n    propertyInputs: ([] as string[]).concat(deco.propertyInputs),\n    propertyOutputs: ([] as string[]).concat(deco.propertyOutputs),\n    propertyToDocuments: ([] as string[]).concat(deco.propertyToDocuments),\n\n    propertyValidations: Object.assign({}, deco.propertyValidations),\n\n    propertySearchables: ([] as string[]).concat(deco.propertySearchables),\n    propertySortables: ([] as string[]).concat(deco.propertySortables),\n    propertyFilterables: ([] as string[]).concat(deco.propertyFilterables),\n    propertyFilterablesOptions: Object.assign({}, deco.propertyFilterablesOptions)\n  };\n  return cloned;\n}"]}