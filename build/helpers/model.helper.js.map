{"version":3,"file":"model.helper.js","sourceRoot":"","sources":["../../src/helpers/model.helper.ts"],"names":[],"mappings":";;;;;;;;;;;AAOA,MAAa,WAAW;IACf,MAAM,CAAO,SAAS,CAAC,KAAmB,EAAE,KAAY,EAAE,QAA2B,OAAO;;YACjG,MAAM,IAAI,GAAG,KAAK,KAAK,OAAO;gBAC5B,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;gBACZ,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAA;YAC1B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAC9E,CAAC;oBACC,MAAM,EAAE,KAAK,CAAC,SAAS,EAAE;iBAC1B;gBACC;oBACE,QAAQ,EAAE;wBACN,IAAI,EAAE,CAAC;qBACV;iBACJ,EAAE;oBACC,MAAM,EAAE;wBACJ,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;qBAC9B;iBACJ,EAAE;oBACC,OAAO,EAAE;wBACL,IAAI,EAAE,OAAO,EAAE,0BAA0B,EAAE,KAAK;qBAAE;iBACzD,EAAE;oBACC,MAAM,EAAE;wBACJ,GAAG,EAAE,OAAO;wBACZ,GAAG,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE;wBACxB,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;qBACrB;iBACJ,EAAE;oBACC,KAAK,EAAE,IAAI;iBACd,CAAC,CACH,CAAC,OAAO,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;CACF;AAhCD,kCAgCC","sourcesContent":["import { Model, Query } from '../';\n\nexport interface TagCount {\n  tag: string;\n  count: number\n}\n\nexport class ModelHelper {\n  public static async fetchTags(model: typeof Model, query: Query, order: 'alpha' | 'count' = 'alpha'): Promise<Array<TagCount>> {\n    const sort = order === 'alpha'\n      ? { _id: 1 }\n      : { counts: -1, _id: 1 }\n    const tags = await model.deco.db.collection(model.deco.collectionName).aggregate(\n      [{\n        $match: query.onlyQuery()\n      },\n        {\n          $project: {\n              tags: 1\n          }\n      }, {\n          $match: {\n              \"tags.0\": { $exists: true }\n          }\n      }, {\n          $unwind: {\n              path: \"$tags\", preserveNullAndEmptyArrays: false }\n      }, {\n          $group: {\n              _id: \"$tags\",\n              tag: { $first: \"$tags\" },\n              count: { $sum: 1 }\n          }\n      }, {\n          $sort: sort\n      }]\n    ).toArray();\n    return tags;\n  }\n}"]}