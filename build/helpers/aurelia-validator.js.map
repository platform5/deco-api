{"version":3,"file":"aurelia-validator.js","sourceRoot":"","sources":["../../src/helpers/aurelia-validator.ts"],"names":[],"mappings":";;AAAA,6BAA2B;AAC3B,2DAAgD;AAChD,+EAAyD;AACzD,2EAAmF;AACnF,2DAAuG;AAEvG,MAAM,gBAAgB;IAGpB;QACE,+BAAU,EAAE,CAAC;QACb,MAAM,SAAS,GAAG,IAAI,wCAAS,EAAE,CAAC;QAClC,sCAAwB,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QACxC,8BAAmB,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QAEnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,8BAAS,CAAC,CAAC;IAC5C,CAAC;IAED,cAAc,CAAC,MAAW,EAAE,KAAyB;QACnD,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACjE,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAE,MAAM,CAAC,CAAC,CAAY,CAAC,CAAC;YAElE,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAEY,QAAA,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC","sourcesContent":["import 'aurelia-polyfills';\nimport { initialize } from 'aurelia-pal-nodejs';\nimport { Container } from 'aurelia-dependency-injection';\nimport { configure as configureBindingLanguage } from 'aurelia-templating-binding';\nimport { configure as configureValidation, Validator, Rule, ValidateResult } from 'aurelia-validation';\n\nclass AureliaValidator {\n  private validator: Validator\n\n  constructor() {\n    initialize();\n    const container = new Container();\n    configureBindingLanguage({ container });\n    configureValidation({ container });\n\n    this.validator = container.get(Validator);\n  }\n\n  validateObject(object: any, rules: Rule<any, any>[][]): Promise<ValidateResult[]> {\n    return this.validator.validateObject(object, rules).then(results => {\n      let isValid = results.every(r => r.valid);\n      let errors = results.map(r => r.message).filter(m => !!m);\n\n      if (!isValid && errors[0]) throw new Error((errors[0] as string));\n\n      return results;\n    });\n  }\n}\n\nexport const aureliaValidator = new AureliaValidator();"]}