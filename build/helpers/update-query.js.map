{"version":3,"file":"update-query.js","sourceRoot":"","sources":["../../src/helpers/update-query.ts"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,+BAA+B,CAAC,CAAC;AAE9D,MAAa,WAAW;IAOtB;QANO,SAAI,GAAQ,EAAE,CAAA;QACd,WAAM,GAAQ,EAAE,CAAC;QACjB,cAAS,GAAQ,EAAE,CAAC;QACpB,UAAK,GAAQ,EAAE,CAAC;QAChB,WAAM,GAAQ,EAAE,CAAC;QAGtB,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,QAAQ,CAAC,KAA2D,EAAG,gBAAiC,EAAE,KAAW;QAC3H,IAAI,OAAO,gBAAgB,KAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;YAAE,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;QACjK,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE;YACxC,IAAI,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC;SACvC;aAAM,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE;YAC/C,IAAI,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC;SAChC;IACH,CAAC;IAED,GAAG,CAAC,gBAAiC,EAAE,KAAW;QAChD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,gBAAiC,EAAE,KAAW;QAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ,CAAC,gBAAiC,EAAE,KAAW;QACrD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,CAAC,gBAAiC,EAAE,KAAW;QACjD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,gBAAiC,EAAE,KAAW;QAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,cAAc;QACnB,IAAI,KAAK,GAAQ,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;YAC9C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;YAClD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;YACxD,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;YAChD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC1B;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;YAClD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC5B;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AApED,kCAoEC","sourcesContent":["let debug = require('debug')('deco-api:helpers:update-query');\n\nexport class UpdateQuery {\n  public $set: any = {}\n  public $unset: any = {};\n  public $addToSet: any = {};\n  public $push: any = {};\n  public $slice: any = {};\n  \n  constructor() {\n    return this;\n  }\n\n  private addValue(place: '$set' | '$unset' | '$addToSet' | '$push' | '$slice' , propertyOrObject: string | object, value?: any) {\n    if (typeof propertyOrObject !== 'string' && value !== undefined) throw new Error('It is not permitted to provide a value when propertyOrObject is not a string');\n    if (typeof propertyOrObject === 'string') {\n      this[place][propertyOrObject] = value;\n    } else if (typeof propertyOrObject === 'object') {\n      this[place] = propertyOrObject;\n    }\n  }\n\n  set(propertyOrObject: string | object, value?: any) {\n    this.addValue('$set', propertyOrObject, value);\n    return this;\n  }\n\n  unset(propertyOrObject: string | object, value?: any) {\n    this.addValue('$unset', propertyOrObject, value);\n    return this;\n  }\n\n  addToSet(propertyOrObject: string | object, value?: any) {\n    this.addValue('$addToSet', propertyOrObject, value);\n    return this;\n  }\n\n  push(propertyOrObject: string | object, value?: any) {\n    this.addValue('$push', propertyOrObject, value);\n    return this;\n  }\n\n  slice(propertyOrObject: string | object, value?: any) {\n    this.addValue('$slice', propertyOrObject, value);\n    return this;\n  }\n\n  public getInsertDocument() {\n    return this.$set;\n  }\n\n  public getUpdateQuery() {\n    let query: any = {};\n    if (this.$set && Object.keys(this.$set).length) {\n      query.$set = this.$set;\n    }\n    if (this.$unset && Object.keys(this.$unset).length) {\n      query.$unset = this.$unset;\n    }\n    if (this.$addToSet && Object.keys(this.$addToSet).length) {\n      query.$addToSet = this.$addToSet;\n    }\n    if (this.$push && Object.keys(this.$push).length) {\n      query.$push = this.$push;\n    }\n    if (this.$slice && Object.keys(this.$slice).length) {\n      query.$slice = this.$slice;\n    }\n    return query;\n  }\n}"]}