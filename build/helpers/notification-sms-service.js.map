{"version":3,"file":"notification-sms-service.js","sourceRoot":"","sources":["../../src/helpers/notification-sms-service.ts"],"names":[],"mappings":";;;;;AAAA,0DAA+B;AAC/B,8CAAsB;AACtB,gDAAwB;AAExB,MAAa,sBAAsB;IAIjC,YAAY,WAAmB,EAAE,YAAoB;QACnD,IAAI,CAAC,GAAG,GAAG,IAAI,mBAAM,CAAC;YACpB,KAAK,EAAE;gBACL,WAAW,EAAE,WAAW;aACzB;SACF,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAEM,IAAI,CAAC,MAAc,EAAE,QAAgB,EAAE,IAAS,EAAE,gBAAsC;;QAC7F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;QAEpE,MAAM,YAAY,GAAG,OAAA,gBAAgB,0CAAE,QAAQ,EAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QAEhG,IAAI,GAAG,GAAG,aAAG,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,GAAG,QAAQ,GAAG,UAAU,EAAE,OAAO,CAAC,CAAC;QAE9E,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO;aACpB,GAAG,EAAE;YACN,iBAAiB;aAChB,IAAI,CAAC,MAAM,CAAC;aACZ,EAAE,CAAC,MAAM,CAAC;aACV,OAAO,CAAC,GAAG,CAAC;aACZ,OAAO,EAAE,CAAC,iBAAiB;aAC7B,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAnCD,wDAmCC;AAED,IAAI,UAAU,GAAG,IAAI,sBAAsB,CAAC,0CAA0C,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;AAEzH,gCAAU","sourcesContent":["import SMSAPI from 'smsapicom';\nimport pug from 'pug';\nimport path from 'path';\n\nexport class NotificationSMSService {\n  api: any;\n  templatePath: string;\n\n  constructor(accessToken: string, templatePath: string) {\n    this.api = new SMSAPI({\n      oauth: {\n        accessToken: accessToken\n      }\n    });\n    this.templatePath = templatePath;\n  }\n\n  public send(mobile: string, template: string, data: any, templateSettings?: {rootPath?: string}) {\n    data.cache = true;\n    data.pretty = false;\n\n    let options = Object.assign({}, data, {pretty: false, cache: true});\n\n    const templatePath = templateSettings?.rootPath ? templateSettings.rootPath : this.templatePath;\n\n    let txt = pug.renderFile(templatePath + '/' + template + '/sms.pug', options);\n\n    return this.api.message\n      .sms()\n      //.from(app.name)\n      .from('Info')\n      .to(mobile)\n      .message(txt)\n      .execute() // return Promise\n    .then(() => {\n      return true;\n    });\n  }\n\n}\n\nlet smsService = new NotificationSMSService('CPoPsSfiSe4lvUTm4kk7ibyMKWcvjCeZ7SEI1bUa', path.resolve(__dirname, '../../emails'));\n\nexport {smsService};"]}