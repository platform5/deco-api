{"version":3,"file":"io.js","sourceRoot":"","sources":["../../src/decorators/io.ts"],"names":[],"mappings":";;AACA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC;AAG5C,SAAS,aAAa,CAAC,MAAW,EAAE,QAAgB,EAAE,GAA6B;IACjF,IAAI,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC;QAAE,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;IACzD,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,CAAC;AAEY,QAAA,KAAK,GAAG,CAAI,MAAS,EAAE,GAAY,EAAE,UAA+B,EAAc,EAAE;IAC/F,IAAI,UAAU;QAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;IACrC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;AACpC,CAAC,CAAA;AAEY,QAAA,MAAM,GAAG,CAAI,MAAS,EAAE,GAAY,EAAE,UAA+B,EAAc,EAAE;IAChG,IAAI,UAAU;QAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACtC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;AACpC,CAAC,CAAA;AAEY,QAAA,UAAU,GAAG,CAAI,MAAS,EAAE,GAAY,EAAE,UAA+B,EAAc,EAAE;IACpG,IAAI,UAAU;QAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,aAAa,CAAC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;IAC1C,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;AACpC,CAAC,CAAA;AAEY,QAAA,KAAK,GAAG,CAAI,MAAS,EAAE,GAAY,EAAE,UAA+B,EAAc,EAAE;IAC/F,IAAI,UAAU;QAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,aAAK,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;IAC/B,cAAM,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;IAChC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;AACpC,CAAC,CAAA;AAEY,QAAA,GAAG,GAAG,CAAI,MAAS,EAAE,GAAY,EAAE,UAA+B,EAAc,EAAE;IAC7F,IAAI,UAAU;QAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,aAAK,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;IAC/B,cAAM,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;IAChC,kBAAU,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;IACpC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;AACpC,CAAC,CAAA;AAEY,QAAA,KAAK,GAAG,CAAI,MAAS,EAAE,GAAY,EAAE,UAA+B,EAAc,EAAE;IAC/F,IAAI,UAAU;QAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;IACpC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;AACpC,CAAC,CAAA","sourcesContent":["\nlet debug = require('debug')('deco-api:io');\n\n\nfunction addTargetInfo(target: any, infoName: string, key: string | number | symbol) {\n  if (!target[`_${infoName}`]) target[`_${infoName}`] = [];\n  target[`_${infoName}`].push(key);\n}\n\nexport const input = <T>(target: T, key: keyof T, descriptor?: PropertyDescriptor): void | any => {\n  if (descriptor) descriptor.writable = true;\n  addTargetInfo(target, 'inputs', key);\n  if (descriptor) return descriptor;\n}\n\nexport const output = <T>(target: T, key: keyof T, descriptor?: PropertyDescriptor): void | any => {\n  if (descriptor) descriptor.writable = true;\n  addTargetInfo(target, 'outputs', key);\n  if (descriptor) return descriptor;\n}\n\nexport const toDocument = <T>(target: T, key: keyof T, descriptor?: PropertyDescriptor): void | any => {\n  if (descriptor) descriptor.writable = true;\n  addTargetInfo(target, 'toDocuments', key);\n  if (descriptor) return descriptor;\n}\n\nexport const inout = <T>(target: T, key: keyof T, descriptor?: PropertyDescriptor): void | any => {\n  if (descriptor) descriptor.writable = true;\n  input(target, key, descriptor);\n  output(target, key, descriptor);\n  if (descriptor) return descriptor;\n}\n\nexport const all = <T>(target: T, key: keyof T, descriptor?: PropertyDescriptor): void | any => {\n  if (descriptor) descriptor.writable = true;\n  input(target, key, descriptor);\n  output(target, key, descriptor);\n  toDocument(target, key, descriptor);\n  if (descriptor) return descriptor;\n}\n\nexport const fetch = <T>(target: T, key: keyof T, descriptor?: PropertyDescriptor): void | any => {\n  if (descriptor) descriptor.writable = true;\n  addTargetInfo(target, 'fetch', key);\n  if (descriptor) return descriptor;\n}"]}