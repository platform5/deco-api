{"version":3,"file":"model.js","sourceRoot":"","sources":["../../src/decorators/model.ts"],"names":[],"mappings":"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","sourcesContent":["import { StringAnyMap, StringTMap } from './../interfaces/types';\nimport { UpdateQuery } from './../helpers/update-query';\nimport { Query } from './../helpers/query';\nimport { datastore } from '../helpers/datastore';\nimport { TypeDecorator } from './types/index';\nimport { Db, ObjectId, Cursor, AggregationCursor, InsertOneWriteOpResult,  InsertWriteOpResult, FindAndModifyWriteOpResultObject, DeleteWriteOpResultObject } from 'mongodb';\nimport { Request, Response } from 'express';\nimport { Deco } from '../interfaces/deco';\nimport moment from 'moment';\nimport { aureliaValidator } from '../helpers/aurelia-validator';\nimport { ValidationRules } from 'aurelia-validation';\nimport { FileHelper } from '../helpers/file';\n\nconst debugModule = require('debug');\nconst debug = debugModule('deco-api:model');\nconst warn = debugModule('deco-api:model');\nwarn.log = console.warn.bind(console);\n\nexport type ModelOperation = 'getAll' | 'getOne' | 'post' | 'put' | 'delete';\n\nexport interface ModelOptions {\n  acceptOtherFields?: boolean;\n  enableStory?: boolean;\n  modelName?: string;\n}\n\nexport interface GetAllOptions {\n  deco?: Deco;\n  addCountInKey?: string;\n}\n\nexport interface GetOneOptions {\n  deco?: Deco\n}\n\nexport interface InstanceFromDocumentOptions {\n  deco?: Deco,\n  keepCopyOriginalValues?: boolean;\n}\n\nlet defaultModelOptions = {\n  acceptOtherFields: false,\n  enableStory: false,\n  modelName: ''\n};\n\nexport const model = (collectionName: string, options: ModelOptions = {}) => {\n  options = Object.assign({}, defaultModelOptions, options);\n  return function (target: any): void {\n\n    let deco: Deco = {\n      collectionName: collectionName,\n      modelName: options.modelName || collectionName,\n      db: datastore.db,\n      options: options,\n      propertyTypes: target.prototype._types || {},\n      propertyTypesOptions: target.prototype._typesOptions || {},\n      propertyInputs: target.prototype._inputs || [],\n      propertyOutputs: target.prototype._outputs || [],\n      propertyToDocuments: target.prototype._toDocuments || [],\n      propertyValidations: target.prototype._validations || {},\n      propertySearchables: target.prototype._searchables || [],\n      propertySortables: target.prototype._sortables || [],\n      propertyFilterables: target.prototype._filterables || [],\n      propertyFilterablesOptions: target.prototype._filterablesOptions || {}\n    };\n\n    target.prototype._deco = deco;\n\n    datastore.isReady().then(() => {\n      target.prototype._deco.db = datastore.db;\n    });\n  }\n}\n\nexport class Model {\n  static collectionName: string = 'data';\n  static db: Db;\n  static options: ModelOptions;\n  model?: typeof Model;\n  request: Request;\n  response: Response;\n\n  // DO NOT DECORATE\n  // Decoarting the property in the base class can corrupt the inherited classes\n  // Please use the model_types property in type-decorator.ts to set the main class type properties\n  public _id: ObjectId;\n\n  // DO NOT DECORATE\n  // Decoarting the property in the base class can corrupt the inherited classes\n  // Please use the model_types property in type-decorator.ts to set the main class type properties\n  public _createdAt: Date;\n\n  // DO NOT DECORATE\n  // Decoarting the property in the base class can corrupt the inherited classes\n  // Please use the model_types property in type-decorator.ts to set the main class type properties\n  public _updatedAt: Date;\n\n  // DO NOT DECORATE\n  // Decoarting the property in the base class can corrupt the inherited classes\n  // Please use the model_types property in type-decorator.ts to set the main class type properties\n  public _createdBy: ObjectId;\n\n  // DO NOT DECORATE\n  // Decoarting the property in the base class can corrupt the inherited classes\n  // Please use the model_types property in type-decorator.ts to set the main class type properties\n  public _updatedBy: ObjectId;\n\n  public filesToRemove: Array<string> = []; // array of path\n\n  private _refLocales?: StringTMap<StringAnyMap>;\n\n  private _deco: Deco;\n\n  static get deco(): Deco {\n    return (this.prototype as any)._deco;\n  }\n\n  get deco(): Deco {\n    if (this._deco) return this._deco;\n    warn('Providing deco via prototype: this should be avoided at all cost, please trace why and fix!');\n    return Object.getPrototypeOf(this)._deco;\n  }\n\n  static getDecoProperties(deco: Deco, type: string | Array<string> = '') {\n    let properties = [];\n    if (typeof type === 'string') type = [type];\n    for (let propName in deco.propertyTypes) {\n      let typeDec: TypeDecorator = deco.propertyTypes[propName];\n      if (type === [] || type.indexOf(typeDec.name) !== -1) properties.push(propName);\n    }\n    return properties;\n  }\n\n  static async getAll<T extends typeof Model>(this: T, query: Query | null = null, options?: GetAllOptions, req?: Request, res?: Response): Promise<Array<InstanceType<T>>> {\n    let deco = (options && options.deco) ? options.deco : this.deco;\n    if (query === null) query = new Query();\n    if (!datastore.db) throw new Error('[getAll] Missing db (did you call the method before datastore.isReady() ?)');\n    const {documents, count} = await this.getDocumentsAndcount(query, deco, req, res);\n    \n    let promises = [];\n    let ifdOptions: InstanceFromDocumentOptions = {};\n    if (options && options.deco) ifdOptions.deco = options.deco;\n    if (documents.length) {\n      for (let document of documents) {\n        promises.push(this.instanceFromDocument(document, ifdOptions));\n      }\n      const elements = await Promise.all(promises);\n      if (options && options.addCountInKey) {\n        const countValue = count;\n        for (let element of elements) {\n          element.set(options.addCountInKey, countValue);\n        }\n      }\n      return elements;\n    }\n    return Promise.resolve([]);\n  }\n\n  static async getDocumentsAndcount(query: Query, deco: Deco, req?: Request, res?: Response): Promise<{documents: any[], count: number}> {  \n    const cursor = deco.db.collection(deco.collectionName)\n      .find(query.onlyQuery())\n      .skip(query.onlySkip())\n      .limit(query.onlyLimit())\n      .sort(query.onlySort());\n    const count = await cursor.count();\n    return {documents: (await cursor.toArray()), count};\n  }\n\n  static getOneWithId<T extends typeof Model>(this: T, id: string | ObjectId, options?: GetOneOptions): Promise<InstanceType<T> | null> {\n    if (!datastore.db) throw new Error('[getOneWithId] Missing db (did you call the method before datastore.isReady() ?)');\n    if (typeof id === 'string') {\n      try {\n        id = new ObjectId(id);\n      } catch (error) {\n        throw new Error('Invalid id');\n      }\n    }\n    let query = {_id: id};\n    return this.getOneWithQuery(query, options);\n  }\n\n  static getOneWithQuery<T extends typeof Model>(this: T, query: Query | any = {}, options?: GetOneOptions): Promise<InstanceType<T> | null> {\n    let deco = (options && options.deco) ? options.deco : this.deco;\n    if (!datastore.db) throw new Error('[getOneWithQuery] Missing db (did you call the method before datastore.isReady() ?)');\n    if (query instanceof Query) {\n      query = query.onlyQuery();\n    }\n    return deco.db.collection(deco.collectionName).find(query).toArray().then((documents: Array<any>) => {\n      let promise: Promise<any>;\n      let ifdOptions: InstanceFromDocumentOptions = {keepCopyOriginalValues: true};\n      if (options && options.deco) ifdOptions.deco = options.deco;\n      if (documents.length) {\n        promise = this.instanceFromDocument(documents[0], ifdOptions).then((element) => {\n          return element.canGetOne().then((authorized: any): Promise<any> => {\n            if (!authorized) return Promise.reject(new Error('Access denied'));\n            return Promise.resolve(element);\n          });\n        });\n        return promise;\n      }\n      return null;\n    });\n  };\n\n  getAgain<T extends Model>(this: T): Promise<T | null> {\n    if (this.model) {\n      return this.model.getOneWithId(this._id) as Promise<T | null>;\n    }\n    warn('Model missing this.model, please trace and fix');\n    return Object.getPrototypeOf(this).constructor.getOneWithId(this._id);\n  }\n  \n  public async insert() { \n    if (!datastore.db) return Promise.reject(new Error('[insert] Missing db (did you call the method before datastore.isReady() ?)'));\n    return this.canInsert().then((authorized: any): Promise<any> =>{\n      if (!authorized) return Promise.reject(new Error('Permission denied'));\n      return this.toDocument('insert');\n    }).then((documentToInsert): Promise<InsertOneWriteOpResult<any>> => {\n        return this.deco.db.collection(this.deco.collectionName).insertOne(documentToInsert.getInsertDocument());\n    }).then((result) => {\n      try {\n        let document = result.ops;\n        if (Array.isArray(document) && document.length === 1) document = document[0];\n        let ifdOptions: InstanceFromDocumentOptions = {};\n        ifdOptions.deco = this.deco;\n        if (this.model) {\n          return this.model.instanceFromDocument(document, ifdOptions);\n        }\n        warn('this.model missing in .insert(). Please trace and fix');\n        return Object.getPrototypeOf(this).constructor.instanceFromDocument(document, ifdOptions);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  public async insertMany(quantity = 1): Promise<any[]> {\n    if (quantity < 1) {\n      throw new Error('Quantity must be greater than 1');\n    }\n    const int = Math.round(quantity);\n    if (int !== quantity) {\n      throw new Error('Quantity must be a postive integer');\n    }    \n    if (!datastore.db) throw new Error('[insert] Missing db (did you call the method before datastore.isReady() ?)');\n    return this.canInsert().then((authorized) =>{\n      if (!authorized) throw new Error('Permission denied');\n      return this.toDocument('insert');\n    }).then(async (documentToInsert: any): Promise<InsertWriteOpResult<any>> => {\n      const doc = documentToInsert.getInsertDocument();\n      const docs: any[] = [];\n      for (let i = 0; i < quantity; i++) {\n        docs[i] = Object.assign({}, doc);\n        docs[i]._id = new ObjectId();\n      }\n      return this.deco.db.collection(this.deco.collectionName).insertMany(docs, {forceServerObjectId: false});\n    }).then(async (result: any) => {\n      try {\n        let document = result.ops;\n        let ifdOptions: InstanceFromDocumentOptions = {};\n        ifdOptions.deco = this.deco;\n        if (this.model) {\n          return await Promise.all(document.map(async (doc: any) => {\n            return await (this.model as typeof Model).instanceFromDocument(doc, ifdOptions);\n          }));\n        }\n        throw new Error('this.model is missing in .insertMany()');\n      } catch (error) {\n        throw error;\n      }\n    });\n  }\n\n  public insertWithDocument<T extends Model>(this: T): Promise<T> {\n    if (!datastore.db) throw new Error('[getAll] Missing db (did you call the method before datastore.isReady() ?)');\n    throw new Error('[insertWithDocument] Not implemented yet')\n    //return Promise.resolve(new Model);\n  }\n\n  public update<T extends Model>(this: T, properties: Array<string> = []): Promise<T> {\n    if (!datastore.db) throw new Error('[getAll] Missing db (did you call the method before datastore.isReady() ?)');\n    return this.canUpdate().then((authorized) =>{\n      if (!authorized) throw new Error('Permission denied');\n      return this.toDocument('update', properties);\n    }).then((documentToUpdate) => {\n      return this.deco.db.collection(this.deco.collectionName).findOneAndUpdate({_id: this._id}, documentToUpdate.getUpdateQuery(), {returnOriginal: false});\n    }).then((result: FindAndModifyWriteOpResultObject<any>) => {\n      if (result.ok) {\n        if (!result.value) return Promise.resolve(null);\n        if (this.filesToRemove && this.filesToRemove.length) {\n          for (let path of this.filesToRemove) {\n            FileHelper.removeFromDisk(path);\n          }\n        }\n        let ifdOptions: InstanceFromDocumentOptions = {keepCopyOriginalValues: true};\n        ifdOptions.deco = this.deco;\n        if (this.model) {\n          return this.model.instanceFromDocument(result.value, ifdOptions);\n        }\n        warn('this.model missing in .update(). Please trace and fix');\n        return Object.getPrototypeOf(this).constructor.instanceFromDocument(result.value, ifdOptions);\n      } else {\n        return Promise.reject(new Error(result.lastErrorObject))\n      }\n    });\n  }\n\n  /**\n   * Compare the element that was retrieve from the database\n   * and only update keys that have been changed since\n   */\n  public smartUpdate<T extends Model>(this: T): Promise<T> {\n    throw new Error('[update] Not implemented yet')\n  }\n\n  public remove(): Promise<boolean> {\n    if (!datastore.db) throw new Error('[getAll] Missing db (did you call the method before datastore.isReady() ?)');\n\n    return this.canRemove().then((authorized) =>{\n      if (!authorized) throw new Error('Permission denied');\n      return this.deco.db.collection(this.deco.collectionName).deleteOne({_id: this._id});\n    }).then((result: DeleteWriteOpResultObject) => {\n      if (result.result.ok) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  public validate(properties: Array<string> = []): Promise<boolean> {\n    // we save the element instance deco in a temporary variable here\n    // because in the validation process it could be altered\n    // this is for exemple the case in the swissdata dynamicmodel(s) types\n    // therefore at the end of the validation process we re-establish\n    // the correct deco for the object instance\n    let deco: Deco = this.deco;\n    let rules: any;\n    for (let key in this.deco.propertyTypes) {\n      // ignore property not listed in properties if given\n      if (properties.length && properties.indexOf(key) === -1) continue;\n      let type:TypeDecorator = this.deco.propertyTypes[key];\n      let options: any = this.deco.propertyTypesOptions[key];\n      let validation = this.deco.propertyValidations[key] || null;\n      rules = (rules || ValidationRules).ensure(key);\n      const ruleOptions = Object.assign({}, options, {key: key, instance: this, target: this.constructor});\n      rules = rules.satisfiesRule(`type:${type.name}`, ruleOptions);\n      for (let validate of validation || []) {\n        if (validate.type === 'required') {\n          rules = rules.required();\n        }  else if (validate.type === 'email') {\n          rules = rules.email();\n        } else if (validate.type === 'minLength') {\n          rules = rules.minLength(validate.options.minLength);\n        }  else if (validate.type === 'maxLength') {\n          rules = rules.maxLength(validate.options.maxLength);\n        } else if (validate.type === 'slug') {\n          rules = rules.matches(/^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$/);\n        } else {\n          let customRuleOptions = Object.assign({}, ruleOptions, validate.options);\n          rules = rules.satisfiesRule(`validate:${validate.type}`, customRuleOptions);\n        }\n      }\n    }\n\n    if (!rules) {\n      this._deco = deco;\n      // Object.getPrototypeOf(this)._deco = deco;\n      return Promise.resolve(true)\n    }\n    \n    return aureliaValidator.validateObject(this, rules.rules).then((result) => {\n      // this is where we re-establish the correct deco for this element instance\n      // after the validation process is finished\n      this._deco = deco;\n      // Object.getPrototypeOf(this)._deco = deco;\n      // return true if the validation doesn't reject\n      return Promise.resolve(true);\n    }).catch((error) => {\n      console.error(error);\n      throw error;\n    })\n  }\n\n  toDocument(operation: 'insert' | 'update' | 'upsert', properties: Array<string> = []): Promise<UpdateQuery> {\n    // validate before saving\n    return this.validate(properties).then(() => {\n      // create a data object that will be the document\n      let data = new UpdateQuery();\n      if (!this.model) {\n        warn('this.model missing in .toDocument(). Please trace and fix');\n      }\n      let target = this.model ? this.model : Object.getPrototypeOf(this);\n      // and fill in all keys from the instance that have been requested\n      // by the @io.toDocument decorator\n      let toDocumentPromises = [];\n      for (let property of this.deco.propertyToDocuments) {\n        // ignore property not listed in properties if given\n        if (properties.length && properties.indexOf(property) === -1) continue;\n        let type: TypeDecorator = this.deco.propertyTypes[property];\n        let options: any = this.deco.propertyTypesOptions[property];\n        if (type.requireDeco) options.deco = this.deco;\n        let value: any = (this as any)[property];\n        toDocumentPromises.push(\n          type.toDocument(data, property, value, operation, options, this, target)\n        );\n      }\n      return Promise.all(toDocumentPromises).then(() => data);\n    }).then((data) => {\n      // add the _id key if not declared by @io.toDocument but present in instance\n      if (this.deco.propertyToDocuments.indexOf('_id') === -1 && this._id) {\n        data.set('_id', this._id);\n      }\n    \n      // register the dating metadata\n      data.set('_updatedAt', moment().toDate());\n      data.set('_createdAt', (this._createdAt) ? this._createdAt : moment().toDate());\n      if (this._createdBy) {\n        data.set('_createdBy', this._createdBy);\n      } else if (this.response && this.response.locals.user && this.response.locals.user._id) {\n        data.set('_createdBy', this.response.locals.user._id);\n      }\n      // 08.10.2020\n      // It seems that the _updatedBy value is incorrect (most of the time)\n      // and it seems it comes from here where we should always update the _updatedBy if we have \n      // the data in the response object\n      // if (this._updatedBy) {\n      //   data.set('_updatedBy', this._updatedBy);\n      // } else if (this.response && this.response.locals.user && this.response.locals.user._id) {\n      if (this.response && this.response.locals.user && this.response.locals.user._id) {\n        data.set('_updatedBy', this.response.locals.user._id);\n      }\n      return Promise.resolve(data);\n    });\n  }\n\n  output(includeProps?: Array<string>, ignoreIO: boolean = false, includeExtraKeys: Array<string> = []): Promise<any> {\n    let data: any = {};\n    if (!this.model) {\n      warn('this.model missing in .output(). Please trace and fix');\n    }\n    let target = this.model ? this.model : Object.getPrototypeOf(this);\n    data.id = this._id;\n    data._createdAt = this._createdAt;\n    data._createdBy = this._createdBy;\n    data._updatedAt = this._updatedAt;\n    data._updatedBy = this._updatedBy;\n    if (!this.deco.propertyOutputs) return Promise.resolve(data);\n    let outputPromises: Array<Promise<any>> = [];\n    let propSet: Array<string> = ignoreIO ? Object.keys(this.deco.propertyTypes) : ([] as string[]).concat(this.deco.propertyOutputs);\n    propSet.push(...includeExtraKeys);\n    for (let outputKey of propSet) {\n      if (includeExtraKeys.indexOf(outputKey) !== -1) {\n        // include this extra value without output\n        data[outputKey] = (this as any)[outputKey];\n        continue;\n      }\n      if (includeProps && includeProps.indexOf(outputKey) === -1) continue;\n      // determine the key type\n      let type: TypeDecorator = this.deco.propertyTypes[outputKey];\n      if (!type) {\n      }\n      let options: any = this.deco.propertyTypesOptions[outputKey];\n      if (type.requireDeco) options.deco = this.deco;\n      let value: any = (this as any)[outputKey];\n      outputPromises.push(\n        type.output(outputKey, value, options, this, target).then((value) => {\n          data[outputKey] = value;\n        })\n      );\n    }\n  \n    return Promise.all(outputPromises).then(() => {\n      if (this._refLocales) data._refLocales = this._refLocales;\n      return data;\n    });\n  }\n\n  static outputList(elements: Array<Model>, includeProps?: Array<string>, ignoreIO: boolean = false, includeExtraKeys: Array<string> = []): Promise<Array<any>> {\n    let promises: Array<Promise<any>> = [];\n    for (let element of elements) {\n      promises.push(element.output(includeProps, ignoreIO, includeExtraKeys));\n    }\n    return Promise.all(promises);\n  }\n\n  static instanceFromDocument<T extends typeof Model>(this: T, document: any, options: InstanceFromDocumentOptions = {keepCopyOriginalValues: false}): Promise<InstanceType <T>> {\n    if (!datastore.db) throw new Error('[getAll] Missing db (did you call the method before datastore.isReady() ?)');\n    let element: InstanceType<T> = (new this as InstanceType<T>);\n    element.model = this;\n    if (options && options.deco) {\n      // fix element deco\n      // Object.getPrototypeOf(element)._deco = options.deco;\n      element._deco = options.deco;\n    }\n\n    for (let key of element.deco.propertyToDocuments) {\n      (element as any)[key] = document[key];\n      if (options.keepCopyOriginalValues) (element as any)[`_original${key}`] = document[key];\n    }\n\n    if (document._id) element._id = document._id;\n    if (document._createdAt) element._createdAt = document._createdAt;\n    if (document._createdBy) element._createdBy = document._createdBy;\n    if (document._updatedAt) element._updatedAt = document._updatedAt;\n    if (document._updatedBy) element._updatedBy = document._updatedBy;\n\n    return Promise.resolve(element);\n  }\n\n  static decoFromRequest(req: Request, res: Response): Deco {\n    return this.deco;\n  }\n\n  decoFromRequest(req: Request, res: Response): Deco {\n    return this.deco;\n  }\n\n  static instanceFromRequest<T extends typeof Model>(this: T, req: Request, res: Response): Promise<InstanceType <T>> {\n    if (!datastore.db) throw new Error('[instanceFromRequest] Missing db (did you call the method before datastore.isReady() ?)');\n    \n    // identify the constructor prototype to find out how the class has been decorated\n    let deco = this.decoFromRequest(req, res);\n    let target = this.prototype;\n    let body = req.body || req.query || {};\n\n    let element = (new this as InstanceType<T>);\n    element.model = this;\n    // Object.getPrototypeOf(element)._deco = deco;\n    element._deco = deco;\n    // keeping the request in the instance for further context use\n    element.request = req;\n    element.response = res;\n    if (body.id) {\n      try {\n        element._id = new ObjectId(body.id);\n      } catch (e) {\n        // no error\n      }\n    }\n    if (!deco.propertyInputs) return Promise.resolve(element);\n    let inputPromises = [];\n    for (let bodyKey in body) {\n      // ignore keys that have not been flaged as input by the @io.input decorator\n      if (deco.propertyInputs.indexOf(bodyKey) === -1) continue;\n      // determine the key type\n      let type: TypeDecorator = deco.propertyTypes[bodyKey];\n      let options: any = deco.propertyTypesOptions[bodyKey];\n      if (type.requireDeco) options.deco = this.deco;\n      \n      inputPromises.push(\n        type.input(bodyKey, body[bodyKey], options, element, target).then((value) => {\n          (element as any)[bodyKey] = value;\n        })\n      );\n    }\n  \n    return Promise.all(inputPromises).then(() => {\n      return element;\n    });\n  }\n\n  updateInstanceFromRequest<T extends Model>(this: T, req: Request, res: Response): Promise<T> {\n    let deco = this.decoFromRequest(req, res);\n    // update this._deco;\n    // Object.getPrototypeOf(this)._deco = deco;\n    this._deco = deco;\n    if (!deco.db) throw new Error('[updateInstanceFromRequest] Missing db (did you call the method before datastore.isReady() ?)');\n  \n    // keeping the request in the instance for further context use\n    this.request = req;\n    this.response = res;\n  \n    // identify the constructor prototype to find out how the class has been decorated\n    if (!this.model) {\n      warn('this.model missing in .updateInstanceFromRequest(). Please trace and fix');\n    }\n    let target = this.model ? this.model : Object.getPrototypeOf(this);\n    let body = req.body || req.query || {};\n    if (!deco.propertyInputs) return Promise.resolve(this);\n    let inputPromises = [];\n    for (let bodyKey in body) {\n       // ignore keys that have not been flaged as input by the @io.input decorator\n      if (deco.propertyInputs.indexOf(bodyKey) === -1) continue;\n      // determine the key type\n      let type: TypeDecorator = deco.propertyTypes[bodyKey];\n      let options: any = deco.propertyTypesOptions[bodyKey];\n      inputPromises.push(\n        type.input(bodyKey, body[bodyKey], options, this, target).then((value) => {\n          (this as any)[bodyKey] = value;\n        })\n      );\n    }\n    return Promise.all(inputPromises).then(() => {\n      return this;\n    });\n  }\n\n  get(propertyName: string) {\n    return (this as any)[propertyName];\n  }\n\n  set(propertyName: string, value: any) {\n    (this as any)[propertyName] = value;\n  }\n\n  canGetOne(options?: any): Promise<boolean> {return Promise.resolve(true);}\n  canInsert(options?: any): Promise<boolean> {return Promise.resolve(true);}\n  canUpdate(options?: any): Promise<boolean> {return Promise.resolve(true);}\n  canRemove(options?: any): Promise<boolean> {return Promise.resolve(true);}\n}"]}