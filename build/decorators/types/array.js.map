{"version":3,"file":"array.js","sourceRoot":"","sources":["../../../src/decorators/types/array.ts"],"names":[],"mappings":"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","sourcesContent":["import { TypeDecorator } from './type-decorator';\nimport { inputString, inputBoolean, inputDate, inputFloat, inputInteger } from './basics';\nimport { validateString, validateInteger, validateFloat, validateBoolean, validateDate } from './basics';\nimport { inputObject, validateObject } from './object';\nlet debug = require('debug')('deco-api:decorators:types:array');\n\nexport let arrayDecorator = new TypeDecorator('array');\nexport let inputArray = (value: any, options: any) => {\n  if (value === 'null') value = null;\n  if (value === 'undefined') value = undefined;\n  if (typeof value === 'string') {\n    try {\n      let testJsonParse = JSON.parse(value);\n      if (Array.isArray(testJsonParse)) value = testJsonParse;\n      else throw new Error('fake error to go to catch block');\n    } catch (e) {\n      value = value.split(',').map((item: any) => item.trim());\n    }\n  } \n  if (!Array.isArray(value)) return value;\n  if (options && options.type) {\n    let newValue = value.map(item => item);\n    for (let index in value) {\n      if (options.type === 'string') newValue[index] = (inputString(value[index]));\n      if (options.type === 'integer') newValue[index] = inputInteger(value[index]);\n      if (options.type === 'float') newValue[index] = inputFloat(value[index]);\n      if (options.type === 'boolean') newValue[index] = inputBoolean(value[index]);\n      if (options.type === 'date') newValue[index] = inputDate(value[index]);\n      if (options.type === 'object' && options.options) newValue[index] = inputObject(value[index], options.options);\n    }\n    value = newValue;\n  }\n  return value;\n}\narrayDecorator.input = (key: string, value: any, options: any, target: any) => {\n  return Promise.resolve(inputArray(value, options));\n};\nexport let validateArray = async (value: any, options: any) => {\n  if (value === null || value === undefined) return true;\n  if (!Array.isArray(value)) {\n    debug('is not an array', value);\n    return false;\n  }\n\n  if (options && options.type) {\n    for (let index in value) {\n      const item = value[index];\n      if (options.type === 'string' && !validateString(item)) {\n        debug('Invalid item', index, '; should be ', options.type, '; is:', item);\n        return false;\n      };\n      if (options.type === 'integer' && !validateInteger(item)) {\n        debug('Invalid item', index, 'should be ', options.type, '; is:', item);\n        return false;\n      };\n      if (options.type === 'float' && !validateFloat(item)) {\n        debug('Invalid item', index, 'should be ', options.type, '; is:', item);\n        return false;\n      };\n      if (options.type === 'boolean' && !validateBoolean(item)) {\n        debug('Invalid item', index, 'should be ', options.type, '; is:', item);\n        return false;\n      };\n      if (options.type === 'date' && !validateDate(item)) {\n        debug('Invalid item', index, 'should be ', options.type, '; is:', item);\n        return false;\n      };\n      if (options.type === 'object' && options.options && !await validateObject(item, options.options)) {\n        debug('Invalid item', index, 'should be ', options.type, '; is:', item);\n        return false;\n      };\n    }\n  }\n  return true;\n};\narrayDecorator.validate = (value: any, obj: any, options: any) => {\n  return validateArray(value, options);\n};\nexport const array = arrayDecorator.decorator();"]}