{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../src/middlewares/controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { GetAllOptions, GetOneOptions } from './../decorators/model';\nimport { StringAnyMap, StringTMap } from '../interfaces/types';\nimport { ControllerHooksMiddleware } from './controller.hooks';\nimport { Model } from \"../decorators\";\nimport { ObjectId } from 'mongodb';\nimport { Request, Response, NextFunction } from 'express';\nimport { Query } from '../helpers/query';\nimport { Settings } from '../helpers/settings';\nimport moment from 'moment';\nimport fs from 'fs';\nimport { Deco, RelatedModel } from '../interfaces';\nimport { relations } from '../decorators/types/models';\nimport resolvePath from 'object-resolve-path';\nimport traverse from 'traverse';\n\nlet debug = require('debug')('deco-api:middleware:controller');\nlet afDebug = require('debug')('autofetch:');\n\nexport interface RelatedModelFilterQueryConfig {\n  model: typeof Model,\n  deco: Deco,\n  queryKey: string;\n  queriedModelKey: string;\n  queriedModelIdKey: string;\n  finalReqKey: string;\n  direction: 'original' | 'detected';\n  baseQuery?: Query;\n  multiple: boolean;\n}\n\nexport interface ControllerGetAllOptions {\n  ignoreOutput?: boolean;\n  ignoreSend?: boolean;\n  addCountInKey?: string;\n  enableLastModifiedCaching?: boolean;\n}\n\nexport interface ControllerGetOneOptions {\n  ignoreOutput?: boolean;\n  ignoreSend?: boolean;\n  ignoreDownload?: boolean;\n}\n\nexport interface ControllerPostOptions {\n  ignoreSend?: boolean;\n  ignoreOutput?: boolean;\n}\nexport interface ControllerPostManyOptions extends ControllerPostOptions {\n  quantity?: number;\n}\n\nexport interface AutoFetchConfig {\n  originalKey: string;\n  matchingKeyInRelatedModel: string;\n  destinationKey: string;\n  model: typeof Model;\n  deco?: Deco | Promise<Deco>;\n  baseQuery?: any,\n  includeModelProp: Array<string>;\n  fetchMultiple?: boolean;\n}\n\nexport interface ControllerPutOptions {\n  ignoreOutput?: boolean; // default false\n  ignoreSend?: boolean; // default false\n  setUpdatePropertiesWithBodyKeys?: boolean; // default true\n}\n\nexport class ControllerMiddleware extends ControllerHooksMiddleware {\n\n  constructor(public model: typeof Model) {\n    super();\n    return this;\n  }\n\n  getModelDeco(req: Request, res: Response): Deco {\n    return this.model.deco;\n  }\n\n  static queryFromReq(req: Request, res: Response, deco: Deco, options?: QueryFromReqOptions): Promise<Query> {\n    let instance = new ControllerMiddleware(Model);\n    return instance.queryFromReq(req, res, deco);\n  }\n\n  queryFromReq(req: Request, res: Response, deco?: Deco, options?: QueryFromReqOptions): Promise<Query> {\n    if (!deco) {\n      // check if we have the right model\n      if (!this.model) throw new Error('queryFromReq: missing deco or model');\n    }\n    let query = new Query();\n\n    if (options?.filterQueries) {\n      for (const q of options.filterQueries) {\n        query.addQuery(q);\n      }\n    }\n\n    return this.queryBefore(req, res, query, deco).then((query) => {\n      return this.sortQueryFromReq(req, res, query, deco);\n    }).then((query) => {\n      return this.limitQueryFromReq(req, res, query, deco);\n    }).then((query) => {\n      return this.searchQueryFromReq(req, res, query, deco, options?.searchQuery);\n    }).then((query) => {\n      return this.addRelatedModelsFiltersInReq(req, res, query, deco);\n    }).then(() => {\n      return this.filterQueryFromReq(req, res, query, deco);\n    }).then((query) => {\n      return this.queryAfter(req, res, query, deco);\n    });\n  }\n\n  sortQueryFromReq(req: Request, res: Response, query: Query, deco?: Deco): Promise<Query> {\n    if (!req.query || !req.query.sort) return Promise.resolve(query);\n\n    for (let sort of (req.query.sort as string).split(',')) {\n      // sort can be (a) fieldName or (b) -fieldName\n      // (a) order the query by fieldName in ASC order\n      // (b) ordre the query by fieldName in DESC order\n\n      let regexp = /^(-)?([a-zA-Z0-9_-]*)$/;\n      let match;\n\n      if ( (match = regexp.exec(sort)) === null) continue;\n\n      if (match.index === regexp.lastIndex) {\n        regexp.lastIndex++;\n      }\n\n      let direction: 'DESC'|'ASC' = (match[1] == '-') ? 'DESC' : 'ASC';\n      let fieldName = match[2];\n\n      if (!deco) deco = this.getModelDeco(req, res);\n\n      let sortables: Array<string> = deco.propertySortables.map(v => v);\n      sortables.push('_createdAt');\n      sortables.push('_updatedAt');\n\n      if(sortables.indexOf(fieldName) !== -1) {\n        const isMultilang = deco.propertyTypesOptions[fieldName]?.multilang === true;\n        if (isMultilang && req.query.locale) {\n          fieldName += `.${req.query.locale}`;\n        }\n        query.orderBy(fieldName, direction)\n      }\n    }\n\n    return Promise.resolve(query);\n  }\n\n  limitQueryFromReq(req: Request, res: Response, query: Query, deco?: Deco): Promise<Query> {\n    if (req.query.limit) {\n      query.limit(parseInt((req.query.limit as string), 10));\n    }\n    if (req.query.skip) {\n      query.skip(parseInt((req.query.skip as string), 10));\n    }\n    return Promise.resolve(query);\n  }\n\n  searchQueryFromReq(req: Request, res: Response, query: Query, deco?: Deco, searchQuery: {$or: Array<any>} = {$or: []}): Promise<Query> {\n    if (!req.query || !req.query.q) return Promise.resolve(query);\n\n    if (!deco) deco = this.getModelDeco(req, res);\n\n    for (let prop of deco.propertySearchables) {\n      const type = deco.propertyTypes[prop].name;\n      const isNumber = type === 'integer' || type === 'float' || type.substr(0, 13) === 'increment-by-';\n      if (isNumber) {\n        let query = { $where: `/.*${this.escapeRegExp((req.query.q as string))}.*/.test(this.${prop})` };\n        searchQuery.$or.push(query);\n        continue;\n      }\n      const isMultilang = deco.propertyTypesOptions[prop]?.multilang === true;\n      if (isMultilang && req.query.locale) {\n        prop += `.${req.query.locale}`;\n      }\n      let search: StringAnyMap = {};\n      search[prop] = {\n        $regex: this.prepareSearchRegexp((req.query.q as string)),\n        $options: '-i'\n      };\n      searchQuery.$or.push(search);\n      searchQuery.$or.push(search);\n    }\n\n    if (searchQuery.$or.length) query.addQuery(searchQuery);\n    return Promise.resolve(query);\n  }\n\n  private prepareSearchRegexp(q: string) {\n    if (q.substr(0, 1) === '$') {\n      // we assume the content of the search is a regexp\n      return q.substr(1);\n    } else {\n      // we assume the content of the search is not a regexp and therefore we must escape\n      // special regexp characters\n      return '.*' + this.escapeRegExp(q) + '.*';\n      }\n    }\n\n  private escapeRegExp(str: string) {\n    return \".*\" + str.replace(/[.*+\\-?^${}()|[\\]\\\\\\/]/g, '\\\\$&') + \".*\"; // $& means the whole matched string\n  }\n\n  addRelatedModelsFiltersInReq(req: Request, res: Response, query: Query, deco?: Deco): Promise<void> {\n    let relatedQueriesSettings: Array<RelatedModelFilterQueryConfig> = [];\n    return this.findOriginalModelRelations(req, res, relatedQueriesSettings, deco).then((relatedQueriesSettings) => {\n      return this.findDetectedModelRelations(req, res, relatedQueriesSettings);\n    }).then((relatedQueriesSettings) => {\n      return this.placeRelationalFiltersInReq(req, res, relatedQueriesSettings, query, deco);\n    });\n  }\n\n  findOriginalModelRelations(req: Request, res: Response, relatedQueriesSettings: Array<RelatedModelFilterQueryConfig>, deco?: Deco): Promise<Array<RelatedModelFilterQueryConfig>> {\n    if (!deco) deco = this.getModelDeco(req, res);\n    for (let prop in deco.propertyTypes) {\n      let type = deco.propertyTypes[prop];\n      if (type.name === 'model' || type.name === 'models') {\n        let options = deco.propertyTypesOptions[prop];\n        if (options.model && options.model.getAll) {\n          let relatedDeco = options.model.deco;\n          relatedQueriesSettings.push({\n            model: options.model,\n            deco: relatedDeco,\n            queryKey: prop,\n            queriedModelKey: 'subKey',\n            queriedModelIdKey: '_id',\n            finalReqKey: prop, // or 'id' ====>>> TODO: TEST TEST TEST !!!\n            direction: 'original',\n            multiple: type.name === 'models'\n          });\n        }\n      }\n    }\n    return Promise.resolve(relatedQueriesSettings);\n  }\n\n  findDetectedModelRelations(req: Request, res: Response, relatedQueriesSettings: Array<RelatedModelFilterQueryConfig>): Promise<Array<RelatedModelFilterQueryConfig>> {\n    let relatedModels: Array<any> = [];\n    for (let relation of relations) {\n      if (relation.toModel === this.model) {\n        relatedModels.push(relation);\n      }\n    }\n    for (let relatedModel of relatedModels) {\n      if (relatedModel.fromModel.getAll) {\n        let query = new Query();\n        let relatedDeco = relatedModel.fromModel.deco;\n        relatedQueriesSettings.push({\n          model: relatedModel.fromModel,\n          deco: relatedDeco,\n          queryKey: relatedDeco.modelName,\n          queriedModelKey: 'subKey',\n          queriedModelIdKey: relatedModel.key,\n          finalReqKey: 'id',\n          direction: 'detected',\n          multiple: relatedModel.type === 'models'\n        });\n      }\n    }\n    return Promise.resolve(relatedQueriesSettings);\n  }\n\n  placeRelationalFiltersInReq(req: Request, res: Response, relatedQueriesSettings: Array<RelatedModelFilterQueryConfig>, query: Query, deco?: Deco): Promise<void> {\n    let promises: Array<Promise<any>> = [];\n\n    for (let relatedQuerySettings of relatedQueriesSettings) {\n      let relatedQuery: Query = relatedQuerySettings.baseQuery || new Query();\n      let queryProps: StringAnyMap = {};\n\n      for (let prop in req.query) {\n        if (prop.indexOf('.') === -1) continue;\n        let match = prop.match(/^(.*)\\.(.*)$/);\n        if (match && match[1] === relatedQuerySettings.queryKey) {\n          let subKey = match[2];\n          queryProps[subKey] = req.query[prop];\n        }\n      }\n\n      if (Object.keys(queryProps).length === 0) continue;\n\n      let promise = this.filterQueryFromDeco(relatedQuerySettings.deco, relatedQuery, queryProps).then((relatedQuery) => {\n        return relatedQuerySettings.model.getAll(relatedQuery, {deco: relatedQuerySettings.deco});\n      }).then((elements) => {\n        let ids = '';\n        let remoteKey = relatedQuerySettings.queriedModelIdKey;// relatedQuerySettings.direction === 'original' ? '_id' : relatedQuerySettings.key;\n        if (!relatedQuerySettings.multiple) {\n          ids = elements.map((i: any) => i[remoteKey].toString()).join(',');\n        } else {\n          ids = elements.map((item: any) => {\n            let value = item[remoteKey];\n            if (!value) return '';\n            if (Array.isArray(value))\n            return value.map(i => i.toString());\n          }).join(',');\n        }\n        if (!deco) deco = this.getModelDeco(req, res);\n        this.extendQueryBasedOnDecoPropAndValue(query, deco, relatedQuerySettings.finalReqKey, ids);\n      });\n      promises.push(promise);\n    }\n\n    return Promise.all(promises).then(() => {\n      return;\n    });\n  }\n\n  filterQueryFromDeco(deco: Deco, query: Query, queryProps: StringAnyMap): Promise<Query> {\n    if (deco.propertyFilterables.indexOf('_createdAt') === -1) deco.propertyFilterables.push('_createdAt');\n    if (deco.propertyFilterables.indexOf('_updatedAt') === -1) deco.propertyFilterables.push('_updatedAt');\n    if (deco.propertyFilterables.indexOf('_createdBy') === -1) deco.propertyFilterables.push('_createdBy');\n    if (deco.propertyFilterables.indexOf('_updatedBy') === -1) deco.propertyFilterables.push('_updatedBy');\n    if (deco.propertyFilterables.indexOf('id') === -1) deco.propertyFilterables.push('id');\n    deco.propertyFilterablesOptions._createdAt = { type: 'date' };\n    deco.propertyFilterablesOptions._updatedAt = { type: 'date' };\n    deco.propertyFilterablesOptions._createdBy = { type: 'id' };\n    deco.propertyFilterablesOptions._updatedAt = { type: 'id' };\n    deco.propertyFilterablesOptions.id = { type: 'ids' };\n\n    for (let prop of deco.propertyFilterables) {\n      let filterValue = queryProps[prop];\n      if (filterValue === undefined) continue; // only filter if there is a ?prop=... query parameter in the request uri\n      this.extendQueryBasedOnDecoPropAndValue(query, deco, prop, filterValue);\n    }\n\n    if (queryProps['__global__']) this.extendQueryBasedOnDecoPropAndValue(query, deco, '__global__', queryProps['__global__']);\n\n    return Promise.resolve(query);\n  }\n\n  filterQueryFromReq(req: Request, res: Response, query: Query, deco?: Deco): Promise<Query> {\n    if (!deco) deco = this.getModelDeco(req, res);\n    return this.filterQueryFromDeco(deco, query, req.query);\n  }\n\n  extendQueryBasedOnDecoPropAndValue(query: Query, deco: Deco, prop: string, filterValue: any): void {\n    if (filterValue === undefined) return; // only filter if there is a ?prop=... query parameter in the request uri\n    let fieldType: string = '';\n    let filterOptions: any = {};\n    if (prop === 'id') {\n      fieldType = '_id';\n      filterOptions = {type: 'ids'};\n    } else if (prop === '_updatedAt' || prop === '_createdAt') {\n      fieldType = 'date';\n      filterOptions = {type: 'date', dateFormat: 'YYYY-MM-DDTHH:mm:ssZ'};\n    } else if (prop === '__global__') {\n      fieldType = 'query';\n      filterOptions = {type: 'query'};\n    } else {\n      fieldType = deco.propertyTypes[prop].name;\n      filterOptions = deco.propertyFilterablesOptions[prop] || {};\n    }\n    if (typeof filterValue === 'string') {\n      let queryMatch = filterValue.match(/^<(.*)>$/);\n      if (queryMatch) {\n        try {\n          filterValue = JSON.parse(queryMatch[1]);\n          filterOptions.type = 'query';\n        } catch (error) {\n          throw new Error('Invalid query search');\n        }\n      } \n    }\n    if (filterOptions.type === 'auto') {\n      switch(fieldType) {\n        case 'string': filterOptions.type = 'text'; break;\n        case 'integer': filterOptions.type = 'number'; break;\n        case 'float': filterOptions.type = 'number'; break;\n        case 'date': filterOptions.type = 'date'; break;\n        case 'boolean': filterOptions.type = 'boolean'; break;\n        case 'array': filterOptions.type = 'array'; break;\n        case 'select': filterOptions.type = 'equal'; break;\n        case 'model': filterOptions.type = 'id'; break;\n        case 'models': filterOptions.type = 'categories'; filterOptions.ObjectId = true; break;\n      }\n    }\n\n    if (filterOptions.type === 'equal') {\n      let q:any = {$or: []};\n      let values = filterValue.split(',');\n      for (let index in values) {\n        let qq: any = {};\n        qq[prop] = values[index].trim();\n        q.$or.push(qq);\n      }\n      if (q.$or.length) query.addQuery(q);\n    }\n\n    if (filterOptions.type === 'number') {\n\n      if (filterValue.indexOf(':') === -1) {\n        // perform an OR query of any values given, separated by comma\n        let q:any = {$or: []};\n        let values = filterValue.split(',');\n        for (let index in values) {\n          let qq: any = {};\n          qq[prop] = parseFloat(values[index].trim());\n          q.$or.push(qq);\n        }\n        if (q.$or.length) query.addQuery(q);\n      } else {\n        let values = filterValue.split(':');\n        let fromValue = values[0] === '' ? null : parseFloat(values[0]);\n        let toValue = values[1] === '' ? null : parseFloat(values[1]);\n        let q:any = {};\n        q[prop] = {};\n        if (typeof fromValue === 'number') {\n          q[prop]['$gte'] = fromValue;\n        }\n        if (typeof toValue === 'number') {\n          q[prop]['$lte'] = toValue;\n        }\n        query.addQuery(q);\n      }\n    }\n    \n    if (filterOptions.type === 'text') {\n      let q:any = {$or: []};\n      let values = filterValue.split(',');\n      for (let index in values) {\n        let qq:any ={};\n        const v = this.escapeRegExp(values[index].trim());\n        qq[prop] = {\n          $regex: \".*\" + v + \".*\",\n          $options: '-i'\n        };\n        q.$or.push(qq);\n      }\n      if (q.$or.length) query.addQuery(q);\n    }\n\n    if (filterOptions.type === 'categories') {\n      // no filter if contains the _all_ keyword (meaning filtering by all)\n      if (filterValue.indexOf('_all_') !== -1) return;\n\n      let categories;\n      if (filterOptions.ObjectId === false) {\n        categories = filterValue.split(',').map((item:string) => item.trim() );\n      } else {\n        try {\n          categories = filterValue.split(',').map((item:string) => new ObjectId(item.trim()) );\n        } catch (error) {\n          throw new Error(`Invalid ObjectId in relationTo filter`);\n        }\n      }\n      let q:any = {};\n      q[prop] = {\n        $in: categories\n      }\n      query.addQuery(q);\n    }\n\n    if (filterOptions.type === 'tags') {\n      // no filter if contains the _all_ keyword (meaning filtering by all)\n      if (filterValue.indexOf('_all_') !== -1) return;\n      let q:any = {};\n      if (filterValue.indexOf('__none__') !== -1) {\n        q[`${prop}.0`] = {$exists: false};\n        query.addQuery(q);\n        return;\n      }\n      let tags = filterValue.split(',').map((item: string) => item.trim() );\n      q[prop] = {\n        $all: tags\n      }\n      query.addQuery(q);\n    }\n\n    if (filterOptions.type === 'date') {\n      // if field has ':' symbol in filterValue => it's a date range\n      // the left part of \":\" is from\n      // the right part of \":\" is to\n      // if the field doesn't have the \":\" symbol => it's an exact date\n\n      //let value = req.query[field]; => filterValue\n      let dateFormat = deco.propertyTypesOptions.dateFormat || Settings.defaultDateFormat;\n      let fromDate = null;\n      let toDate = null;\n      if (filterValue.indexOf(':') === -1) {\n        // perform an exact date match\n        fromDate = moment(filterValue, dateFormat).startOf('day');\n        toDate = moment(fromDate).add(1, 'days');\n      } else {\n        let dates = filterValue.split(':');\n        fromDate = dates[0] ? moment(dates[0], dateFormat).startOf('day') : null;\n        toDate = dates[1] ? moment(dates[1], dateFormat).endOf('day') : null;\n      }\n\n      let q:any = {};\n      q[prop] = {};\n      if (fromDate) {\n        q[prop]['$gte'] = fromDate.toDate();\n      }\n      if (toDate) {\n        q[prop]['$lte'] = toDate.toDate();\n      }\n      query.addQuery(q);\n    }\n\n    if (filterOptions.type === 'id') {\n      if(prop === 'id') prop = '_id';\n\n      if (!filterValue) {\n        // filtering elements that do not have an on this ID field\n        let q: any = {$or: []};\n        let notExist: any = {};\n        notExist[prop] = {$exists: false};\n        let isnull: any = {};\n        isnull[prop] = null;\n        q.$or.push(notExist);\n        q.$or.push(isnull);\n        query.addQuery(q);\n      } else {\n        let id: ObjectId;\n        try {\n          id = new ObjectId(filterValue.trim());\n        } catch (error) {\n          throw new Error(`Invalid ObjectId in id filter (${filterValue})`);\n        }\n  \n        let q: any = {};\n        q[prop] = id;\n        query.addQuery(q);\n      }\n    }\n\n    if (filterOptions.type === 'ids') {\n      if (!filterValue) {\n        // filtering elements that do not have an on this ID field\n        if(prop === 'id') prop = '_id';\n        let q: any = {$or: []};\n        let notExist: any = {};\n        notExist[prop] = {$exists: false};\n        let isnull: any = {};\n        isnull[prop] = null;\n        q.$or.push(notExist);\n        q.$or.push(isnull);\n        query.addQuery(q);\n      } else {\n        let ids = filterValue.split(',').map((item: string) => {\n          let id: ObjectId;\n\n          try {\n            id = new ObjectId(item.trim());\n          } catch (error) {\n            throw new Error(`Invalid ObjectId in id filter (${item} in ${filterValue})`);\n          }\n  \n          return id;\n        });\n        if(prop === 'id') prop = '_id';\n        let q:any = {};\n        q[prop] = {\n          $in: ids\n        };\n        query.addQuery(q);\n      }\n    }\n\n    if (filterOptions.type === 'boolean') {\n      // passing all or -1 means true or false\n      if (filterValue === 'all' || filterValue === -1) return;\n      let value = null;\n      if (filterValue === true || filterValue === 'true' || filterValue === 1 || filterValue === '1') {\n        value = true;\n      }\n      if (filterValue === false || filterValue === 'false' || filterValue === 0 || filterValue === '0') {\n        value = false;\n      }\n      if (value === null) {\n        return;\n      }\n\n      let q: any = {};\n      q[prop] = value;\n      query.addQuery(q);\n    }\n\n    if (filterOptions.type === 'array') {\n      // todo: array filter type\n    }\n\n    if (filterOptions.type === 'query') {\n      traverse(filterValue).forEach(function(v) {\n        if (typeof v === 'string' && v.substr(0, 3) === 'id:') {\n          try {\n            const id = new ObjectId(v.substr(3));\n            this.update(id);\n          } catch (error) {\n            // do nothing\n          }\n        }\n      });\n      if (filterValue.$or && filterValue.$and) {\n        throw new Error('Invalid query filter ($or and $and cannot be used together)');\n      }\n      if (filterValue.$or && Array.isArray(filterValue.$or)) {\n        let orQuery: any = {$or: []};\n        (filterValue.$or as Array<any>).reduce((array, query) => {\n          let q: any = {};\n          if (prop === '__global__') {\n            q = query;\n          } else {\n            q[prop] = query;\n          }\n          array.$or.push(q);\n          return array;\n        }, orQuery);\n        query.addQuery(orQuery);\n      } else if (filterValue.$and && Array.isArray(filterValue.$and)) {\n        let andQuery: any = {$and: []};\n        (filterValue.$and as Array<any>).reduce((array, query) => {\n          let q: any = {};\n          if (prop === '__global__') {\n            q = query;\n          } else {\n            q[prop] = query;\n          }\n          array.$and.push(q);\n          return array;\n        }, andQuery);\n        query.addQuery(andQuery);\n      } else {\n        let q: any = {};\n        if (prop === '__global__') {\n          q = filterValue;\n        } else {\n          q[prop] = filterValue;\n        }\n        query.addQuery(q);\n      }\n    }\n  }\n\n  prepareQueryFromReq() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      const options: QueryFromReqOptions = {};\n      if (res.locals.searchQuery) {\n        options.searchQuery = res.locals.searchQuery;\n      }\n      if (res.locals.filterQueries) {\n        options.filterQueries = res.locals.filterQueries;\n      }\n      this.queryFromReq(req, res, undefined, options).then((query: Query) => {\n        res.locals.query = query;\n        next();\n      }).catch(next);\n    }\n  }\n\n  autoFetch(autoFetchConfigs: Array<AutoFetchConfig>, send: boolean = true) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      let autoFetchSingleElement: boolean = false;\n      afDebug('*** START AUTOFETCH ***', autoFetchConfigs);\n      let elements: Array<Model> = res.locals.elements;\n      if (!elements && res.locals.element) {\n        elements = [res.locals.element];\n        autoFetchSingleElement = true;\n      }\n      if (!req.query.autoFetch || !elements || !elements.length) {\n        if (send) {\n          res.send(elements);\n        } else {\n          next();\n        }\n        return;\n      }\n      let requestedAutoFetch = (req.query.autoFetch as string).split(',');\n      \n      \n      afDebug('** requestedAutoFetch', requestedAutoFetch);\n      let autoFetchIds: Array<Array<ObjectId>> = [];\n      let autoFetchPromises: Array<Promise<any>> = [];\n\n      // init autoFetchIds and autoFetchPromises\n      autoFetchConfigs.map((value, index) => {\n        autoFetchIds[index] = [];\n        autoFetchPromises[index] = Promise.resolve();\n      });\n\n      function resolveValuesInArray(object: any, path: string) {\n        let splitedPath = path.split('.');\n        let lastProp = splitedPath[splitedPath.length - 1];\n        let firstPath = splitedPath.slice(0, splitedPath.length - 1).join('.');\n        let potentialArray = resolvePath(object, firstPath);\n        if (!Array.isArray(potentialArray)) return undefined;\n        return potentialArray.map(i => resolvePath(i, lastProp));\n      }\n\n      // collected all ids\n      for (let element of elements) {\n        for (let index in autoFetchConfigs) {\n          let config = autoFetchConfigs[index];\n          if (requestedAutoFetch.indexOf(config.destinationKey) === -1) continue;\n          let el: any = element;\n          let value = resolvePath(el, config.originalKey);\n          if (value === undefined) {\n            // try to get an array of value\n            value = resolveValuesInArray(el, config.originalKey);\n            if (value !== undefined) afDebug('yes, resolving with array function was helpful');\n          }\n          afDebug(`element [${config.originalKey}]`, value);\n          if (!value) continue;\n          if (value instanceof ObjectId) {\n            autoFetchIds[index].push(value);\n          } else if (typeof value === 'string') {\n            let objId: ObjectId;\n            try {\n              objId = new ObjectId(value);\n            } catch (error) {\n              throw new Error('Invalid ObjectId when try auto-fetch');\n            }\n            autoFetchIds[index].push(objId);\n          } else if (Array.isArray(value)) {\n            for (let v of value) {\n              let objId: ObjectId;\n              try {\n                objId = new ObjectId(v);\n              } catch (error) {\n                throw new Error('Invalid ObjectId when try auto-fetch');\n              }\n              autoFetchIds[index].push(objId);\n            }\n          }\n        }\n      }\n      // fetch all related elements\n      for (let index in autoFetchConfigs) {\n        afDebug('autoFetchIds[index]', autoFetchIds[index]);\n        if (!autoFetchIds[index].length) continue;\n        let config = autoFetchConfigs[index];\n        if (config.includeModelProp.indexOf(config.matchingKeyInRelatedModel) === -1) {\n          config.includeModelProp.push(config.matchingKeyInRelatedModel);\n        }\n        let getAllConfig: GetAllOptions = {};\n        let getAllConfigPromise = Promise.resolve(getAllConfig);\n        if (config.deco) {\n          getAllConfigPromise = Promise.resolve(config.deco).then((deco) => {\n            getAllConfig = {deco: deco};\n            return getAllConfig;\n          });\n        }\n        let matchingKey = config.matchingKeyInRelatedModel;\n        let q: any = {};\n        q[matchingKey] = {$in: autoFetchIds[index]};\n        let query: Query = new Query();\n        if (config.baseQuery) query.addQuery(config.baseQuery);\n        query.addQuery(q);\n        afDebug('-----');\n        afDebug('query for index', index, query.print());\n        afDebug('-----');\n        autoFetchPromises[index] = getAllConfigPromise.then((getAllConfig) => {\n          return config.model.getAll(query, getAllConfig);\n        }).then((relatedElements) => {\n          if (relatedElements.length) {\n            // some typeDecorator need the request in the element (exemple: StringDecorator)\n            relatedElements.map(re => re.request = req);\n            return config.model.outputList(relatedElements, config.includeModelProp, true);\n          } \n          return relatedElements;\n        });\n      }\n\n      return Promise.all(autoFetchPromises).then((elementsByConfig) => {\n        for (let index in elementsByConfig) {\n          if (!elementsByConfig[index]) elementsByConfig[index] = [];\n          //afDebug(`elementsByConfig[${index}]`, elementsByConfig[index]);\n          afDebug(`elementsByConfig[${index}]`, elementsByConfig[index].length, 'elements');\n        }\n        // include related elements\n        afDebug('** Start Inluding Elements');\n        for (let index in autoFetchConfigs) {\n          afDebug('* Index', index);\n          let config = autoFetchConfigs[index];\n          if (!elementsByConfig[index] || !elementsByConfig[index].length) continue;\n          let matchingKey = config.matchingKeyInRelatedModel;\n          let elementsByIds: StringTMap<Model> = {};\n          let elementsByIdsArray: StringTMap<Array<Model>> = {};\n          for (let relatedElement of elementsByConfig[index]) {\n            if (matchingKey === '_id' && relatedElement._id === undefined && relatedElement.id) {\n              matchingKey = 'id';\n            }\n            let matchingId = relatedElement[matchingKey];\n            elementsByIds[matchingId] = relatedElement;\n            if (!elementsByIdsArray[matchingId]) elementsByIdsArray[matchingId] = [];\n            elementsByIdsArray[matchingId].push(relatedElement);\n          }\n          for (let element of elements) {\n            let el: any = element;\n            let value = resolvePath(el, config.originalKey);\n            if (value === undefined) {\n              // try to get an array of value\n              value = resolveValuesInArray(el, config.originalKey);\n              if (value !== undefined) afDebug('yes, resolving with array function was helpful');\n            }\n            if (!value) continue;\n            // scenarios:\n            // 1. value is string or objectid and we fetch single value => save as single object\n            // 2. value is string or objectid and we fetch multiple values => save as an array and push each releated element in this array\n            // 3. value is array and we fetch single => save single object directly linked to the array value\n            // 4. should we treat the case when value is array and we fetch array ???\n\n            let isArray = (Array.isArray(value));\n            let isMultiple = config.fetchMultiple === true;\n\n            afDebug('scenario', 'isArray', isArray, 'isMultiple', isMultiple);\n\n            if (!isArray && !isMultiple) {\n              el[config.destinationKey] = elementsByIds[value.toString()];\n            } else if (!isArray && isMultiple) {\n              el[config.destinationKey] = elementsByIdsArray[value.toString()];\n            } else if (isArray && !isMultiple) {\n              let finalValue: Array<any> = [];\n              for (let id of value) {\n                let key = id.toString();\n                if (elementsByIds[key]) finalValue.push(elementsByIds[key]);\n                else finalValue.push(null);\n              }\n              el[config.destinationKey] = finalValue;\n            } else if (isArray && isMultiple) {\n              let finalValue: Array<any> = [];\n              for (let id of value) {\n                let key = id.toString();\n                if (elementsByIdsArray[key]) finalValue.push(elementsByIdsArray[key]);\n                else finalValue.push(null);\n              }\n              el[config.destinationKey] = finalValue;\n            }\n          }\n        }\n      \n        if (send) {\n          if (autoFetchSingleElement) {\n            res.send(elements[0]);\n          } else {\n            res.send(elements);\n          }\n        } else {\n          if (autoFetchSingleElement) {\n            res.locals.element = elements[0];\n          } else {\n            res.locals.elements = elements;\n          }\n          next();\n        }\n      }).catch(next);\n    }\n  }\n\n  public getAll(query: Query | null = null, options?: ControllerGetAllOptions) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      const currentRequestOptions = Object.assign({}, options);\n      let _query: Query = new Query();\n      if (query !== null && res.locals.query !== undefined) return next(new Error('Query is defined both from the getAll() call and the res.locals.query variable. This is not allowed.'))\n      if (res.locals.query && res.locals.query instanceof Query) _query = res.locals.query;\n      if (_query === null) _query = new Query();\n      this.extendRequest(req, 'getAll').then(() => {\n        return this.extendGetAllQuery(_query, req, res);\n      }).then(async () => {\n        let modelOptions: GetAllOptions = {};\n        modelOptions.deco = this.getModelDeco(req, res);\n        modelOptions.addCountInKey = currentRequestOptions?.addCountInKey;\n        if (currentRequestOptions && currentRequestOptions.enableLastModifiedCaching) {\n          const lastElements = await modelOptions.deco.db.collection(modelOptions.deco.collectionName)\n          .find(_query.onlyQuery())\n          .skip(_query.onlySkip())\n          .limit(1)\n          .sort({_updatedAt: -1}).toArray();\n          res.setHeader('Cache-Control', 'private, must-revalidate');\n          if (lastElements.length && lastElements[0]._updatedAt) {\n            const DATE_RFC2822 = \"ddd, DD MMM YYYY HH:mm:ss ZZ\";\n            const lastElementModified = moment(lastElements[0]._updatedAt).format(DATE_RFC2822);\n            res.setHeader('Last-Modified', lastElementModified);\n            if (req.header('If-Modified-Since') && req.header('If-Modified-Since') === lastElementModified) {\n              res.send(304);\n              currentRequestOptions.ignoreSend = true;\n              return [];\n            }\n          }\n        }\n        return this.model.getAll(_query, modelOptions, req, res);\n      }).then((elements) => {\n        for (let element of elements) {\n          element.request = req;\n        }\n        if (currentRequestOptions && currentRequestOptions.ignoreOutput) return Promise.resolve(elements);\n        const allowExtra = currentRequestOptions?.addCountInKey ? [currentRequestOptions.addCountInKey] : [];\n        return this.model.outputList(elements, undefined, false, allowExtra);\n      }).then((element) => {\n        return this.postOutputList(element, req, res);\n      }).then((elements) => {\n        res.locals.elements = elements;\n        if (!currentRequestOptions || !currentRequestOptions.ignoreSend) res.send(elements);\n        else next();\n      }).catch(next);\n    };\n  }\n\n  prepareGetOneQuery(elementId: string | ObjectId, req: Request, res: Response, options: GetOneOptions): Promise<Query> {\n    if (typeof elementId === 'string') {\n      try {\n        elementId = new ObjectId(elementId);\n      } catch (_error) {\n        throw new Error('Invalid elementId');\n      }\n    }\n    let query = new Query({_id: elementId});\n    return this.extendGetOneQuery(query, req, res, options).then(() => {return query});\n  }\n  \n  getOne(options?: ControllerGetOneOptions) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      let getOneOptions: GetOneOptions = {};\n      this.extendRequest(req, 'getOne').then(() => {\n        return this.getOneElementId(req.params.elementId, req, res);\n      }).then((elementId) => {\n        getOneOptions.deco = this.getModelDeco(req, res);\n        return this.prepareGetOneQuery(elementId, req, res, getOneOptions);\n      }).then((query) => {\n        return this.model.getOneWithQuery(query, getOneOptions);\n      }).then((element: any): Promise<any> => {\n        if (!element) return Promise.reject('Element not found');\n        element.request = req;\n        return this.getOneElement(element, req, res);\n      }).then((element) => {\n        if (options && options.ignoreDownload) return Promise.resolve(element);\n        return this.processDownload(req, res, element);\n      }).then((element) => {\n        if (res.locals.fileSent || (options && options.ignoreOutput)) return Promise.resolve(element);\n        return element.output();\n      }).then((element) => {\n        return this.postOutput(element, req, res);\n      }).then((element) => {\n        res.locals.element = element;\n        if (!res.locals.fileSent) {\n          if (options && options.ignoreSend) {\n            next();\n          } else {\n            res.send(element);\n          }\n        }\n      }).catch(next);\n    };\n  }\n\n  /**\n   * Process the query to find any downloadable files\n   * ?download=image : will try to download the file placed in the image property of the model (if any)\n   * By default, it will download the original file, except if the query has a preview= parameter\n   * ?preview=800:600 : will try to download the smaller file that has at least 800 px width and 600 px height\n   * ?preview=800 : will try to download the smaller file that has at least 800 px width\n   * ?preview=:600 : will try to download the smaller file that has at least 600 px height\n   * For properties of type \"files\", the query must also contain a \"fileId\" paramater, indicating which file to download from the array\n   */\n  processDownload(req: Request, res: Response, element: Model): Promise<Model> {\n    const env = process.env.NODE_ENV || 'production'; // benefit of the doubt to production environement\n    if (!req.query || !req.query.download) return Promise.resolve(element);\n    let prop:string = (req.query.download as string);\n    let deco = this.getModelDeco(req, res);\n    let fileProperties = Model.getDecoProperties(deco, ['file', 'files']);\n\n    if (fileProperties.indexOf(prop) === -1) return Promise.resolve(element);\n    // here we know that we have a download request for a file property\n    if (!(element as any)[prop]) throw new Error('File not found');\n\n\n    let typeDecorator = deco.propertyTypes[prop];\n    let options = deco.propertyTypesOptions[prop];\n    let propValue = (element as any)[prop];\n    if (typeDecorator.name === 'files') {\n      // because it's an array of files, we must find the right fileId\n      if (!Array.isArray(propValue) || propValue.length === 0) return Promise.resolve(element);\n      if (!req.query.fileId) return Promise.resolve(element);\n      let found = false;\n      for (let file of propValue) {\n        if (file.filename === req.query.fileId) {\n          propValue = file;\n          found = true;\n          break;\n        }\n      }\n      if (!found) return Promise.resolve(element);\n    }\n\n    if (env === 'development' && (req.url.indexOf('localhost') !== -1 || req.url.indexOf('/stage/') !== -1)) {\n      let replaceValues: StringTMap<any> = {\n        \"application/octet-stream\": {\n          \"originalname\": \"dwg1.dwg\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"dcab268d062b473c3d6a68edb4ba8bcd\",\n          \"path\": \"uploads-files-fake/dcab268d062b473c3d6a68edb4ba8bcd\",\n          \"size\": 2850878\n        },\n        \"image/jpeg\": {\n          \"originalname\": \"jpg4.jpg\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"5632ba3e5621632ad8c6f2aa84c2de44\",\n          \"path\": \"uploads-files-fake/5632ba3e5621632ad8c6f2aa84c2de44\",\n          \"size\": 1933082,\n          \"width\": 3264,\n          \"height\": 1836,\n          \"ratio\": 1.7777777777777777,\n          \"previews\": [{\n            \"encoding\": \"7bit\",\n            \"mimetype\": \"image/png\",\n            \"destination\": \"uploads-files-fake/\",\n            \"filename\": \"8ed95ad194cc5edfefb16660d18091d1\",\n            \"path\": \"uploads-files-fake/8ed95ad194cc5edfefb16660d18091d1\",\n            \"size\": 148880,\n            \"width\": 320,\n            \"height\": 320,\n            \"ratio\": 1\n          }]\n        },\n        \"image/jpg\": {\n          \"originalname\": \"jpg4.jpg\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"5632ba3e5621632ad8c6f2aa84c2de44\",\n          \"path\": \"uploads-files-fake/5632ba3e5621632ad8c6f2aa84c2de44\",\n          \"size\": 1933082,\n          \"width\": 3264,\n          \"height\": 1836,\n          \"ratio\": 1.7777777777777777,\n          \"previews\": [{\n            \"encoding\": \"7bit\",\n            \"mimetype\": \"image/png\",\n            \"destination\": \"uploads-files-fake/\",\n            \"filename\": \"8ed95ad194cc5edfefb16660d18091d1\",\n            \"path\": \"uploads-files-fake/8ed95ad194cc5edfefb16660d18091d1\",\n            \"size\": 148880,\n            \"width\": 320,\n            \"height\": 320,\n            \"ratio\": 1\n          }]\n        },\n        \"application/pdf\": {\n          \"originalname\": \"pdf1.pdf\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"2cce52ec1477e76d20c4aecbeaadd860\",\n          \"path\": \"uploads-files-fake/2cce52ec1477e76d20c4aecbeaadd860\",\n          \"size\": 355708\n        },\n        \"image/png\": {\n          \"originalname\": \"png1.png\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"2030f0c59b17cc112badae78f7ee1879\",\n          \"path\": \"uploads-files-fake/2030f0c59b17cc112badae78f7ee1879\",\n          \"size\": 820432,\n          \"width\": 3508,\n          \"height\": 6200,\n          \"ratio\": 0.5658064516129032,\n          \"previews\": [{\n            \"encoding\": \"7bit\",\n            \"mimetype\": \"image/png\",\n            \"destination\": \"uploads-files-fake/\",\n            \"filename\": \"98c3a9b35002c6b0e2927d139bd5e4bf\",\n            \"path\": \"uploads-files-fake/98c3a9b35002c6b0e2927d139bd5e4bf\",\n            \"size\": 23289,\n            \"width\": 320,\n            \"height\": 320,\n            \"ratio\": 1\n          }]\n        },\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n          \"originalname\": \"xlsx1.xlsx\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"a74455821ab12f60439c4f91a8f53dd8\",\n          \"path\": \"uploads-files-fake/a74455821ab12f60439c4f91a8f53dd8\",\n          \"size\": 167257\n        },\n        \"application/zip\": {\n          \"originalname\": \"zip1.zip\",\n          \"encoding\": \"7bit\",\n          \"destination\": \"uploads-files-fake/\",\n          \"filename\": \"a8e7b1120a8a530ceb66c821633f2d5a\",\n          \"path\": \"uploads-files-fake/a8e7b1120a8a530ceb66c821633f2d5a\",\n          \"size\": 33009675\n        }\n      };\n\n      if (replaceValues[propValue.mimetype]) {\n        for (let key in replaceValues[propValue.mimetype]) {\n          propValue[key] = replaceValues[propValue.mimetype][key];\n        }\n      } else {\n        throw new Error(`This mimetype has no fake file (${propValue.mimetype})`)\n      }\n    }\n\n    let downloadOriginal = (req.query.preview as string) ? false : true;\n    let fileSettings:any;\n    if (downloadOriginal) {\n      fileSettings = propValue;\n    }\n    if (!downloadOriginal) {\n      // determine the minHeight and minWidth\n      let preview = (req.query.preview as string);\n      let minWidth = 0;\n      let minHeight = 0;\n      if (preview.indexOf(':') === -1) {\n        minWidth = parseInt(preview, 10);\n      } else {\n        let dims = preview.split(':');\n        minWidth = dims[0] ? parseInt(dims[0], 10) : 0;\n        minHeight = dims[1] ? parseInt(dims[1], 10) : 0;\n      }\n      if (typeof minWidth !== 'number' || typeof minHeight !== 'number' || isNaN(minWidth) || isNaN(minHeight)) {\n        throw new Error('Invalid preview request');\n      }\n      // find the best possible preview\n      let currentFilePreview: any = null;\n      let currentFilePreviewSize: number = Infinity;\n      for (let preview of propValue.previews || []) {\n        if (preview.width >= minWidth && preview.height >= minHeight && preview.size < currentFilePreviewSize) {\n          currentFilePreview = preview;\n          currentFilePreviewSize = preview.size;\n        }\n      }\n      if (currentFilePreview) {\n        fileSettings = currentFilePreview;\n      } else {\n        // if we don't find a matching preview, we can still return the original if it's an image\n        if (propValue.mimetype.substr(0, 6) === 'image/') {\n          fileSettings = propValue;\n        }\n      }\n    }\n    if (!fileSettings) {\n      throw new Error('Preview not found')\n    }\n    // let filename = fileSettings.originalname;\n    // res.setHeader('Content-Type', fileSettings.mimetype);\n    // res.setHeader('Content-Disposition', 'attachment; filename=\"' + encodeURIComponent(filename) + '\"');\n    // res.setHeader('Content-Length', fileSettings.size);\n    // if (req.query.fileId) {\n    //   res.setHeader('Cache-Control', 'private, max-age=31536000, immutable');\n    // }\n    // let stream = fs.createReadStream(fileSettings.path);\n    // debug('stream ready');\n    // stream.on('end', function() {\n    //   res.status(200);\n    //   debug('status sent');\n    // });\n    // stream.pipe(res);\n    // debug('piped');\n    // res.locals.fileSent = true;\n\n\n    // Check if the file is readable.\n    return new Promise((resolve, reject) => {\n      fs.access(fileSettings.path, fs.constants.R_OK, (err) => {\n        if (err) return reject(new Error('File not found'));\n        res.setHeader('Content-Type', fileSettings.mimetype);\n        let filename = fileSettings.originalname;\n        res.setHeader('Content-Disposition', 'attachment; filename=\"' + encodeURIComponent(filename) + '\"');\n        res.setHeader('Content-Length', fileSettings.size);\n        if (req.query.fileId) {\n          res.setHeader('Cache-Control', 'private, max-age=31536000, immutable');\n        }\n        //let access = fs.accessSync(fileSettings.path);\n        let stream = fs.createReadStream(fileSettings.path);\n        stream.pipe(res);\n        res.locals.fileSent = true;\n        resolve(element);\n      });\n\n    });\n  }\n\n  post(options?: ControllerPostOptions) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      this.extendRequest(req, 'post').then(() => {\n        return this.preInput(null, req, res);\n      }).then(() => {\n        return this.model.instanceFromRequest(req, res);\n      }).then((element) => {\n        return this.postElement(element, req, res);\n      }).then((element) => {\n        return element.insert();\n      }).then((element) => {\n        element.request = req;\n        return this.postAfterInsert(element, req, res);\n      }).then((element) => {\n        if (options && options.ignoreOutput) return Promise.resolve(element);\n        return element.output();\n      }).then((element) => {\n        return this.postOutput(element, req, res);\n      }).then((element) => {\n        res.locals.element = element;\n        if (!options || !options.ignoreSend) res.send(element);\n        else next();\n      }).catch(next);\n    };\n  }\n\n  postMany(options?: ControllerPostManyOptions) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      this.extendRequest(req, 'post').then(() => {\n        return this.preInput(null, req, res);\n      }).then(() => {\n        return this.model.instanceFromRequest(req, res);\n      }).then((element) => {\n        return this.postElement(element, req, res);\n      }).then(async (element) => {\n        const quantity = await this.postManyQuantity(element, req, res, options?.quantity);\n        let elements = await element.insertMany(quantity);\n        elements = await Promise.all(elements.map(async (element) => {\n          return await this.postAfterInsert(element, req, res);\n        }));\n        if (!options || !options.ignoreOutput) {\n          elements = await Promise.all(elements.map(async (element) => {\n            return await element.output();\n          }));\n        }\n        elements = await Promise.all(elements.map(async (element) => {\n          return await this.postOutput(element, req, res);\n        }));\n        res.locals.elements = elements;\n        if (!options || !options.ignoreSend) res.send(elements);\n        else next();\n      }).catch(next);\n    };\n  }\n\n  put(options?: ControllerPutOptions) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    if (!options) options = {};\n    if (options.ignoreOutput === undefined) options.ignoreOutput = false;\n    if (options.ignoreSend === undefined) options.ignoreSend = false;\n    if (options.setUpdatePropertiesWithBodyKeys === undefined) options.setUpdatePropertiesWithBodyKeys = true;\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      let getOneOptions: GetOneOptions = {};\n      this.extendRequest(req, 'put').then(() => {\n        return this.putElementId(req.params.elementId, req, res);\n      }).then((elementId) => {\n        getOneOptions.deco = this.getModelDeco(req, res);\n        return this.prepareGetOneQuery(elementId, req, res, getOneOptions);\n      }).then((query) => {\n        return this.model.getOneWithQuery(query, getOneOptions);\n      }).then((element: any): Promise<any> => {\n        if (!element) return Promise.reject('Element not found');\n        element.request = req;\n        return this.putElement(element, req, res);\n      }).then((element) => {\n        return this.preInput(element, req, res);\n      }).then((element) => {\n        return element.updateInstanceFromRequest(req, res);\n      }).then((element) => {\n        let properties = undefined;\n        if (options && options.setUpdatePropertiesWithBodyKeys) {\n          properties = Object.keys(req.body);\n        }\n        return element.update(properties);\n      }).then((element) => {\n        element.request = req;\n        return this.putAfterUpdate(element, req, res);\n      }).then((element) => {\n        if (options && options.ignoreOutput) return Promise.resolve(element);\n        return element.output();\n      }).then((element) => {\n        return this.postOutput(element, req, res);\n      }).then((element) => {\n        res.locals.element = element;\n        if (options && !options.ignoreSend) res.send(element);\n        else next();\n      }).catch(next);\n    };\n  }\n\n  delete(options = {ignoreSend: false}) {\n    if (!this.model || this.model !instanceof Model) throw new Error('Invalid Model');\n\n    return (req: Request, res: Response, next: NextFunction) => {\n      let getOneOptions: GetOneOptions = {};\n      getOneOptions.deco = this.getModelDeco(req, res);\n      this.extendRequest(req, 'delete').then(() => {\n        return this.deleteElementId(req.params.elementId, req, res);\n      }).then((elementId) => {\n        return this.prepareGetOneQuery(elementId, req, res, getOneOptions);\n      }).then((query) => {\n        return this.model.getOneWithQuery(query, getOneOptions);\n      }).then((element: any): Promise<any> => {\n        if (!element) return Promise.reject('element not found');\n        element.request = req;\n        return this.deleteElement(element, req, res);\n      }).then((element) => {\n        return element.remove();\n      }).then((result): any => {\n        return this.deleteAfterDelete(result, req, res);\n      }).then((result): any => {\n        res.locals.result = result;\n        if (result && !options.ignoreSend) return res.sendStatus(204);\n        if (result && options.ignoreSend) return next();\n        return Promise.reject(new Error('Unknown error'));\n      }).catch(next);\n    };\n  }\n\n  sendLocals(key: string, output: boolean | 'list' = false, model?: typeof Model) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      let value = res.locals[key];\n      if (value === undefined) return res.sendStatus(204);\n      if (output === true && value.output && typeof value.output === 'function') {\n        return value.output().then((value: any) => res.send(value));\n      } else if (output === 'list' && model) {\n        return model.outputList(value).then((value: any) => res.send(value));\n      }\n      return res.send(value);\n    }\n  }\n\n  allowOnlyInBody(props: Array<string>) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      let newBody: StringAnyMap = {};\n      for (let key in req.body) {\n        if (props.indexOf(key) !== -1) newBody[key] = req.body[key];\n      }\n      req.body = newBody;\n      next();\n    }\n  }\n\n  debug(message: string) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      debug('Controller debug', message);\n      next();\n    };\n  }\n\n  static getAllRoute(): string { return '/'; }\n  static getOneRoute(): string { return '/:elementId'; }\n  static postRoute(): string { return '/'; }\n  static putRoute(): string { return '/:elementId'; }\n  static deleteRoute(): string { return '/:elementId'; }\n\n  public static preventProperties(props: Array<string>) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      for (let prop of props) {\n        if (req.body[prop]) {\n          return next(new Error('Operation not permitted, editing: ' + prop));\n        }\n      }\n      next();\n    }\n  }\n\n}\n\nexport interface QueryFromReqOptions {\n  searchQuery?: {$or: Array<any>};\n  filterQueries?: any[];\n}"]}