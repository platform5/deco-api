{"version":3,"file":"cors.js","sourceRoot":"","sources":["../../src/middlewares/cors.ts"],"names":[],"mappings":";;AACA,MAAa,cAAc;IAEzB,MAAM,CAAC,eAAe;QACpB,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YAEzD,IAAI,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,gCAAgC,CAAC,IAAI,8DAA8D,CAAC;YAC/H,GAAG,CAAC,SAAS,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;YAClD,GAAG,CAAC,SAAS,CAAC,8BAA8B,EAAE,YAAY,CAAC,CAAC;YAC5D,GAAG,CAAC,SAAS,CAAC,8BAA8B,EAAE,wCAAwC,CAAC,CAAC;YACxF,GAAG,CAAC,SAAS,CAAC,kCAAkC,EAAE,MAAM,CAAC,CAAC;YAEhE;;;;;sBAKU;YACJ,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS;gBAAE,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;YAChD,IAAI,EAAE,CAAC;QACT,CAAC,CAAA;IACH,CAAC;CAEF;AAtBD,wCAsBC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nexport class CorsMiddleware {\n\n  static allowEverything() {\n    return (req: Request, res: Response, next: NextFunction) => {\n\n      let allowHeaders = req.get('Access-Control-Request-Headers') || 'content-type, authorization, Cache-Control, X-Requested-With';\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Allow-Headers', allowHeaders);\n      res.setHeader('Access-Control-Allow-Methods', 'OPTIONS,HEAD,PATCH,GET,POST,PUT,DELETE');\n      res.setHeader('Access-Control-Allow-Credentials', 'true');\n\n/*\n      \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"content-type, authorization, Cache-Control, X-Requested-With, preview-control\",\n        \"Access-Control-Allow-Methods\": \"OPTIONS,GET,POST,PUT,DELETE\",\n        \"Access-Control-Allow-Credentials\": \"true\"\n        */\n      if (req.method === 'OPTIONS') return res.send();\n      next();\n    }\n  }\n\n}"]}